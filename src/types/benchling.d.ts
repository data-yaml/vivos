import type {
  OpenAPIClient,
  Parameters,
  UnknownParamsObject,
  OperationResponse,
  AxiosRequestConfig,
} from 'openapi-client-axios';

declare namespace Components {
    namespace Schemas {
        export interface AIGGenerateInputAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: AutomationInputGenerator;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface AOPProcessOutputAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: AutomationOutputProcessor;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface AaAnnotation {
            color?: string;
            /**
             * 0-based exclusive end index. The end of the AA sequence is always represented as 0.
             */
            end?: number;
            /**
             * example:
             * prtnann_o7zMPG0P
             */
            id?: string;
            name?: string;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * Site
             */
            type?: string;
        }
        export interface AaSequence {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * Amino acids of the AA sequence.
             * example:
             * IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
             */
            aminoAcids?: string;
            /**
             * Array of annotation objects on the AA sequence.
             */
            annotations?: AaAnnotation[];
            /**
             * The canonical url of the AA Sequence in the API.
             * example:
             * https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * DateTime the AA sequence was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the AA sequence.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the AA sequence if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the AA sequence.
             */
            folderId?: string | null;
            /**
             * ID of the AA sequence.
             * example:
             * prtn_ObbdtGhC
             */
            id?: string;
            /**
             * Number of amino acids in the AA sequence.
             */
            length?: number;
            /**
             * DateTime the AA sequence was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the AA sequence.
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the AA sequence is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the protein.
             * example:
             * https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
             */
            webURL?: string; // uri
        }
        export interface AaSequenceBaseRequest {
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids?: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the AA sequence.
             *
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name?: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
        }
        export interface AaSequenceBaseRequestForCreate {
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the AA sequence.
             *
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
        }
        export interface AaSequenceBulkCreate {
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface AaSequenceBulkUpdate {
            id?: string;
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids?: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the AA sequence.
             *
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name?: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
        }
        export interface AaSequenceCreate {
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface AaSequenceRequestRegistryFields {
            entityRegistryId?: string;
        }
        export interface AaSequenceSummary {
            entityType?: "aa_sequence";
            /**
             * example:
             * prtn_ObbdtGhC
             */
            id?: string;
            type?: string;
        }
        export interface AaSequenceUpdate {
            /**
             * Aliases to add to the AA sequence
             */
            aliases?: string[];
            /**
             * Amino acids for the AA sequence.
             *
             */
            aminoAcids?: string;
            /**
             * Annotations to create on the AA sequence.
             *
             */
            annotations?: AaAnnotation[];
            /**
             * IDs of users to set as the AA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the AA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the AA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the AA sequence.
             *
             */
            folderId?: string;
            /**
             * Name of the AA sequence.
             *
             */
            name?: string;
            /**
             * ID of the AA sequence's schema.
             *
             */
            schemaId?: string;
            entityRegistryId?: string;
        }
        export interface AaSequenceWithEntityType {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * Amino acids of the AA sequence.
             * example:
             * IKTATARRELAETSWTGDRLWGFSDNWAPALRRPSPSALGK
             */
            aminoAcids?: string;
            /**
             * Array of annotation objects on the AA sequence.
             */
            annotations?: AaAnnotation[];
            /**
             * The canonical url of the AA Sequence in the API.
             * example:
             * https://benchling.com/api/v2/aa-sequences/prtn_7nMBOMm0
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * DateTime the AA sequence was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the AA sequence.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the AA sequence if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the AA sequence.
             */
            folderId?: string | null;
            /**
             * ID of the AA sequence.
             * example:
             * prtn_ObbdtGhC
             */
            id?: string;
            /**
             * Number of amino acids in the AA sequence.
             */
            length?: number;
            /**
             * DateTime the AA sequence was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the AA sequence.
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the AA sequence is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the protein.
             * example:
             * https://benchling.com/benchling/f/lib_55UxcIps-registry/prtn_7nMBOMm0-kedchain11/edit"
             */
            webURL?: string; // uri
            entityType?: "aa_sequence";
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface AaSequencesArchivalChange {
            aaSequenceIds?: string[];
            batchIds?: string[];
        }
        /**
         * The request body for archiving AA sequences.
         *
         */
        export interface AaSequencesArchive {
            aaSequenceIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface AaSequencesBulkCreateRequest {
            aaSequences?: [
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?,
                AaSequenceBulkCreate?
            ];
        }
        export interface AaSequencesBulkGet {
            aaSequences?: AaSequence[];
        }
        export interface AaSequencesBulkUpdateRequest {
            aaSequences?: AaSequenceBulkUpdate[];
        }
        export interface AaSequencesPaginatedList {
            aaSequences?: AaSequence[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving AA sequences.
         *
         */
        export interface AaSequencesUnarchive {
            aaSequenceIds: string[];
        }
        export interface AlignedNucleotideSequence {
            /**
             * example:
             * GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
             */
            bases?: string;
            /**
             * example:
             * Gene001
             */
            name?: string;
            /**
             * Fraction of bases between trimStart and trimEnd that match the template bases. Only present for Template Alignments; Will be empty for Consensus Alignments.
             *
             * example:
             * 0.505
             */
            pairwiseIdentity?: number; // float
            /**
             * example:
             * seq_MYmsnS1u
             */
            sequenceId?: string | null;
            /**
             * example:
             * 60
             */
            trimEnd?: number;
            /**
             * example:
             * 0
             */
            trimStart?: number;
        }
        export interface AlignedSequence {
            /**
             * example:
             * GTAGCAAAGANTAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGGGAAGCCATG
             */
            bases?: string;
            /**
             * example:
             * seq_MYmsnS1u
             */
            dnaSequenceId?: string | null;
            /**
             * example:
             * Gene001
             */
            name?: string;
            /**
             * Fraction of bases between trimStart and trimEnd that match the template bases. Only present for Template Alignments; Will be empty for Consensus Alignments.
             *
             * example:
             * 0.505
             */
            pairwiseIdentity?: number; // float
            /**
             * example:
             * 60
             */
            trimEnd?: number;
            /**
             * example:
             * 0
             */
            trimStart?: number;
        }
        export interface AppCanvas {
            blocks?: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SectionUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock | TableUiBlock)[];
            archiveRecord?: {
                reason?: /**
                 * Reason that canvases are being archived. Actual reason enum varies by tenant.
                 * example:
                 * Other
                 */
                AppCanvasesArchiveReason;
            } | null;
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
            app?: {
                /**
                 * The id of the Benchling app.
                 */
                id?: string;
            };
            /**
             * example:
             * cnvs_Q4mPJ34a
             */
            id?: string;
        }
        export interface AppCanvasBase {
            blocks?: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SectionUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock | TableUiBlock)[];
            archiveRecord?: {
                reason?: /**
                 * Reason that canvases are being archived. Actual reason enum varies by tenant.
                 * example:
                 * Other
                 */
                AppCanvasesArchiveReason;
            } | null;
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
        }
        export interface AppCanvasCreate {
            blocks: (ButtonUiBlockCreate | ChipUiBlockCreate | DropdownUiBlockCreate | DropdownMultiValueUiBlockCreate | MarkdownUiBlockCreate | SearchInputUiBlockCreate | SearchInputMultiValueUiBlockCreate | SectionUiBlockCreate | SelectorInputUiBlockCreate | SelectorInputMultiValueUiBlockCreate | TextInputUiBlockCreate | TableUiBlockCreate)[];
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
            /**
             * Identifier of the app owning this canvas. For backwards compatibility, this property will be temporarily optional until the requisite time window for breaking changes in beta endpoints has passed.
             *
             */
            appId: string;
        }
        export interface AppCanvasCreateBase {
            blocks?: (ButtonUiBlockCreate | ChipUiBlockCreate | DropdownUiBlockCreate | DropdownMultiValueUiBlockCreate | MarkdownUiBlockCreate | SearchInputUiBlockCreate | SearchInputMultiValueUiBlockCreate | SectionUiBlockCreate | SelectorInputUiBlockCreate | SelectorInputMultiValueUiBlockCreate | TextInputUiBlockCreate | TableUiBlockCreate)[];
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
        }
        export interface AppCanvasCreateUiBlockList {
            blocks?: (ButtonUiBlockCreate | ChipUiBlockCreate | DropdownUiBlockCreate | DropdownMultiValueUiBlockCreate | MarkdownUiBlockCreate | SearchInputUiBlockCreate | SearchInputMultiValueUiBlockCreate | SectionUiBlockCreate | SelectorInputUiBlockCreate | SelectorInputMultiValueUiBlockCreate | TextInputUiBlockCreate | TableUiBlockCreate)[];
        }
        export interface AppCanvasLeafNodeUiBlockList {
            children: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock)[];
        }
        export interface AppCanvasUiBlockList {
            blocks?: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SectionUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock | TableUiBlock)[];
        }
        export interface AppCanvasUpdate {
            blocks?: (ButtonUiBlockUpdate | ChipUiBlockUpdate | DropdownUiBlockUpdate | DropdownMultiValueUiBlockUpdate | MarkdownUiBlockUpdate | SearchInputUiBlockUpdate | SearchInputMultiValueUiBlockUpdate | SectionUiBlockUpdate | SelectorInputUiBlockUpdate | SelectorInputMultiValueUiBlockUpdate | TextInputUiBlockUpdate | TableUiBlockUpdate)[];
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
        }
        export interface AppCanvasUpdateBase {
            blocks?: (ButtonUiBlockUpdate | ChipUiBlockUpdate | DropdownUiBlockUpdate | DropdownMultiValueUiBlockUpdate | MarkdownUiBlockUpdate | SearchInputUiBlockUpdate | SearchInputMultiValueUiBlockUpdate | SectionUiBlockUpdate | SelectorInputUiBlockUpdate | SelectorInputMultiValueUiBlockUpdate | TextInputUiBlockUpdate | TableUiBlockUpdate)[];
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
        }
        export interface AppCanvasUpdateUiBlockList {
            blocks?: (ButtonUiBlockUpdate | ChipUiBlockUpdate | DropdownUiBlockUpdate | DropdownMultiValueUiBlockUpdate | MarkdownUiBlockUpdate | SearchInputUiBlockUpdate | SearchInputMultiValueUiBlockUpdate | SectionUiBlockUpdate | SelectorInputUiBlockUpdate | SelectorInputMultiValueUiBlockUpdate | TextInputUiBlockUpdate | TableUiBlockUpdate)[];
        }
        export interface AppCanvasWriteBase {
            /**
             * Overall control for whether the canvas is interactable or not. If `false`, every block is disabled and will override the individual block's `enabled` property. If `true` or absent, the interactivity status will defer to the block's `enabled` property.
             *
             */
            enabled?: boolean;
            /**
             * Identifier of the feature defined in Benchling App Manifest this canvas corresponds to.
             */
            featureId?: string;
            /**
             * Identifier of the resource object to attach canvas to.
             */
            resourceId?: string;
            /**
             * Identifier of a session. If specified, app status messages from the session will be reported in the canvas.
             *
             * example:
             * sesn_SwKtkgB5
             */
            sessionId?: string | null;
        }
        /**
         * IDs of all items that were archived or unarchived. This includes the IDs of canvases that were archived / unarchived.
         *
         */
        export interface AppCanvasesArchivalChange {
            /**
             * example:
             * [
             *   "cnvs_Q4mPJ34a",
             *   "cnvs_aNz2kJNv"
             * ]
             */
            canvasIds?: string[];
        }
        export interface AppCanvasesArchive {
            /**
             * Array of canvas IDs
             * example:
             * [
             *   "cnvs_Q4mPJ34a",
             *   "cnvs_aNz2kJNv"
             * ]
             */
            canvasIds: string[];
            reason: /**
             * Reason that canvases are being archived. Actual reason enum varies by tenant.
             * example:
             * Other
             */
            AppCanvasesArchiveReason;
        }
        /**
         * Reason that canvases are being archived. Actual reason enum varies by tenant.
         * example:
         * Other
         */
        export type AppCanvasesArchiveReason = "Other";
        export interface AppCanvasesUnarchive {
            /**
             * Array of canvas IDs
             * example:
             * [
             *   "cnvs_Q4mPJ34a",
             *   "cnvs_aNz2kJNv"
             * ]
             */
            canvasIds: string[];
        }
        export type AppConfigItem = ArrayElementAppConfigItem | DateAppConfigItem | DatetimeAppConfigItem | JsonAppConfigItem | EntitySchemaAppConfigItem | FieldAppConfigItem | BooleanAppConfigItem | IntegerAppConfigItem | FloatAppConfigItem | TextAppConfigItem | GenericApiIdentifiedAppConfigItem | SecureTextAppConfigItem;
        export interface AppConfigItemApiMixin {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             */
            type?: string;
        }
        export interface AppConfigItemBooleanBulkUpdate {
            /**
             * example:
             * boolean
             */
            type: "boolean";
            value: boolean;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemBooleanCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * boolean
             */
            type: "boolean";
            value: boolean;
        }
        export interface AppConfigItemBooleanUpdate {
            /**
             * example:
             * boolean
             */
            type: "boolean";
            value: boolean;
        }
        export type AppConfigItemBulkUpdate = AppConfigItemGenericBulkUpdate | AppConfigItemBooleanBulkUpdate | AppConfigItemIntegerBulkUpdate | AppConfigItemFloatBulkUpdate | AppConfigItemDateBulkUpdate | AppConfigItemDatetimeBulkUpdate | AppConfigItemJsonBulkUpdate;
        export interface AppConfigItemBulkUpdateMixin {
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export type AppConfigItemCreate = AppConfigItemGenericCreate | AppConfigItemBooleanCreate | AppConfigItemIntegerCreate | AppConfigItemFloatCreate | AppConfigItemDateCreate | AppConfigItemDatetimeCreate | AppConfigItemJsonCreate;
        export interface AppConfigItemCreateMixin {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
        }
        export interface AppConfigItemDateBulkUpdate {
            /**
             * example:
             * date
             */
            type: "date"; // date
            value: string;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemDateCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * date
             */
            type: "date";
            value: string; // date
        }
        export interface AppConfigItemDateUpdate {
            /**
             * example:
             * date
             */
            type: "date"; // date
            value: string;
        }
        export interface AppConfigItemDatetimeBulkUpdate {
            /**
             * example:
             * datetime
             */
            type: "datetime"; // datetime
            value: string;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemDatetimeCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * datetime
             */
            type: "datetime";
            value: string; // datetime
        }
        export interface AppConfigItemDatetimeUpdate {
            /**
             * example:
             * datetime
             */
            type: "datetime"; // datetime
            value: string;
        }
        export interface AppConfigItemFloatBulkUpdate {
            /**
             * example:
             * float
             */
            type: "float";
            value: number; // float
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemFloatCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * float
             */
            type: "float";
            value: number; // float
        }
        export interface AppConfigItemFloatUpdate {
            /**
             * example:
             * float
             */
            type: "float";
            value: number; // float
        }
        export interface AppConfigItemGenericBulkUpdate {
            type: "container_schema" | "entity_schema" | "plate_schema" | "location_schema" | "box_schema" | "run_schema" | "result_schema" | "request_schema" | "entry_schema" | "workflow_task_schema" | "dropdown" | "dropdown_option" | "field" | "text" | "date" | "datetime" | "secure_text" | "json" | "registry" | "folder" | "entry" | "worklist" | "project" | "workflow_task_status" | "dna_sequence" | "dna_oligo" | "aa_sequence" | "custom_entity" | "mixture" | "molecule" | "rna_oligo" | "rna_sequence" | "box" | "container" | "location" | "plate";
            value: string;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemGenericCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            type: "container_schema" | "entity_schema" | "plate_schema" | "location_schema" | "box_schema" | "run_schema" | "result_schema" | "request_schema" | "entry_schema" | "workflow_task_schema" | "dropdown" | "dropdown_option" | "field" | "text" | "date" | "datetime" | "secure_text" | "json" | "registry" | "folder" | "entry" | "worklist" | "project" | "workflow_task_status" | "dna_sequence" | "dna_oligo" | "aa_sequence" | "custom_entity" | "mixture" | "molecule" | "rna_oligo" | "rna_sequence" | "box" | "container" | "location" | "plate";
            value: string;
        }
        export interface AppConfigItemGenericUpdate {
            type: "container_schema" | "entity_schema" | "plate_schema" | "location_schema" | "box_schema" | "run_schema" | "result_schema" | "request_schema" | "entry_schema" | "workflow_task_schema" | "dropdown" | "dropdown_option" | "field" | "text" | "date" | "datetime" | "secure_text" | "json" | "registry" | "folder" | "entry" | "worklist" | "project" | "workflow_task_status" | "dna_sequence" | "dna_oligo" | "aa_sequence" | "custom_entity" | "mixture" | "molecule" | "rna_oligo" | "rna_sequence" | "box" | "container" | "location" | "plate";
            value: string;
        }
        export interface AppConfigItemIntegerBulkUpdate {
            /**
             * example:
             * integer
             */
            type: "integer";
            value: number;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemIntegerCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * integer
             */
            type: "integer";
            value: number;
        }
        export interface AppConfigItemIntegerUpdate {
            /**
             * example:
             * integer
             */
            type: "integer";
            value: number;
        }
        export interface AppConfigItemJsonBulkUpdate {
            /**
             * example:
             * json
             */
            type: "json";
            value: string;
            /**
             * example:
             * aci_ae92kBv9aNSl593z
             */
            id: string;
        }
        export interface AppConfigItemJsonCreate {
            /**
             * App id to which this config item belongs.
             * example:
             * app_J39na03L1nsLS34o
             */
            appId: string;
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path: string[];
            /**
             * example:
             * json
             */
            type: "json";
            /**
             * The value of a json create object should be json parseable.
             */
            value: string;
        }
        export interface AppConfigItemJsonUpdate {
            /**
             * example:
             * json
             */
            type: "json";
            value: string;
        }
        export type AppConfigItemUpdate = AppConfigItemGenericUpdate | AppConfigItemBooleanUpdate | AppConfigItemIntegerUpdate | AppConfigItemFloatUpdate | AppConfigItemDateUpdate | AppConfigItemDatetimeUpdate | AppConfigItemJsonUpdate;
        export interface AppConfigItemsBulkCreateRequest {
            appConfigurationItems: [
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?,
                AppConfigItemCreate?
            ];
        }
        export interface AppConfigItemsBulkUpdateRequest {
            appConfigurationItems: [
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?,
                AppConfigItemBulkUpdate?
            ];
        }
        export interface AppConfigurationPaginatedList {
            nextToken?: string;
            appConfigurationItems?: AppConfigItem[];
        }
        export interface AppSession {
            app?: {
                /**
                 * The id of the Benchling app.
                 */
                id?: string;
            };
            createdAt?: string; // date-time
            id?: string;
            /**
             * An array of `SessionMessage` describing the current session state.
             *
             */
            messages?: AppSessionMessage[] | null;
            modifiedAt?: string; // date-time
            /**
             * A brief description of the app's actions for users. Length must be between 3-100 chars. It becomes immutable once a value is set.
             */
            name?: string;
            status?: /**
             * All possible values of a Session's status, including system-updated and user-updated values.
             *
             */
            AppSessionStatus;
            /**
             * Timeout in seconds, a value between 1 second and 30 days. Once set, it can only be increased, not decreased.
             *
             */
            timeoutSeconds?: number;
        }
        export interface AppSessionCreate {
            appId: string;
            /**
             * An array of `SessionMessage` describing the current session state.
             *
             */
            messages?: AppSessionMessageCreate[];
            /**
             * The name of the session. Length must be between 3-100 chars. Value is required and immutable once set.
             */
            name: string;
            /**
             * Timeout in seconds, a value between 1 second and 30 days. Once set, it can only be increased, not decreased.
             *
             */
            timeoutSeconds: number;
        }
        export interface AppSessionMessage {
            /**
             * A message string, to be rendered as plain text with Benchling chips. References to Benchling items (up to 10 per msg) will be rendered as chips in the Benchling UX. A valid reference is a Benchling API id, prefixed with "id:" and contained by braces. For example: "{id:ent_a0SApq3}."
             * example:
             * Transferred 4ml of {id:ent_a0SApq3z} to {id:con_ae92kBv9} with \{priority: p3\}.
             */
            content: string;
            style?: AppSessionMessageStyle;
        }
        export interface AppSessionMessageCreate {
            /**
             * A message string, to be rendered as plain text with Benchling chips. References to Benchling items (up to 10 per msg) will be rendered as chips in the Benchling UX. A valid reference is a Benchling API id, prefixed with "id:" and contained by braces. For example: "{id:ent_a0SApq3}."
             * example:
             * Transferred 4ml of {id:ent_a0SApq3z} to {id:con_ae92kBv9} with \{priority: p3\}.
             */
            content: string;
            style?: AppSessionMessageStyle;
        }
        export type AppSessionMessageStyle = "ERROR" | "INFO" | "NONE" | "SUCCESS" | "WARNING";
        /**
         * All possible values of a Session's status, including system-updated and user-updated values.
         *
         */
        export type AppSessionStatus = "COMPLETED_WITH_WARNINGS" | "FAILED" | "RUNNING" | "SUCCEEDED" | "TIMEOUT";
        /**
         * Update a session's messages or increase timeoutSeconds.
         */
        export interface AppSessionUpdate {
            /**
             * An array of `SessionMessage` describing the current session state.
             *
             */
            messages?: [
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?,
                AppSessionMessageCreate?
            ];
            status?: /* Values that can be specified when updating the status of a Session */ AppSessionUpdateStatus;
            /**
             * Timeout in seconds, a value between 1 second and 30 days. Once set, it can only be increased, not decreased.
             *
             */
            timeoutSeconds?: number;
        }
        /**
         * Values that can be specified when updating the status of a Session
         */
        export type AppSessionUpdateStatus = "COMPLETED_WITH_WARNINGS" | "FAILED" | "SUCCEEDED";
        export interface AppSummary {
            /**
             * The id of the Benchling app.
             */
            id?: string;
        }
        export interface ArchiveRecord {
            /**
             * example:
             * Made in error
             */
            reason?: string;
        }
        export interface ArrayElementAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             */
            type?: string;
        }
        export interface AssayFieldsCreate {
            [name: string]: any;
        }
        export interface AssayResult {
            /**
             * ArchiveRecord Resource if the result is archived. This is null if the result is not archived.
             *
             */
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * DateTime at which the the result was created
             */
            createdAt?: string; // date-time
            /**
             * UserSummary Resource of who created the request
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            /**
             * ID of the entry that this result is attached to
             */
            entryId?: string | null;
            /**
             * Object mapping field names to a UserValidation Resource object for that field. To **set** validation for a result, you *must* use this object.
             *
             */
            fieldValidation?: {
                [name: string]: UserValidation;
            };
            /**
             * Field values for the returned result. Please note the keys of each field are the field's warehouse name (additional_prop) instead of the field's display name (additionalProp).
             *
             * example:
             * [
             *   {
             *     "additional_prop": null,
             *     "displayValue": "Amp",
             *     "isMulti": true,
             *     "textValue": "Amp",
             *     "type": "dna_sequence_link",
             *     "value": [
             *       "seq_jdf8BV24"
             *     ]
             *   }
             * ]
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the result
             */
            id?: string;
            /**
             * Whether or not this result is attached to an accepted entry
             */
            isReviewed?: boolean;
            /**
             * DateTime at which the the result was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * ID of the project to insert the result into
             */
            projectId?: string | null;
            /**
             * SchemaProperty
             * Schema that the result belongs to
             */
            schema?: {
                id?: string;
                name?: string;
            };
            validationComment?: string;
            validationStatus?: string;
        }
        export interface AssayResultCreate {
            /**
             * Dictionary mapping field names to UserValidation Resources.
             *
             */
            fieldValidation?: {
                [name: string]: UserValidation;
            };
            /**
             * Dictionary of result fields. Please note the field keys must be the field's warehouse name, not display name.
             *
             * example:
             * {
             *   "my_entity_link": {
             *     "value": "bfi_a0B1cd23"
             *   },
             *   "my_text_field": {
             *     "value": "some text"
             *   }
             * }
             */
            fields: /**
             * Dictionary of result fields. Please note the field keys must be the field's warehouse name, not display name.
             *
             * example:
             * {
             *   "my_entity_link": {
             *     "value": "bfi_a0B1cd23"
             *   },
             *   "my_text_field": {
             *     "value": "some text"
             *   }
             * }
             */
            Fields | AssayFieldsCreate;
            /**
             * UUID
             */
            id?: string;
            /**
             * The project that the assay result should be uploaded to. Only users with read access to the project will be able to read the assay result. Leaving this empty will result in only the creator having read access.
             *
             */
            projectId?: string | null;
            /**
             * ID of result schema under which to upload this result
             */
            schemaId: string;
        }
        export interface AssayResultIdsRequest {
            assayResultIds: string /* uuid */[];
        }
        export interface AssayResultIdsResponse {
            assayResultIds?: string /* uuid */[];
        }
        export interface AssayResultSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "assay_result";
            derivedFrom?: string | null;
            organization?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            systemName?: string;
            /**
             * DateTime the Assay Result Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface AssayResultSchemasPaginatedList {
            assayResultSchemas?: AssayResultSchema[];
            nextToken?: string;
        }
        export interface AssayResultTransactionCreateResponse {
            id?: string; // uuid
        }
        export interface AssayResultsArchive {
            assayResultIds: string /* uuid */[];
            /**
             * The reason for archiving the provided results. Accepted reasons may differ based on tenant configuration
             */
            reason?: "Made in error" | "Archived" | "Other";
        }
        export interface AssayResultsBulkCreateInTableRequest {
            assayResults: AssayResultCreate[];
            /**
             * example:
             * strtbl_IakA58In
             */
            tableId: string;
        }
        export interface AssayResultsBulkCreateRequest {
            assayResults: AssayResultCreate[];
        }
        export interface AssayResultsBulkGet {
            assayResults?: AssayResult[];
        }
        export interface AssayResultsCreateResponse {
            assayResults?: string /* uuid */[];
        }
        export interface AssayResultsPaginatedList {
            assayResults?: AssayResult[];
            nextToken?: string;
        }
        export interface AssayRun {
            /**
             * The canonical url of the Run in the API.
             * example:
             * https://benchling.com/api/v2/assay-runs/21f50003-0389-4b2a-9293-a17967b85961
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * 2021-05-06T13:43:25.752597+00:00
             */
            createdAt?: string;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * example:
             * etr_Hds1XAaq
             */
            entryId?: string | null;
            fields?: Fields;
            /**
             * example:
             * 77af3205-65af-457f-87f5-75462b85075a
             */
            id?: string;
            isReviewed?: boolean;
            /**
             * example:
             * src_YzU5p4dR
             */
            projectId?: string | null;
            /**
             * SchemaProperty
             * example:
             * {
             *   "id": "assaysch_fFLKmdmG",
             *   "name": "Assay Run"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * example:
             * Reported valid with no caveats
             */
            validationComment?: string | null;
            validationStatus?: /* Must be either VALID or INVALID */ AssayRunValidationStatus;
        }
        export interface AssayRunCreate {
            /**
             * Object of assay run fields
             */
            fields: /* Object of assay run fields */ Fields | AssayFieldsCreate;
            /**
             * ID of assay run
             */
            id?: string;
            /**
             * The project that the assay run should be uploaded to. Only users with read access to the project will be able to read the assay run. Leaving this empty will result in only the creator having read access.
             *
             */
            projectId?: string;
            /**
             * ID of assay schema that assay run conforms to
             */
            schemaId: string;
            /**
             * Additional information about the validation status
             */
            validationComment?: string;
            validationStatus?: /* Must be either VALID or INVALID */ AssayRunValidationStatus;
        }
        export interface AssayRunCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            assayRun?: AssayRun;
            eventType?: "v2.assayRun.created";
        }
        export interface AssayRunNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "assay_run";
            /**
             * example:
             * 588aca02-1a20-4b94-a40f-b3f3a0081749
             */
            assayRunId?: string | null;
            /**
             * example:
             * assaysch_msh1Ly6g
             */
            assayRunSchemaId?: string;
        }
        export interface AssayRunSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "assay_run";
            derivedFrom?: string | null;
            organization?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            systemName?: string;
            automationInputFileConfigs?: {
                name?: string;
            }[];
            automationOutputFileConfigs?: {
                name?: string;
            }[];
            /**
             * DateTime the Assay Run Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface AssayRunSchemasPaginatedList {
            assayRunSchemas?: AssayRunSchema[];
            nextToken?: string;
        }
        export interface AssayRunUpdate {
            fields?: Fields;
        }
        export interface AssayRunUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            assayRun?: AssayRun;
            eventType?: "v2.assayRun.updated.fields";
        }
        /**
         * Must be either VALID or INVALID
         */
        export type AssayRunValidationStatus = "VALID" | "INVALID";
        /**
         * IDs of all Assay Runs that were archived / unarchived.
         *
         */
        export interface AssayRunsArchivalChange {
            assayRunIds?: string[];
        }
        /**
         * The request body for archiving Assay Runs.
         *
         */
        export interface AssayRunsArchive {
            assayRunIds: string[];
            /**
             * The reason for archiving the provided Assay Runs. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Archived" | "Made in error" | "Other";
        }
        export interface AssayRunsBulkCreateRequest {
            assayRuns: AssayRunCreate[];
        }
        export interface AssayRunsBulkCreateResponse {
            assayRuns?: string[];
        }
        export interface AssayRunsBulkGet {
            assayRuns?: AssayRun[];
        }
        export interface AssayRunsPaginatedList {
            assayRuns?: AssayRun[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving Assay Runs.
         *
         */
        export interface AssayRunsUnarchive {
            assayRunIds: string[];
        }
        export interface AsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                [key: string]: any;
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface AsyncTaskLink {
            taskId?: string; // uuid
        }
        export interface AutoAnnotateAaSequences {
            /**
             * Array of AA sequence IDs.
             */
            aaSequenceIds: string[];
            /**
             * Array of feature library IDs.
             */
            featureLibraryIds: string[];
        }
        export interface AutoAnnotateDnaSequences {
            /**
             * Array of DNA sequence IDs.
             */
            dnaSequenceIds: string[];
            /**
             * Array of feature library IDs.
             */
            featureLibraryIds: string[];
        }
        export interface AutoAnnotateRnaSequences {
            /**
             * Array of feature library IDs.
             */
            featureLibraryIds: string[];
            /**
             * Array of RNA sequence IDs.
             */
            rnaSequenceIds: [
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?
            ];
        }
        export interface AutofillPartsAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                [key: string]: any;
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface AutofillRnaSequences {
            /**
             * Array of RNA sequence IDs.
             */
            rnaSequenceIds: [
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?
            ];
        }
        export interface AutofillSequences {
            /**
             * Array of DNA sequence IDs.
             */
            dnaSequenceIds: string[];
        }
        export interface AutofillTranslationsAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                [key: string]: any;
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface AutomationFile {
            /**
             * example:
             * 588aca02-1a20-4b94-a40f-b3f3a0081749
             */
            assayRunId?: string;
            automationFileConfig?: {
                /**
                 * example:
                 * MyInstrumentName
                 */
                name?: string;
            };
            file?: {
                /**
                 * The universally unique identifier (UUID) for the blob.
                 * example:
                 * c33fe52d-fe6a-4c98-adcd-211bdf6778f7
                 */
                id?: string; // uuid
                /**
                 * eg. application/jpeg
                 * example:
                 * text/csv
                 */
                mimeType?: string;
                /**
                 * Name of the blob
                 * example:
                 * MyInstrumentInputFile.csv
                 */
                name?: string;
                /**
                 * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
                 *
                 */
                type?: "RAW_FILE" | "VISUALIZATION";
                uploadStatus?: "IN_PROGRESS" | "COMPLETE" | "ABORTED";
            } | null;
            id?: string;
            status?: "SUCCEEDED" | "FAILED" | "NOT_STARTED" | "RUNNING";
        }
        export interface AutomationFileInputsPaginatedList {
            automationInputGenerators?: AutomationInputGenerator[];
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
        }
        export interface AutomationInputGenerator {
            /**
             * example:
             * 588aca02-1a20-4b94-a40f-b3f3a0081749
             */
            assayRunId?: string;
            automationFileConfig?: {
                /**
                 * example:
                 * MyInstrumentName
                 */
                name?: string;
            };
            file?: {
                /**
                 * The universally unique identifier (UUID) for the blob.
                 * example:
                 * c33fe52d-fe6a-4c98-adcd-211bdf6778f7
                 */
                id?: string; // uuid
                /**
                 * eg. application/jpeg
                 * example:
                 * text/csv
                 */
                mimeType?: string;
                /**
                 * Name of the blob
                 * example:
                 * MyInstrumentInputFile.csv
                 */
                name?: string;
                /**
                 * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
                 *
                 */
                type?: "RAW_FILE" | "VISUALIZATION";
                uploadStatus?: "IN_PROGRESS" | "COMPLETE" | "ABORTED";
            } | null;
            /**
             * example:
             * aif_C3wGA9HF
             */
            id?: string;
            status?: "SUCCEEDED" | "FAILED" | "NOT_STARTED" | "RUNNING";
            /**
             * The canonical url of the Automation Input Generator in the API.
             * example:
             * https://benchling.com/api/v2/automation-input-generators/aif_C3wGA9HF
             */
            apiURL?: string; // uri
            /**
             * DateTime the Automation Input Generator was last modified
             */
            createdAt?: string; // date-time
            /**
             * DateTime the Automation Input Generator was last modified
             */
            modifiedAt?: string; // date-time
            transforms?: ({
                /**
                 * The canonical url of the transform in the API.
                 */
                apiURL?: string; // uri
                blobId?: string | null; // uuid
                customTransformId?: string | null; // uuid
                errors?: LabAutomationBenchlingAppErrors;
                id?: string;
                inputGeneratorId?: string | null;
                /**
                 * DateTime the transform was last modified.
                 */
                modifiedAt?: string; // date-time
                outputProcessorId?: string | null;
                status?: "NOT_STARTED" | "RUNNING" | "FAILED" | "SUCCEEDED";
            } | null)[];
        }
        export interface AutomationInputGeneratorCompletedV2BetaEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            automationInputGenerator?: AutomationFile;
            eventType?: "v2-beta.automationInputGenerator.completed";
        }
        export interface AutomationInputGeneratorUpdate {
            /**
             * The ID of the file (blob) associated with the input generator. Set to `null` to remove an existing file from the generator.
             * example:
             */
            fileId?: string | null;
        }
        export interface AutomationOutputProcessor {
            /**
             * example:
             * 588aca02-1a20-4b94-a40f-b3f3a0081749
             */
            assayRunId?: string;
            automationFileConfig?: {
                /**
                 * example:
                 * MyInstrumentName
                 */
                name?: string;
            };
            file?: {
                /**
                 * The universally unique identifier (UUID) for the blob.
                 * example:
                 * c33fe52d-fe6a-4c98-adcd-211bdf6778f7
                 */
                id?: string; // uuid
                /**
                 * eg. application/jpeg
                 * example:
                 * text/csv
                 */
                mimeType?: string;
                /**
                 * Name of the blob
                 * example:
                 * MyInstrumentInputFile.csv
                 */
                name?: string;
                /**
                 * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
                 *
                 */
                type?: "RAW_FILE" | "VISUALIZATION";
                uploadStatus?: "IN_PROGRESS" | "COMPLETE" | "ABORTED";
            } | null;
            /**
             * example:
             * aop_C3wGA9HF
             */
            id?: string;
            status?: "SUCCEEDED" | "FAILED" | "NOT_STARTED" | "RUNNING";
            /**
             * The canonical url of the Automation Output Processor in the API.
             * example:
             * https://benchling.com/api/v2/automation-output-processors/aop_C3wGA9HF
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Specifies whether file processing should complete with errors. False means any error in output file processing will result in no actions being committed. True means that if row-level errors occur, then failing rows and their errors will be saved to errorFile, and actions from successful rows will be committed.
             */
            completeWithErrors?: boolean;
            /**
             * DateTime the Automation Output Processor was created
             */
            createdAt?: string; // date-time
            errorFile?: {
                /**
                 * The universally unique identifier (UUID) for the blob.
                 * example:
                 * c33fe52d-fe6a-4c98-adcd-211bdf6778f7
                 */
                id?: string; // uuid
                /**
                 * eg. application/jpeg
                 * example:
                 * text/csv
                 */
                mimeType?: string;
                /**
                 * Name of the blob
                 * example:
                 * MyInstrumentInputFile.csv
                 */
                name?: string;
                /**
                 * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
                 *
                 */
                type?: "RAW_FILE" | "VISUALIZATION";
                uploadStatus?: "IN_PROGRESS" | "COMPLETE" | "ABORTED";
            } | null;
            /**
             * DateTime the Automation Output Processor was last modified
             */
            modifiedAt?: string; // date-time
            progressStats?: /* Processing progress information. */ AutomationProgressStats;
            transforms?: ({
                /**
                 * The canonical url of the transform in the API.
                 */
                apiURL?: string; // uri
                blobId?: string | null; // uuid
                customTransformId?: string | null; // uuid
                errors?: LabAutomationBenchlingAppErrors;
                id?: string;
                inputGeneratorId?: string | null;
                /**
                 * DateTime the transform was last modified.
                 */
                modifiedAt?: string; // date-time
                outputProcessorId?: string | null;
                status?: "NOT_STARTED" | "RUNNING" | "FAILED" | "SUCCEEDED";
            } | null)[];
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of any linked Results that were archived / unarchived.
         */
        export interface AutomationOutputProcessorArchivalChange {
            automationOutputProcessorIds?: string[];
            resultIds?: string[];
        }
        export interface AutomationOutputProcessorCompletedV2BetaEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            automationOutputProcessor?: AutomationFile;
            eventType?: "v2-beta.automationOutputProcessor.completed";
        }
        export interface AutomationOutputProcessorCreate {
            assayRunId: string;
            automationFileConfigName: string;
            /**
             * Specifies whether file processing should complete with errors. False means any error in output file processing will result in no actions being committed. True means that if row-level errors occur, then failing rows and their errors will be saved to errorFile, and actions from successful rows will be committed.
             */
            completeWithErrors?: boolean;
            /**
             * The ID of a blob link to process.
             * example:
             * cd624536-c6ba-41b9-b802-9461689e2ea3
             */
            fileId: string;
        }
        export interface AutomationOutputProcessorUpdate {
            /**
             * The ID of a blob link to process.
             * example:
             * cd624536-c6ba-41b9-b802-9461689e2ea3
             */
            fileId: string;
        }
        export interface AutomationOutputProcessorUploadedV2BetaEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            automationOutputProcessor?: AutomationFile;
            eventType?: "v2-beta.automationOutputProcessor.uploaded";
        }
        export interface AutomationOutputProcessorsArchive {
            /**
             * Array of automation output processor IDs
             */
            automationOutputProcessorIds: string[];
            /**
             * The reason that the output processors are being archived. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason?: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
        }
        /**
         * A paginated list of automation output processors which have an attached file.
         */
        export interface AutomationOutputProcessorsPaginatedList {
            automationOutputProcessors?: AutomationOutputProcessor[];
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
        }
        export interface AutomationOutputProcessorsUnarchive {
            /**
             * Array of automation output processor IDs
             */
            automationOutputProcessorIds: string[];
        }
        /**
         * Processing progress information.
         */
        export interface AutomationProgressStats {
            rowsFailed?: number;
            rowsSucceeded?: number;
            rowsUnprocessed?: number;
        }
        export interface BadRequestError {
            error?: {
                message?: string;
                type?: "invalid_request_error";
                userMessage?: string;
            };
        }
        export interface BadRequestErrorBulk {
            error?: {
                message?: string;
                type?: "invalid_request_error";
                userMessage?: string;
                errors?: {
                    index?: number;
                    message?: string;
                }[];
            };
        }
        export interface BarcodeValidationResult {
            /**
             * Barcode to validate.
             */
            barcode?: string;
            /**
             * Whether the barcode is valid.
             */
            isValid?: boolean;
            /**
             * If barcode is not valid, a message string explaining the error.
             */
            message?: string | null;
        }
        export interface BarcodeValidationResults {
            validationResults?: BarcodeValidationResult[];
        }
        export interface BarcodesList {
            /**
             * Array of barcodes to validate.
             */
            barcodes: string[];
        }
        export interface BaseAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             */
            type?: string;
            description?: string;
            requiredConfig?: boolean;
        }
        export interface BaseAssaySchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
            derivedFrom?: string | null;
            organization?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            systemName?: string;
        }
        export interface BaseDropdownUIBlock {
            dropdownId: string;
        }
        export interface BaseError {
            message?: string;
            type?: string;
            userMessage?: string;
        }
        export interface BaseNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: string;
        }
        export interface BaseSearchInputUIBlock {
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
        }
        export interface BaseSelectorInputUIBlock {
            options: string[];
        }
        export interface Batch {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * DateTime at which the the result was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            defaultConcentration?: Measurement;
            entity?: DnaSequenceSummary | AaSequenceSummary | CustomEntitySummary;
            fields?: Fields;
            /**
             * example:
             * bat_UOIr8IjL
             */
            id?: string;
            modifiedAt?: string; // date-time
            name?: string;
            /**
             * SchemaProperty
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            webURL?: string;
        }
        export interface BatchCreate {
            defaultConcentration?: DefaultConcentrationSummary;
            /**
             * API identifier for the entity that the batch will be added to.
             */
            entityId?: string;
            fields?: Fields;
        }
        export type BatchOrInaccessibleResource = Batch | InaccessibleResource;
        export interface BatchSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
            prefix?: string;
            registryId?: string;
            entitySchemaId?: string;
            /**
             * DateTime the Batch Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface BatchSchemasList {
            batchSchemas?: BatchSchema[];
        }
        export interface BatchSchemasPaginatedList {
            batchSchemas?: BatchSchema[];
            nextToken?: string;
        }
        export interface BatchUpdate {
            defaultConcentration?: DefaultConcentrationSummary;
            fields?: Fields;
        }
        /**
         * IDs of all batches that were archived / unarchived, grouped by resource type.
         *
         */
        export interface BatchesArchivalChange {
            batchIds?: string[];
        }
        /**
         * The request body for archiving Batches.
         *
         */
        export interface BatchesArchive {
            batchIds: string[];
            /**
             * The reason for archiving the provided Batches. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
        }
        export interface BatchesBulkGet {
            batches?: Batch[];
        }
        export interface BatchesPaginatedList {
            batches?: Batch[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving Batches.
         *
         */
        export interface BatchesUnarchive {
            batchIds: string[];
        }
        export interface BenchlingApp {
            /**
             * example:
             * This is my first App!
             */
            description?: string;
            /**
             * example:
             * My First App
             */
            name?: string;
            /**
             * example:
             * https://benchling.com/api/v2/apps/app_e59sjL23Pqn30xHg
             */
            apiUrl?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * DateTime at which the the app was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            /**
             * example:
             * app_e59sjL23Pqn30xHg
             */
            id?: string;
            /**
             * DateTime at which the the app was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * example:
             * https://benchling.com/developer/apps/app_e59sjL23Pqn30xHg
             */
            webUrl?: string; // uri
        }
        export interface BenchlingAppCreate {
            /**
             * example:
             * This is my first App!
             */
            description?: string;
            /**
             * example:
             * My First App
             */
            name: string;
        }
        export interface BenchlingAppUpdate {
            /**
             * example:
             * This is my first App!
             */
            description?: string;
            /**
             * example:
             * My First App
             */
            name?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of apps that were archived / unarchived.
         *
         */
        export interface BenchlingAppsArchivalChange {
            /**
             * example:
             * [
             *   "app_J39na03L1nsLS34o",
             *   "app_ae92kBv9aNSl593z",
             *   "app_e59sjL23Pqn30xHg"
             * ]
             */
            appIds?: string[];
        }
        export interface BenchlingAppsArchive {
            /**
             * Array of app IDs
             * example:
             * [
             *   "app_J39na03L1nsLS34o",
             *   "app_ae92kBv9aNSl593z",
             *   "app_e59sjL23Pqn30xHg"
             * ]
             */
            appIds: string[];
            /**
             * Reason that apps are being archived. Actual reason enum varies by tenant.
             */
            reason: "Made in error" | "Retired" | "Other";
        }
        export interface BenchlingAppsPaginatedList {
            nextToken?: string;
            apps?: BenchlingApp[];
        }
        export interface BenchlingAppsUnarchive {
            /**
             * Array of app IDs
             * example:
             * [
             *   "app_J39na03L1nsLS34o",
             *   "app_ae92kBv9aNSl593z",
             *   "app_e59sjL23Pqn30xHg"
             * ]
             */
            appIds: string[];
        }
        export interface Blob {
            /**
             * The universally unique identifier (UUID) for the blob.
             * example:
             * c33fe52d-fe6a-4c98-adcd-211bdf6778f7
             */
            id?: string; // uuid
            /**
             * eg. application/jpeg
             * example:
             * text/csv
             */
            mimeType?: string;
            /**
             * Name of the blob
             * example:
             * MyInstrumentInputFile.csv
             */
            name?: string;
            /**
             * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
             *
             */
            type?: "RAW_FILE" | "VISUALIZATION";
            uploadStatus?: "IN_PROGRESS" | "COMPLETE" | "ABORTED";
        }
        export interface BlobComplete {
            parts?: BlobPart[];
        }
        export interface BlobCreate {
            /**
             * base64 encoded file contents
             */
            data64: string; // byte
            /**
             * The MD5 hash of the blob part. Note: this should be the hash of the raw data of the blob part, not the hash of the base64 encoding.
             *
             */
            md5: string;
            /**
             * eg. application/jpeg
             */
            mimeType?: string;
            /**
             * Name of the blob
             */
            name: string;
            /**
             * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
             *
             */
            type: "RAW_FILE" | "VISUALIZATION";
        }
        export interface BlobMultipartCreate {
            /**
             * eg. application/jpeg
             */
            mimeType?: string;
            /**
             * Name of the blob
             */
            name: string;
            /**
             * One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview.
             *
             */
            type: "RAW_FILE" | "VISUALIZATION";
        }
        export interface BlobPart {
            /**
             * example:
             * "6f5902ac237024bdd0c176cb93063dc4"
             */
            eTag?: string;
            partNumber?: number;
        }
        export interface BlobPartCreate {
            data64: string; // bytes
            md5: string;
            /**
             * An integer between 1 to 10,000, inclusive. The part number must be unique per part and indicates the ordering of the part inside the final blob. The part numbers do not need to be consecutive.
             *
             */
            partNumber: number;
        }
        export interface BlobUrl {
            /**
             * a pre-signed download url.
             */
            downloadURL?: string; // uri
            /**
             * The unix time that the download URL expires at.
             */
            expiresAt?: number;
        }
        export interface BlobsBulkGet {
            blobs?: Blob[];
        }
        export interface BooleanAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * boolean
             */
            type?: "boolean";
            description?: string;
            requiredConfig?: boolean;
            value?: boolean | null;
        }
        export interface Box {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            barcode?: string | null;
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * The number of containers in the box that have no contents.
             */
            emptyContainers?: number;
            /**
             * The number of empty positions for adding additional containers in the box.
             */
            emptyPositions?: number;
            fields?: Fields;
            /**
             * The number of containers currently in the box.
             */
            filledPositions?: number;
            id?: string;
            modifiedAt?: string; // date-time
            name?: string;
            parentStorageId?: string | null;
            projectId?: string | null;
            /**
             * SchemaProperty
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * The size of the box (i.e. how many containers it can store).
             */
            size?: number;
            webURL?: string;
        }
        export interface BoxContentsPaginatedList {
            containers?: ContainerWithCoordinates[];
            nextToken?: string;
        }
        export interface BoxCreate {
            barcode?: string;
            fields?: Fields;
            name?: string;
            parentStorageId?: string;
            projectId?: string;
            schemaId: string;
        }
        export interface BoxCreationTableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "box_creation_table";
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            /**
             * example:
             * boxsch_MAbGlEtf
             */
            boxSchemaId?: string;
        }
        export interface BoxSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "box";
            prefix?: string;
            registryId?: string;
            containerSchema?: {
                id?: string;
                name?: string;
            } | null;
            height?: number;
            width?: number;
        }
        export interface BoxSchemasList {
            boxSchemas?: BoxSchema[];
        }
        export interface BoxSchemasPaginatedList {
            boxSchemas?: BoxSchema[];
            nextToken?: string;
        }
        export interface BoxUpdate {
            fields?: Fields;
            name?: string;
            parentStorageId?: string;
            projectId?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of boxes along with any IDs of containers that were archived / unarchived.
         *
         */
        export interface BoxesArchivalChange {
            boxIds?: string[];
            containerIds?: string[];
        }
        export interface BoxesArchive {
            /**
             * Array of box IDs
             */
            boxIds: string[];
            /**
             * Reason that boxes are being archived.
             *
             */
            reason: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
            /**
             * Remove barcodes. Removing barcodes from archived inventory that contain items will also remove barcodes from the contained items.
             *
             */
            shouldRemoveBarcodes?: boolean;
        }
        export interface BoxesBulkGet {
            boxes?: Box[];
        }
        export interface BoxesPaginatedList {
            boxes?: Box[];
            nextToken?: string;
        }
        export interface BoxesUnarchive {
            /**
             * Array of box IDs
             */
            boxIds: string[];
        }
        export interface BulkCreateAaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                aaSequences?: AaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateContainersAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                containers?: Container[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateCustomEntitiesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                customEntities?: CustomEntity[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateDnaOligosAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                dnaOligos?: DnaOligo[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateDnaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                dnaSequences?: DnaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateFeaturesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                features?: /* A feature from a feature library */ Feature[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateRnaOligosAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                rnaOligos?: RnaOligo[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkCreateRnaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                rnaSequences?: RnaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkRegisterEntitiesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                [key: string]: any;
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateAaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                AaSequences?: AaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateContainersAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                containers?: Container[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateCustomEntitiesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                customEntities?: CustomEntity[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateDnaOligosAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                dnaOligos?: DnaOligo[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateDnaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                dnaSequences?: DnaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateRnaOligosAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                rnaOligos?: RnaOligo[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface BulkUpdateRnaSequencesAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                rnaSequences?: RnaSequence[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface ButtonUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * Click me to submit
             */
            text: string;
            type: "BUTTON";
        }
        export interface ButtonUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * Click me to submit
             */
            text: string;
            type: "BUTTON";
        }
        export interface ButtonUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * Click me to submit
             */
            text: string;
            type: "BUTTON";
        }
        /**
         * One "line" of a checklist
         */
        export interface CheckboxNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "list_checkbox";
            /**
             * Indicates whether the checkbox is checked or not.
             *
             */
            checked?: boolean;
            /**
             * Array of links referenced in text via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
             *
             */
            links?: /**
             * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
             *
             */
            EntryLink[];
            /**
             * The textual contents of the note.
             */
            text?: string;
        }
        /**
         *
         * *assignee field* is set if status is "RESERVED" or "CHECKED_OUT", or null if status is "AVAILABLE".
         *
         * *comment field* is set when container was last reserved, checked out, or checked into.
         *
         * *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved
         *
         */
        export interface CheckoutRecord {
            assignee?: null & (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary);
            comment?: string;
            modifiedAt?: string; // date-time
            status?: "AVAILABLE" | "RESERVED" | "CHECKED_OUT";
        }
        export interface ChipUiBlock {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "CHIP";
            value: string;
        }
        export interface ChipUiBlockCreate {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "CHIP";
            value: string;
        }
        export interface ChipUiBlockUpdate {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "CHIP";
            value: string;
        }
        export interface ConflictError {
            error?: {
                message?: string;
                type?: string;
                userMessage?: string;
                conflicts?: {
                    [key: string]: any;
                }[];
            };
        }
        export interface Container {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            barcode?: string | null;
            /**
             *
             * *assignee field* is set if status is "RESERVED" or "CHECKED_OUT", or null if status is "AVAILABLE".
             *
             * *comment field* is set when container was last reserved, checked out, or checked into.
             *
             * *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved
             *
             */
            checkoutRecord?: {
                assignee?: null & (/**
                 * example:
                 * {
                 *   "handle": "lpasteur",
                 *   "id": "ent_a0SApq3z",
                 *   "name": "Louis Pasteur"
                 * }
                 */
                UserSummary | /**
                 * example:
                 * {
                 *   "handle": "elion_team",
                 *   "id": "team_5cjIguqc",
                 *   "name": "Elion's Team"
                 * }
                 */
                TeamSummary);
                comment?: string;
                modifiedAt?: string; // date-time
                status?: "AVAILABLE" | "RESERVED" | "CHECKED_OUT";
            };
            contents?: ContainerContent[];
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            fields?: Fields;
            /**
             * example:
             * con_ZBL9QQWD
             */
            id?: string;
            modifiedAt?: string; // date-time
            name?: string;
            parentStorageId?: string | null;
            parentStorageSchema?: {
                id?: string;
                name?: string;
            } | null;
            projectId?: string | null;
            quantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            restrictedSampleParties?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            sampleOwners?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            schema?: {
                id?: string;
                name?: string;
            } | null;
            volume?: /**
             * The deprecated "volume" type key in API responses can also contain non-volume quantities for back-compatibility purposes. Use the "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForResponse;
            webURL?: string;
        }
        export interface ContainerBulkUpdateItem {
            fields?: Fields;
            name?: string;
            /**
             * ID of containing parent inventory, can also specify a coordinate for plates and boxes (e.g. plt_2bAks9dx:a2).
             */
            parentStorageId?: string;
            /**
             * IDs of users or teams who have access to use a restricted container. Fixed plate wells and unrestricted containers do not have restricted sample parties.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Either RESTRICTED or UNRESTRICTED. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams who are sample owners for the container. Fixed plate wells do not have sample owners.
             *
             */
            sampleOwnerIds?: string[];
            containerId: string;
            quantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            volume?: /**
             * Desired volume for a container, well, or transfer. "volume" type keys are deprecated in API requests; use the more permissive "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForInput;
        }
        export interface ContainerContent {
            batch?: null & (Batch | InaccessibleResource);
            concentration?: Measurement;
            entity?: ({
                [key: string]: any;
            } | null) & (Entity | InaccessibleResource);
        }
        export interface ContainerContentUpdate {
            concentration: Measurement;
        }
        export interface ContainerContentsList {
            contents?: ContainerContent[];
        }
        export interface ContainerCreate {
            fields?: Fields;
            name?: string;
            /**
             * ID of containing parent inventory, can also specify a coordinate for plates and boxes (e.g. plt_2bAks9dx:a2).
             */
            parentStorageId?: string;
            /**
             * IDs of users or teams who have access to use a restricted container. Fixed plate wells and unrestricted containers do not have restricted sample parties.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Either RESTRICTED or UNRESTRICTED. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams who are sample owners for the container. Fixed plate wells do not have sample owners.
             *
             */
            sampleOwnerIds?: string[];
            barcode?: string;
            projectId?: string | null;
            schemaId: string;
        }
        export interface ContainerLabels {
            /**
             * example:
             * VIAL001
             */
            barcode?: string;
            /**
             * example:
             * cnt_12345
             */
            id?: string;
            /**
             * example:
             * My Container
             */
            name?: string;
        }
        /**
         * Quantity of a container, well, or transfer. Supports mass, volume, and other quantities.
         */
        export interface ContainerQuantity {
            /**
             * example:
             * mL
             */
            units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
            /**
             * example:
             * 10
             */
            value?: number | null;
        }
        export interface ContainerSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "container";
            prefix?: string;
            registryId?: string;
            /**
             * DateTime the Container Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface ContainerSchemasList {
            containerSchemas?: ContainerSchema[];
        }
        export interface ContainerSchemasPaginatedList {
            containerSchemas?: ContainerSchema[];
            nextToken?: string;
        }
        export interface ContainerTransfer {
            /**
             * IDs of users or teams to be set as restricted sample parties for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Restriction status of the destination container, either RESTRICTED or UNRESTRICTED. If not specified, the restriction status of the destination container will be the more restrictive of the source container, if present, and destination container restriction statuses. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams to be set as sample owners for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            sampleOwnerIds?: string[];
            /**
             * ID of the batch that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceBatchId?: string;
            /**
             * ID of the container that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceContainerId?: string;
            /**
             * ID of the entity that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceEntityId?: string;
            /**
             * This represents the quantity of the source to be transferred into the destination container. Supports mass, volume, and other quantities. Required in place of transferVolume.
             *
             */
            transferQuantity?: {
                /**
                 * example:
                 * mL
                 */
                units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * Deprecated - use transferQuantity instead.
             *
             */
            transferVolume?: {
                /**
                 * example:
                 * mL
                 */
                units?: "pL" | "nL" | "uL" | "mL" | "L" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * This represents what the contents of the destination container should look like post-transfer.
             *
             */
            destinationContents: ContainerTransferDestinationContentsItem[];
            /**
             * This represents the desired final quantity of the destination container, post-dilution. If you don't want to dilute the destination container, you can omit this parameter. Supports mass, volume, and other quantities.
             *
             */
            destinationQuantity?: {
                /**
                 * example:
                 * mL
                 */
                units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * Deprecated - use destinationQuantity instead.
             *
             */
            destinationVolume?: {
                /**
                 * example:
                 * mL
                 */
                units?: "pL" | "nL" | "uL" | "mL" | "L" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
        }
        export interface ContainerTransferBase {
            /**
             * IDs of users or teams to be set as restricted sample parties for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Restriction status of the destination container, either RESTRICTED or UNRESTRICTED. If not specified, the restriction status of the destination container will be the more restrictive of the source container, if present, and destination container restriction statuses. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams to be set as sample owners for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            sampleOwnerIds?: string[];
            /**
             * ID of the batch that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceBatchId?: string;
            /**
             * ID of the container that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceContainerId?: string;
            /**
             * ID of the entity that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceEntityId?: string;
            /**
             * This represents the quantity of the source to be transferred into the destination container. Supports mass, volume, and other quantities. Required in place of transferVolume.
             *
             */
            transferQuantity?: {
                /**
                 * example:
                 * mL
                 */
                units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * Deprecated - use transferQuantity instead.
             *
             */
            transferVolume?: {
                /**
                 * example:
                 * mL
                 */
                units?: "pL" | "nL" | "uL" | "mL" | "L" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
        }
        export interface ContainerTransferDestinationContentsItem {
            concentration?: Measurement;
            entityId: string;
        }
        export interface ContainerUpdate {
            fields?: Fields;
            name?: string;
            /**
             * ID of containing parent inventory, can also specify a coordinate for plates and boxes (e.g. plt_2bAks9dx:a2).
             */
            parentStorageId?: string;
            /**
             * IDs of users or teams who have access to use a restricted container. Fixed plate wells and unrestricted containers do not have restricted sample parties.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Either RESTRICTED or UNRESTRICTED. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams who are sample owners for the container. Fixed plate wells do not have sample owners.
             *
             */
            sampleOwnerIds?: string[];
            projectId?: string | null;
            quantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            volume?: /**
             * Desired volume for a container, well, or transfer. "volume" type keys are deprecated in API requests; use the more permissive "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForInput;
        }
        export interface ContainerWithCoordinates {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            barcode?: string | null;
            /**
             *
             * *assignee field* is set if status is "RESERVED" or "CHECKED_OUT", or null if status is "AVAILABLE".
             *
             * *comment field* is set when container was last reserved, checked out, or checked into.
             *
             * *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved
             *
             */
            checkoutRecord?: {
                assignee?: null & (/**
                 * example:
                 * {
                 *   "handle": "lpasteur",
                 *   "id": "ent_a0SApq3z",
                 *   "name": "Louis Pasteur"
                 * }
                 */
                UserSummary | /**
                 * example:
                 * {
                 *   "handle": "elion_team",
                 *   "id": "team_5cjIguqc",
                 *   "name": "Elion's Team"
                 * }
                 */
                TeamSummary);
                comment?: string;
                modifiedAt?: string; // date-time
                status?: "AVAILABLE" | "RESERVED" | "CHECKED_OUT";
            };
            contents?: ContainerContent[];
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            fields?: Fields;
            /**
             * example:
             * con_ZBL9QQWD
             */
            id?: string;
            modifiedAt?: string; // date-time
            name?: string;
            parentStorageId?: string | null;
            parentStorageSchema?: {
                id?: string;
                name?: string;
            } | null;
            projectId?: string | null;
            quantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            restrictedSampleParties?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            sampleOwners?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            schema?: {
                id?: string;
                name?: string;
            } | null;
            volume?: /**
             * The deprecated "volume" type key in API responses can also contain non-volume quantities for back-compatibility purposes. Use the "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForResponse;
            webURL?: string;
            gridNumber?: number;
            gridPosition?: string;
        }
        export interface ContainerWriteBase {
            fields?: Fields;
            name?: string;
            /**
             * ID of containing parent inventory, can also specify a coordinate for plates and boxes (e.g. plt_2bAks9dx:a2).
             */
            parentStorageId?: string;
            /**
             * IDs of users or teams who have access to use a restricted container. Fixed plate wells and unrestricted containers do not have restricted sample parties.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Either RESTRICTED or UNRESTRICTED. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams who are sample owners for the container. Fixed plate wells do not have sample owners.
             *
             */
            sampleOwnerIds?: string[];
        }
        /**
         * IDs of all items that were unarchived, grouped by resource type. This includes the IDs of containers that were unarchived.
         *
         */
        export interface ContainersArchivalChange {
            containerIds?: string[];
        }
        export interface ContainersArchive {
            /**
             * Array of container IDs
             */
            containerIds: string[];
            /**
             * Reason that containers are being archived.
             *
             */
            reason: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
            /**
             * Remove barcodes. Removing barcodes from archived inventory that contain items will also remove barcodes from the contained items.
             *
             */
            shouldRemoveBarcodes?: boolean;
        }
        export interface ContainersBulkCreateRequest {
            containers: [
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?,
                ContainerCreate?
            ];
        }
        export interface ContainersBulkUpdateRequest {
            containers: ContainerBulkUpdateItem[];
        }
        export interface ContainersCheckin {
            comments?: string;
            /**
             * Array of container IDs.
             */
            containerIds: string[];
        }
        export interface ContainersCheckout {
            /**
             * User or Team API ID.
             */
            assigneeId: string;
            comment?: string;
            /**
             * Array of container IDs.
             */
            containerIds: string[];
        }
        export interface ContainersList {
            containers?: Container[];
        }
        export interface ContainersPaginatedList {
            containers?: Container[];
            nextToken?: string;
        }
        export interface ContainersUnarchive {
            /**
             * Array of container IDs
             */
            containerIds: string[];
        }
        export interface CreateConsensusAlignmentAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: DnaAlignment;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface CreateEntityIntoRegistry {
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface CreateNucleotideConsensusAlignmentAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: NucleotideAlignment;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface CreateNucleotideTemplateAlignmentAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: NucleotideAlignment;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface CreateTemplateAlignmentAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: DnaAlignment;
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface CreationOrigin {
            application?: string | null;
            originId?: string | null;
            originModalUuid?: string | null; // uuid
            originType?: string | null;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of custom entities along with any IDs of batches that were archived (or unarchived).
         *
         */
        export interface CustomEntitiesArchivalChange {
            batchIds?: string[];
            customEntityIds?: string[];
        }
        /**
         * The request body for archiving custom entities.
         *
         */
        export interface CustomEntitiesArchive {
            customEntityIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface CustomEntitiesBulkCreateRequest {
            customEntities: [
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?,
                CustomEntityBulkCreate?
            ];
        }
        export interface CustomEntitiesBulkUpdateRequest {
            customEntities: [
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?,
                CustomEntityBulkUpdate?
            ];
        }
        export interface CustomEntitiesList {
            customEntities?: CustomEntity[];
        }
        export interface CustomEntitiesPaginatedList {
            customEntities?: CustomEntity[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving custom entities.
         *
         */
        export interface CustomEntitiesUnarchive {
            customEntityIds: string[];
        }
        export interface CustomEntity {
            aliases?: string[];
            /**
             * The canonical url of the Custom Entity in the API.
             * example:
             * https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * example:
             * 2017-04-18T05:54:56.247545+00:00
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * example:
             * sBN000
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * example:
             * lib_R8KcsjhW
             */
            folderId?: string | null;
            /**
             * example:
             * bfi_xCUXNVyG
             */
            id?: string;
            /**
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * example:
             * sBN000
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * example:
             * src_NetYd96a
             */
            registryId?: string | null;
            /**
             * example:
             * {
             *   "id": "ts_EM122lfJ",
             *   "name": "Strain"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * example:
             * https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
             */
            webURL?: string;
        }
        export interface CustomEntityBaseRequest {
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            name?: string;
            schemaId?: string;
        }
        export interface CustomEntityBaseRequestForCreate {
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            name: string;
            schemaId: string;
        }
        export interface CustomEntityBulkCreate {
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            name: string;
            schemaId: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface CustomEntityBulkUpdate {
            [name: string]: any;
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            name?: string;
            schemaId?: string;
            id: string;
        }
        export interface CustomEntityCreate {
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            name: string;
            schemaId: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface CustomEntityRequestRegistryFields {
            entityRegistryId?: string;
        }
        export interface CustomEntitySummary {
            entityType?: "custom_entity";
            /**
             * example:
             * bfi_xCUXNVyG
             */
            id?: string;
            type?: string;
        }
        export interface CustomEntityUpdate {
            /**
             * Aliases to add to the custom entity
             */
            aliases?: string[];
            /**
             * IDs of users to set as the custom entity's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the custom entity. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Schema fields to set on the custom entity. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            name?: string;
            schemaId?: string;
            entityRegistryId?: string;
        }
        export interface CustomEntityWithEntityType {
            aliases?: string[];
            /**
             * The canonical url of the Custom Entity in the API.
             * example:
             * https://benchling.com/api/v2/custom-entities/bfi_xCUXNVyG
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * example:
             * 2017-04-18T05:54:56.247545+00:00
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * example:
             * sBN000
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * example:
             * lib_R8KcsjhW
             */
            folderId?: string | null;
            /**
             * example:
             * bfi_xCUXNVyG
             */
            id?: string;
            /**
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * example:
             * sBN000
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * example:
             * src_NetYd96a
             */
            registryId?: string | null;
            /**
             * example:
             * {
             *   "id": "ts_EM122lfJ",
             *   "name": "Strain"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * example:
             * https://benchling.com/benchling/f/R8KcsjhW-academic-registry/bfi-xCUXNVyG-sbn000/edit
             */
            webURL?: string;
            entityType?: "custom_entity";
        }
        export interface CustomField {
            value?: string;
        }
        /**
         * example:
         * {
         *   "Legacy ID": {
         *     "value": "STR100"
         *   }
         * }
         */
        export interface CustomFields {
            [name: string]: CustomField;
        }
        export interface CustomNotation {
            /**
             * example:
             * sntx_lRe007yZ
             */
            id?: string;
            /**
             * example:
             * Your Custom Notation
             */
            name?: string;
        }
        export interface CustomNotationRequest {
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface CustomNotationsPaginatedList {
            nextToken?: string;
            customNotations?: CustomNotation[];
        }
        export interface DateAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * date
             */
            type?: "date";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * 2022-01-01
             */
            value?: string | null;
        }
        export interface DatetimeAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * datetime
             */
            type?: "datetime";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * 2022-01-01T12:30
             */
            value?: string | null;
        }
        export interface DefaultConcentrationSummary {
            /**
             * Units of measurement.
             */
            units?: string;
            /**
             * Amount of measurement.
             */
            value?: number;
        }
        /**
         * Deprecated - A paginated list of automation output processors
         */
        export interface DeprecatedAutomationOutputProcessorsPaginatedList {
            automationOutputProcessors?: AutomationOutputProcessor[];
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
        }
        /**
         * Desired volume for a container, well, or transfer. "volume" type keys are deprecated in API requests; use the more permissive "quantity" type key instead.
         *
         */
        export interface DeprecatedContainerVolumeForInput {
            /**
             * example:
             * mL
             */
            units?: "pL" | "nL" | "uL" | "mL" | "L" | null;
            /**
             * example:
             * 10
             */
            value?: number | null;
        }
        /**
         * The deprecated "volume" type key in API responses can also contain non-volume quantities for back-compatibility purposes. Use the "quantity" type key instead.
         *
         */
        export interface DeprecatedContainerVolumeForResponse {
            /**
             * example:
             * mL
             */
            units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
            /**
             * example:
             * 10
             */
            value?: number | null;
        }
        /**
         * EntitySchema
         */
        export interface DeprecatedEntitySchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "custom_entity" | "dna_sequence" | "aa_sequence" | "mixture" | "dna_oligo" | "rna_oligo" | "molecule" | "custom_entity" | "dna_sequence" | "aa_sequence" | "mixture" | "dna_oligo" | "rna_oligo" | "molecule" | "entry";
            prefix?: string;
            registryId?: string;
            constraint?: {
                fieldDefinitionNames?: string[];
                hasUniqueResidues?: boolean;
            } | null;
            containableType?: "NONE" | "ENTITY" | "BATCH";
            /**
             * DateTime the Entity Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface DeprecatedEntitySchemasList {
            entitySchemas?: /* EntitySchema */ DeprecatedEntitySchema[];
        }
        export interface DnaAlignment {
            /**
             * The canonical url of the DNA Alignment in the API.
             * example:
             * https://benchling.com/api/v2/dna-alignments/seqanl_6ZVdX98t
             */
            apiURL?: string; // uri
            /**
             * DateTime the DNA Alignment was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * seqanl_6ZVdX98t
             */
            id?: string;
            /**
             * DateTime the DNA Alignment was last modified
             */
            modifiedAt?: string; // date-time
            name?: string;
            /**
             * The ID of the template or consensus DNA Sequence associated with the DNA Alignment
             * example:
             * seq_MYmsnS1u
             */
            referenceSequenceId?: string;
            /**
             * The Benchling web UI url to view the DNA Alignment
             */
            webURL?: string; // uri
            alignedSequences?: AlignedSequence[];
        }
        export interface DnaAlignmentBase {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | DnaTemplateAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
        }
        export interface DnaAlignmentSummary {
            /**
             * The canonical url of the DNA Alignment in the API.
             * example:
             * https://benchling.com/api/v2/dna-alignments/seqanl_6ZVdX98t
             */
            apiURL?: string; // uri
            /**
             * DateTime the DNA Alignment was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * seqanl_6ZVdX98t
             */
            id?: string;
            /**
             * DateTime the DNA Alignment was last modified
             */
            modifiedAt?: string; // date-time
            name?: string;
            /**
             * The ID of the template or consensus DNA Sequence associated with the DNA Alignment
             * example:
             * seq_MYmsnS1u
             */
            referenceSequenceId?: string;
            /**
             * The Benchling web UI url to view the DNA Alignment
             */
            webURL?: string; // uri
        }
        export interface DnaAlignmentsPaginatedList {
            nextToken?: string;
            dnaAlignments?: DnaAlignmentSummary[];
        }
        export interface DnaAnnotation {
            /**
             * Hex color code used when displaying this feature in the UI.
             * example:
             * #F58A5E
             */
            color?: string;
            customFields?: [
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?
            ];
            name?: string;
            /**
             * example:
             * Cong et al Science. 2013 Jan 3.
             */
            notes?: string;
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            strand?: number;
            type?: string;
        }
        export interface DnaConsensusAlignmentCreate {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | DnaTemplateAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
            newSequence?: {
                /**
                 * example:
                 * lib_qQFY3WQH
                 */
                folderId?: string;
            };
            sequenceId?: string;
        }
        export interface DnaOligo {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * The canonical url of the Oligo in the API.
             * example:
             * https://benchling.com/api/v2/dna-oligos/seq_bhuDUw9D
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Base pairs of the Oligo.
             * example:
             * ACTTTTT
             */
            bases?: string;
            /**
             * DateTime the Oligo was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Oligo.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Oligo if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Oligo.
             */
            folderId?: string | null;
            /**
             * ID of the Oligo.
             * example:
             * seq_bhuDUw9D
             */
            id?: string;
            /**
             * Number of bases in the Oligo.
             */
            length?: number;
            /**
             * DateTime the Oligo was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Oligo.
             */
            name?: string;
            /**
             * Nucleotide type of the Oligo.
             */
            nucleotideType?: "DNA" | "RNA";
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Oligo is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Oligo.
             * example:
             * https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
             */
            webURL?: string; // uri
            /**
             * Annotations on the Oligo.
             */
            annotations?: DnaAnnotation[];
            /**
             * Representation of the oligo in the custom notation specified in the request. Null if no notation was specified.
             */
            customNotation?: string | null;
            /**
             * Name of the custom notation specified in the request. Null if no notation was specified.
             */
            customNotationName?: string | null;
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{d(A)p.d(C)[Ssp].d(T)p.d(T)p.d(T)p.d(T)p.d(T)p}$$$$V2.0
             */
            helm?: string;
        }
        export interface DnaOligoBulkUpdate {
            id?: string;
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: DnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{d(A)p.d([impd2G])p.d(G)[Ssp].d(A)p.d(T)p.d(T)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface DnaOligoCreate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: DnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{d(A)p.d([impd2G])p.d(G)[Ssp].d(A)p.d(T)p.d(T)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface DnaOligoUpdate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: DnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{d(A)p.d([impd2G])p.d(G)[Ssp].d(A)p.d(T)p.d(T)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface DnaOligoWithEntityType {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * The canonical url of the Oligo in the API.
             * example:
             * https://benchling.com/api/v2/dna-oligos/seq_bhuDUw9D
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Base pairs of the Oligo.
             * example:
             * ACTTTTT
             */
            bases?: string;
            /**
             * DateTime the Oligo was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Oligo.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Oligo if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Oligo.
             */
            folderId?: string | null;
            /**
             * ID of the Oligo.
             * example:
             * seq_bhuDUw9D
             */
            id?: string;
            /**
             * Number of bases in the Oligo.
             */
            length?: number;
            /**
             * DateTime the Oligo was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Oligo.
             */
            name?: string;
            /**
             * Nucleotide type of the Oligo.
             */
            nucleotideType?: "DNA" | "RNA";
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Oligo is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Oligo.
             * example:
             * https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
             */
            webURL?: string; // uri
            /**
             * Annotations on the Oligo.
             */
            annotations?: DnaAnnotation[];
            /**
             * Representation of the oligo in the custom notation specified in the request. Null if no notation was specified.
             */
            customNotation?: string | null;
            /**
             * Name of the custom notation specified in the request. Null if no notation was specified.
             */
            customNotationName?: string | null;
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{d(A)p.d(C)[Ssp].d(T)p.d(T)p.d(T)p.d(T)p.d(T)p}$$$$V2.0
             */
            helm?: string;
            entityType?: "dna_oligo";
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA Oligos along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface DnaOligosArchivalChange {
            batchIds?: string[];
            dnaOligoIds?: string[];
        }
        /**
         * The request body for archiving DNA Oligos.
         *
         */
        export interface DnaOligosArchive {
            dnaOligoIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface DnaOligosBulkCreateRequest {
            dnaOligos?: [
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?,
                DnaOligoCreate?
            ];
        }
        export interface DnaOligosBulkUpdateRequest {
            dnaOligos?: DnaOligoBulkUpdate[];
        }
        export interface DnaOligosPaginatedList {
            nextToken?: string;
            dnaOligos?: DnaOligo[];
        }
        /**
         * The request body for unarchiving DNA Oligos.
         *
         */
        export interface DnaOligosUnarchive {
            dnaOligoIds: string[];
        }
        export interface DnaSequence {
            aliases?: string[];
            annotations?: DnaAnnotation[];
            /**
             * The canonical url of the DNA Sequence in the API.
             * example:
             * https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            bases?: string;
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            entityRegistryId?: string | null;
            fields?: Fields;
            folderId?: string | null;
            id?: string;
            isCircular?: boolean;
            length?: number;
            modifiedAt?: string; // date-time
            name?: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            translations?: Translation[];
            webURL?: string;
        }
        export interface DnaSequenceBaseRequest {
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the DNA sequence.
             *
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular?: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name?: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
        }
        export interface DnaSequenceBaseRequestForCreate {
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the DNA sequence.
             *
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
        }
        export interface DnaSequenceBulkCreate {
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface DnaSequenceBulkUpdate {
            id?: string;
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the DNA sequence.
             *
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular?: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name?: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
        }
        export interface DnaSequenceCreate {
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface DnaSequencePart {
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * example:
             * seq_VfVOART1
             */
            sequenceId?: string;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * 1
             */
            strand?: number;
        }
        export interface DnaSequenceRequestRegistryFields {
            entityRegistryId?: string;
        }
        export interface DnaSequenceSummary {
            entityType?: "dna_sequence";
            /**
             * example:
             * seq_ObbdtGhC
             */
            id?: string;
            type?: string;
        }
        export interface DnaSequenceUpdate {
            /**
             * Aliases to add to the DNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the DNA sequence.
             *
             */
            annotations?: DnaAnnotation[];
            /**
             * IDs of users to set as the DNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the DNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the DNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the DNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the DNA sequence.
             *
             */
            folderId?: string;
            /**
             * Whether the DNA sequence is circular or linear.
             *
             */
            isCircular?: boolean;
            /**
             * Name of the DNA sequence.
             *
             */
            name?: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the DNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the DNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            entityRegistryId?: string;
        }
        export interface DnaSequenceWithEntityType {
            aliases?: string[];
            annotations?: DnaAnnotation[];
            /**
             * The canonical url of the DNA Sequence in the API.
             * example:
             * https://benchling.com/api/v2/dna-sequences/seq_asQya4lk
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            bases?: string;
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            entityRegistryId?: string | null;
            fields?: Fields;
            folderId?: string | null;
            id?: string;
            isCircular?: boolean;
            length?: number;
            modifiedAt?: string; // date-time
            name?: string;
            parts?: DnaSequencePart[];
            primers?: Primer[];
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            translations?: Translation[];
            webURL?: string;
            entityType?: "dna_sequence";
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA sequences along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface DnaSequencesArchivalChange {
            batchIds?: string[];
            dnaSequenceIds?: string[];
        }
        /**
         * The request body for archiving DNA sequences.
         *
         */
        export interface DnaSequencesArchive {
            dnaSequenceIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface DnaSequencesBulkCreateRequest {
            dnaSequences?: [
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?,
                DnaSequenceBulkCreate?
            ];
        }
        export interface DnaSequencesBulkGet {
            dnaSequences?: DnaSequence[];
        }
        export interface DnaSequencesBulkUpdateRequest {
            dnaSequences?: DnaSequenceBulkUpdate[];
        }
        export interface DnaSequencesPaginatedList {
            dnaSequences?: DnaSequence[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving DNA sequences.
         *
         */
        export interface DnaSequencesUnarchive {
            dnaSequenceIds: string[];
        }
        export interface DnaTemplateAlignmentCreate {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | DnaTemplateAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
            /**
             * example:
             * seq_rXqq0IHU
             */
            templateSequenceId: string;
        }
        export interface DnaTemplateAlignmentFile {
            data?: string; // byte
            name?: string;
        }
        /**
         * Dropdowns are registry-wide enums. Use dropdowns to standardize on spelling and naming conventions, especially for important metadata like resistance markers.
         */
        export interface Dropdown {
            /**
             * ID of the dropdown
             */
            id?: string;
            /**
             * Name of the dropdown
             */
            name?: string;
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Array of dropdown options
             */
            options?: DropdownOption[];
        }
        export interface DropdownCreate {
            /**
             * Name of the dropdown
             */
            name: string;
            /**
             * Options to set for the dropdown
             */
            options: DropdownOptionCreate[];
            /**
             * ID of registry in which to create the dropdown. Required if multiple registries exist.
             */
            registryId?: string | null; // ^src_\w+
        }
        export interface DropdownFieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
            dropdownId?: string | null;
        }
        export interface DropdownMultiValueUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            dropdownId: string;
            type: "DROPDOWN_MULTIVALUE";
        }
        export interface DropdownMultiValueUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            dropdownId: string;
            type: "DROPDOWN_MULTIVALUE";
        }
        export interface DropdownMultiValueUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            dropdownId: string;
            type: "DROPDOWN_MULTIVALUE";
        }
        export interface DropdownOption {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            id?: string;
            name?: string;
        }
        export interface DropdownOptionCreate {
            name: string;
        }
        export interface DropdownOptionUpdate {
            /**
             * ID of the dropdown option to update, omitted if creating a new option.
             * example:
             * sfs_9cGQIqS3
             */
            id?: string; // ^sfs_\w+
            /**
             * Name of the dropdown option.
             */
            name: string;
        }
        /**
         * IDs of all items that were archived or unarchived.
         *
         */
        export interface DropdownOptionsArchivalChange {
            dropdownOptionIds?: string[];
        }
        export interface DropdownOptionsArchive {
            /**
             * Array of dropdown option IDs
             */
            dropdownOptionIds?: string[];
            /**
             * Reason that dropdown options are being archived.
             *
             */
            reason?: "Made in error" | "Retired" | "Other";
        }
        export interface DropdownOptionsUnarchive {
            /**
             * Array of dropdown option IDs
             */
            dropdownOptionIds?: string[];
        }
        export interface DropdownSummariesPaginatedList {
            dropdowns?: DropdownSummary[];
            nextToken?: string;
        }
        export interface DropdownSummary {
            /**
             * ID of the dropdown
             */
            id?: string;
            /**
             * Name of the dropdown
             */
            name?: string;
        }
        export interface DropdownUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            dropdownId: string;
            type: "DROPDOWN";
        }
        export interface DropdownUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            dropdownId: string;
            type: "DROPDOWN";
        }
        export interface DropdownUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            dropdownId: string;
            type: "DROPDOWN";
        }
        export interface DropdownUpdate {
            /**
             * Options to set for the dropdown
             */
            options: DropdownOptionUpdate[];
        }
        export interface DropdownsRegistryList {
            dropdowns?: DropdownSummary[];
        }
        export interface EmptyObject {
        }
        export type Entity = DnaSequence | AaSequence | Mixture | DnaOligo | RnaOligo | CustomEntity;
        /**
         * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
         *
         */
        export type EntityArchiveReason = "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
        export interface EntityLabels {
            /**
             * example:
             * REAG000
             */
            entityRegistryId?: string | null;
            /**
             * example:
             * bfi_12345
             */
            id?: string;
            /**
             * example:
             * Deionized Water
             */
            name?: string;
        }
        export type EntityOrInaccessibleResource = Entity | InaccessibleResource;
        export interface EntityRegisteredEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            entity?: GenericEntity;
            eventType?: "v2.entity.registered";
        }
        /**
         * EntitySchema
         */
        export interface EntitySchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "custom_entity" | "dna_sequence" | "aa_sequence" | "mixture" | "dna_oligo" | "rna_oligo" | "molecule";
            prefix?: string;
            registryId?: string;
            constraint?: {
                fieldDefinitionNames?: string[];
                hasUniqueResidues?: boolean;
            } | null;
            containableType?: "NONE" | "ENTITY" | "BATCH";
            /**
             * DateTime the Entity Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
        }
        export interface EntitySchemaAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * entity_schema
             */
            type?: "entity_schema";
            description?: string;
            requiredConfig?: boolean;
            linkedResource?: ({
                [key: string]: any;
            } | null) & (LinkedAppConfigResourceSummary | InaccessibleResource);
            subtype?: SchemaDependencySubtypes;
            /**
             * example:
             * ts_e59sjL23
             */
            value?: string | null;
        }
        export interface EntitySchemasPaginatedList {
            entitySchemas?: /* EntitySchema */ EntitySchema[];
            nextToken?: string;
        }
        export interface Entries {
            entries?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry[];
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of entries that changed..
         *
         */
        export interface EntriesArchivalChange {
            entryIds?: string[];
        }
        export interface EntriesArchive {
            /**
             * Array of entry IDs
             */
            entryIds: string[];
            /**
             * Reason that entries are being archived. One of ["Made in error", "Retired", "Other"].
             *
             */
            reason: "Made in error" | "Retired" | "Other";
        }
        export interface EntriesPaginatedList {
            entries?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry[];
            nextToken?: string;
        }
        export interface EntriesUnarchive {
            /**
             * Array of entry IDs
             */
            entryIds: string[];
        }
        /**
         * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
         *
         * *Note:* the current Entry resource has a few limitations:
         * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
         * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
         *
         * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
         *
         */
        export interface Entry {
            /**
             * The canonical url of the Entry in the API.
             * example:
             * https://benchling.com/api/v2/entries/etr_tv7m7B78
             */
            apiURL?: string; // uri
            /**
             * ArchiveRecord Resource if the entry is archived. This is null if the entry is not archived.
             *
             */
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Array of users assigned to review the entry, if any.
             *
             */
            assignedReviewers?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * Array of UserSummary Resources of the authors of the entry. This defaults to the creator but can be manually changed.
             *
             */
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * DateTime the entry was created at
             */
            createdAt?: string; // date-time
            /**
             * UserSummary Resource of the user who created the entry
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * Array of day objects. Each day object has a date field (string) and notes field (array of notes, expand further for details on note types).
             *
             */
            days?: EntryDay[];
            /**
             * User-friendly ID of the entry
             */
            displayId?: string;
            /**
             * ID of the Entry Template this Entry was created from
             */
            entryTemplateId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the entry
             */
            folderId?: string;
            /**
             * ID of the entry
             */
            id?: string;
            /**
             * DateTime the entry was last modified
             */
            modifiedAt?: string;
            /**
             * Title of the entry
             */
            name?: string;
            /**
             * Review record if set
             */
            reviewRecord?: {
                /**
                 * Reviewer's Comments
                 */
                comment?: string;
                /**
                 * Review Status of the entry
                 */
                status?: "ACCEPTED" | "NEEDS_REVIEW" | "REJECTED" | "RETRACTED" | "ACCEPTANCE_SNAPSHOT_IN_PROGRESS" | "REVIEW_SNAPSHOT_IN_PROGRESS" | "IN_PROGRESS" | "ACTION_REQUIRED";
            } | null;
            /**
             * SchemaProperty
             * Entry schema if set
             */
            schema?: {
                /**
                 * ID of the entry schema
                 */
                id?: string;
                /**
                 * DateTime the Entry Schema was last modified
                 * example:
                 * 2017-04-18T05:55:48.685345+00:00
                 */
                modifiedAt?: string; // date-time
                /**
                 * Name of the entry schema
                 */
                name?: string;
            } | null;
            /**
             * URL of the entry
             */
            webURL?: string;
        }
        export interface EntryById {
            entry?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry;
        }
        export interface EntryCreate {
            authorIds?: string | string[];
            /**
             * Custom fields to add to the entry
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * ID of the template to clone the entry from
             */
            entryTemplateId?: string;
            /**
             * Fields to set on the entry. Must correspond with the schema's field definitions.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that will contain the entry
             */
            folderId: string;
            /**
             * An array of table API IDs and blob id pairs to seed tables from the template while creating the entry. The entryTemplateId parameter must be set to use this parameter. The table API IDs should be the API Identifiers of the tables in the given template.
             * - If a template table has one row, the values in that row act as default values for cloned entries.
             * - If a template table has multiple rows, there is no default value and those rows are added to the cloned entry along with the provided csv data.
             * - If a table has default values, they will be populated in any respective undefined columns in the csv data.
             * - If a table has no default values, undefined columns from csv data will be empty.
             * - If no csv data is provided for a table, the table in the entry will be populated with whatever values are in the respective template table.
             *
             */
            initialTables?: InitialTable[];
            /**
             * Name of the entry
             */
            name: string;
            /**
             * ID of the entry's schema
             */
            schemaId?: string;
        }
        export interface EntryCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            entry?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry;
            eventType?: "v2.entry.created";
        }
        export interface EntryDay {
            /**
             * A Date string
             */
            date?: string;
            notes?: /**
             * Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
             *
             */
            EntryNotePart[];
        }
        /**
         * The ExternalFile resource stores metadata about the file. The actual original file can be downloaded by using the 'downloadURL' property.
         *
         */
        export interface EntryExternalFile {
            /**
             * A short-lived URL that can be used to download the original file.
             *
             */
            downloadURL?: string;
            /**
             * UNIX timestamp when downloadURL expires.
             */
            expiresAt?: number;
            /**
             * ID of the external file
             */
            id?: string;
            /**
             * Size, in bytes, of the external file
             */
            size?: number;
        }
        export interface EntryExternalFileById {
            externalFile?: /**
             * The ExternalFile resource stores metadata about the file. The actual original file can be downloaded by using the 'downloadURL' property.
             *
             */
            EntryExternalFile;
        }
        /**
         * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
         *
         */
        export interface EntryLink {
            /**
             * For linked Benchling resources, this will be the ID of that resource (e.g., 'seq_RhYGVnHF'). Omitted for "link" types.
             *
             */
            id?: string;
            /**
             * The type of resource being linked. For hyperlinks: 'link'. For linked Benchling resources, one of: 'user', 'request', 'entry', 'stage_entry', 'protocol', 'workflow', 'custom_entity', 'aa_sequence', 'dna_sequence', 'batch', 'box', 'container', 'location', 'plate'.
             *
             */
            type?: "link" | "user" | "request" | "entry" | "stage_entry" | "protocol" | "workflow" | "custom_entity" | "aa_sequence" | "dna_sequence" | "batch" | "box" | "container" | "location" | "plate";
            /**
             * Canonical URL of the linked Benchling resource (if you have at least READ authorization for that resource), or the explicit URL provided as hyperlink for "link" types. Note: locations do not currently have a URL.
             *
             */
            webURL?: string | null;
        }
        /**
         * Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
         *
         */
        export type EntryNotePart = /**
         * Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
         *
         */
        /**
         * Simple note parts include the following types: - 'text': plain text - 'code': preformatted code block - 'list_bullet': one "line" of a bulleted list - 'list_number': one "line" of a numbered list
         *
         */
        SimpleNotePart | /* A table with rows and columns of text */ TableNotePart | TextBoxNotePart | /* One "line" of a checklist */ CheckboxNotePart | /* An attached user-uploaded file */ ExternalFileNotePart | AssayRunNotePart | LookupTableNotePart | ResultsTableNotePart | RegistrationTableNotePart | PlateCreationTableNotePart | BoxCreationTableNotePart | MixturePrepTableNotePart;
        /**
         * Entry schema
         */
        export interface EntrySchema {
            /**
             * ID of the entry schema
             */
            id?: string;
            /**
             * DateTime the Entry Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the entry schema
             */
            name?: string;
        }
        export interface EntrySchemaDetailed {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "entry";
            prefix?: string;
            registryId?: string;
        }
        export interface EntrySchemasPaginatedList {
            entrySchemas?: EntrySchemaDetailed[];
            nextToken?: string;
        }
        /**
         * Actual tabular data with rows and columns of text on the note.
         *
         */
        export interface EntryTable {
            /**
             * Array of strings, with one item per column. Defaults to null, if the user is using the default, but is set if the user has given a custom name to the column.
             *
             */
            columnLabels?: (string | null)[];
            /**
             * Name of the table - defaults to e.g. Table1 but can be renamed.
             *
             */
            name?: string;
            /**
             * Array of row objects.
             */
            rows?: /* Each has property 'cells' that is an array of cell objects */ EntryTableRow[];
        }
        export interface EntryTableCell {
            /**
             * A Link Resource if this cell contained a hyperlink. Otherwise, link will be omitted from the cell object. (Note: inventory and user types are not yet supported.)
             *
             */
            link?: {
                /**
                 * For linked Benchling resources, this will be the ID of that resource (e.g., 'seq_RhYGVnHF'). Omitted for "link" types.
                 *
                 */
                id?: string;
                /**
                 * The type of resource being linked. For hyperlinks: 'link'. For linked Benchling resources, one of: 'user', 'request', 'entry', 'stage_entry', 'protocol', 'workflow', 'custom_entity', 'aa_sequence', 'dna_sequence', 'batch', 'box', 'container', 'location', 'plate'.
                 *
                 */
                type?: "link" | "user" | "request" | "entry" | "stage_entry" | "protocol" | "workflow" | "custom_entity" | "aa_sequence" | "dna_sequence" | "batch" | "box" | "container" | "location" | "plate";
                /**
                 * Canonical URL of the linked Benchling resource (if you have at least READ authorization for that resource), or the explicit URL provided as hyperlink for "link" types. Note: locations do not currently have a URL.
                 *
                 */
                webURL?: string | null;
            };
            /**
             * The textual content of the cell. If the cell was originally a formula, this will be the evaluated version of the formula.
             *
             */
            text?: string;
        }
        /**
         * Each has property 'cells' that is an array of cell objects
         */
        export interface EntryTableRow {
            cells?: EntryTableCell[];
        }
        /**
         * Entry templates are templates that users can base new notebook entries off of.
         *
         */
        export interface EntryTemplate {
            /**
             * The canonical url of the Entry Template in the API.
             * example:
             * https://benchling.com/api/v2/entry-templates/tmpl_tv7m7B78
             */
            apiURL?: string; // uri
            /**
             * DateTime the template was created at
             */
            createdAt?: string; // date-time
            /**
             * UserSummary Resource of the user who created the template
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * Array of day objects. Each day object has a day index (integer) and notes field (array of notes, expand further for details on note types).
             *
             */
            days?: EntryTemplateDay[];
            fields?: Fields;
            /**
             * ID of the entry template
             */
            id?: string;
            /**
             * DateTime the template was last modified
             */
            modifiedAt?: string;
            /**
             * Title of the template
             */
            name?: string;
            /**
             * SchemaProperty
             * Entry schema if set
             */
            schema?: {
                /**
                 * ID of the entry schema
                 */
                id?: string;
                /**
                 * DateTime the Entry Schema was last modified
                 * example:
                 * 2017-04-18T05:55:48.685345+00:00
                 */
                modifiedAt?: string; // date-time
                /**
                 * Name of the entry schema
                 */
                name?: string;
            } | null;
            /**
             * ID of the collection that contains the template
             */
            templateCollectionId?: string;
            /**
             * URL of the template
             */
            webURL?: string;
        }
        export interface EntryTemplateDay {
            /**
             * 1 indexed day signifier.
             */
            day?: number;
            notes?: /**
             * Notes are the main building blocks of entries. Each note corresponds roughly to a paragraph.
             *
             */
            EntryNotePart[];
        }
        export interface EntryTemplatesPaginatedList {
            entryTemplates?: /**
             * Entry templates are templates that users can base new notebook entries off of.
             *
             */
            EntryTemplate[];
            nextToken?: string;
        }
        export interface EntryUpdate {
            /**
             * IDs of users to set as the entry's authors.
             */
            authorIds?: string;
            /**
             * Schema fields to set on the entry
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that will contain the entry
             */
            folderId?: string;
            /**
             * New name of the entry
             */
            name?: string;
            /**
             * ID of the schema for the entry
             */
            schemaId?: string;
        }
        export interface EntryUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            entry?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry;
            eventType?: "v2.entry.updated.fields";
        }
        export interface EntryUpdatedReviewRecordEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            entry?: /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Entry;
            eventType?: "v2.entry.updated.reviewRecord";
        }
        export type Event = EntityRegisteredEvent | EntryCreatedEvent | EntryUpdatedFieldsEvent | EntryUpdatedReviewRecordEvent | StageEntryCreatedEvent | StageEntryUpdatedFieldsEvent | StageEntryUpdatedReviewRecordEvent | RequestCreatedEvent | RequestUpdatedFieldsEvent | AssayRunCreatedEvent | AssayRunUpdatedFieldsEvent | AutomationInputGeneratorCompletedV2BetaEvent | AutomationOutputProcessorCompletedV2BetaEvent | AutomationOutputProcessorUploadedV2BetaEvent | WorkflowTaskGroupCreatedEvent | WorkflowTaskCreatedEvent | WorkflowTaskUpdatedFieldsEvent | WorkflowTaskUpdatedStatusEvent | WorkflowTaskUpdatedAssigneeEvent | WorkflowTaskUpdatedScheduledOnEvent | WorkflowTaskGroupUpdatedWatchersEvent | WorkflowOutputCreatedEvent | WorkflowOutputUpdatedFieldsEvent;
        export interface EventBase {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
        }
        export interface EventsPaginatedList {
            events?: Event[];
            nextToken?: string;
        }
        /**
         * The response is intentionally empty.
         *
         */
        export interface ExecuteSampleGroups {
        }
        export interface ExportItemRequest {
            /**
             * ID of the item to export
             * example:
             * etr_1X1AlQPD
             */
            id: string;
        }
        export interface ExportsAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                downloadURL?: string; // uri
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        /**
         * An attached user-uploaded file
         */
        export interface ExternalFileNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "external_file";
            /**
             * The ID of the external file. Use the 'Get an external file' endpoint to retrieve metadata about it.
             *
             */
            externalFileId?: string;
            /**
             * Array of links referenced in the caption via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
             *
             */
            links?: /**
             * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
             *
             */
            EntryLink[];
            /**
             * The caption of the file attachment.
             */
            text?: string;
        }
        /**
         * A feature from a feature library
         */
        export interface Feature {
            /**
             * The color of the annotations generated by the feature. Must be a valid hex string
             * example:
             * #F58A5E
             */
            color?: string;
            /**
             * The id of the feature library the feature belongs to
             * example:
             * featlib_19kd9aDq
             */
            featureLibraryId?: string;
            /**
             * The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
             *
             */
            featureType?: string | null;
            /**
             * The name of the feature
             */
            name?: string;
            /**
             * The pattern used for matching during auto-annotation.
             */
            pattern?: string;
            /**
             * The id of the feature
             * example:
             * feat_4YVqX98z
             */
            id?: string;
            /**
             * The match type of the feature. Used to determine how auto-annotate matches are made.
             */
            matchType?: "nucleotide" | "protein";
        }
        export interface FeatureBase {
            /**
             * The color of the annotations generated by the feature. Must be a valid hex string
             * example:
             * #F58A5E
             */
            color?: string;
            /**
             * The id of the feature library the feature belongs to
             * example:
             * featlib_19kd9aDq
             */
            featureLibraryId?: string;
            /**
             * The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
             *
             */
            featureType?: string | null;
            /**
             * The name of the feature
             */
            name?: string;
            /**
             * The pattern used for matching during auto-annotation.
             */
            pattern?: string;
        }
        /**
         * Inputs for a new feature
         */
        export interface FeatureBulkCreate {
            /**
             * The color of the annotations generated by the feature. Must be a valid hex string
             * example:
             * #F58A5E
             */
            color?: string;
            /**
             * The id of the feature library the feature belongs to
             * example:
             * featlib_19kd9aDq
             */
            featureLibraryId: string;
            /**
             * The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
             *
             */
            featureType: string | null;
            /**
             * The name of the feature
             */
            name: string;
            /**
             * The pattern used for matching during auto-annotation.
             */
            pattern: string;
            /**
             * The match type of the feature. Used to determine how auto-annotate matches are made.
             */
            matchType: "nucleotide" | "protein";
        }
        /**
         * Inputs for a new feature
         */
        export interface FeatureCreate {
            /**
             * The color of the annotations generated by the feature. Must be a valid hex string
             * example:
             * #F58A5E
             */
            color?: string;
            /**
             * The id of the feature library the feature belongs to
             * example:
             * featlib_19kd9aDq
             */
            featureLibraryId: string;
            /**
             * The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
             *
             */
            featureType: string | null;
            /**
             * The name of the feature
             */
            name: string;
            /**
             * The pattern used for matching during auto-annotation.
             */
            pattern: string;
            /**
             * The match type of the feature. Used to determine how auto-annotate matches are made.
             */
            matchType: "nucleotide" | "protein";
        }
        /**
         * A paginated list of feature libraries
         */
        export interface FeatureLibrariesPaginatedList {
            nextToken?: string;
            featureLibraries?: /* A feature library */ FeatureLibrary[];
        }
        /**
         * A feature library
         */
        export interface FeatureLibrary {
            /**
             * The description for the feature library
             */
            description?: string;
            /**
             * The name of the feature library
             */
            name?: string;
            /**
             * DateTime the Feature Library was created
             */
            createdAt?: string; // date-time
            /**
             * The id of the feature library
             * example:
             * featlib_6ZVdX98t
             */
            id?: string;
            /**
             * DateTime the Feature Library was last modified
             */
            modifiedAt?: string; // date-time
            owner?: Organization | /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * The Benchling web UI url to view the Feature Library
             */
            webURL?: string; // uri
        }
        export interface FeatureLibraryBase {
            /**
             * The description for the feature library
             */
            description?: string;
            /**
             * The name of the feature library
             */
            name?: string;
        }
        /**
         * Inputs for creating a feature library
         */
        export interface FeatureLibraryCreate {
            /**
             * The description for the feature library
             */
            description: string;
            /**
             * The name of the feature library
             */
            name: string;
            /**
             * The organization that will own the feature library. The requesting user must be an administrator of the organization. If unspecified and the organization allows personal ownables, then the requesting user will own the feature library
             *
             * example:
             * ent_a0SApq3z
             */
            organizationId?: string;
        }
        /**
         * Inputs for updating a feature library
         */
        export interface FeatureLibraryUpdate {
            /**
             * The description for the feature library
             */
            description?: string;
            /**
             * The name of the feature library
             */
            name?: string;
        }
        /**
         * Inputs for updating a feature
         */
        export interface FeatureUpdate {
            /**
             * The color of the annotations generated by the feature. Must be a valid hex string
             * example:
             * #F58A5E
             */
            color?: string;
            /**
             * The id of the feature library the feature belongs to
             * example:
             * featlib_19kd9aDq
             */
            featureLibraryId?: string;
            /**
             * The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum
             *
             */
            featureType?: string | null;
            /**
             * The name of the feature
             */
            name?: string;
            /**
             * The pattern used for matching during auto-annotation.
             */
            pattern?: string;
        }
        /**
         * Inputs for bulk creating a new feature
         */
        export interface FeaturesBulkCreateRequest {
            features?: [
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?,
                /* Inputs for a new feature */ FeatureBulkCreate?
            ];
        }
        /**
         * A paginated list of features
         */
        export interface FeaturesPaginatedList {
            nextToken?: string;
            /**
             * List of features for the page
             */
            features?: /* A feature from a feature library */ Feature[];
        }
        export interface Field {
            displayValue?: string | null;
            isMulti?: boolean;
            /**
             * example:
             * Amp
             */
            textValue?: string | null;
            type?: "dna_sequence_link" | "aa_sequence_link" | "custom_entity_link" | "entity_link" | "mixture_link" | "dropdown" | "part_link" | "translation_link" | "blob_link" | "text" | "long_text" | "batch_link" | "storage_link" | "entry_link" | "assay_request_link" | "assay_result_link" | "assay_run_link" | "boolean" | "float" | "integer" | "datetime" | "date" | "json";
            /**
             * For single link fields, use the id of the item you want to link (eg. "seq_jdf8BV24").
             * For multi-link fields, use an array of ids of the items you want to link (eg. ["seq_jdf8BV24"])
             *
             */
            value: /**
             * For single link fields, use the id of the item you want to link (eg. "seq_jdf8BV24").
             * For multi-link fields, use an array of ids of the items you want to link (eg. ["seq_jdf8BV24"])
             *
             */
            null | null | null | null | null;
        }
        export interface FieldAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * field
             */
            type?: "field";
            description?: string;
            requiredConfig?: boolean;
            linkedResource?: ({
                [key: string]: any;
            } | null) & (LinkedAppConfigResourceSummary | InaccessibleResource);
            /**
             * example:
             * tsf_e59a3b23
             */
            value?: string | null;
        }
        export interface FieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
        }
        export type FieldType = "dna_sequence_link" | "aa_sequence_link" | "custom_entity_link" | "entity_link" | "mixture_link" | "dropdown" | "part_link" | "translation_link" | "blob_link" | "text" | "long_text" | "batch_link" | "storage_link" | "entry_link" | "assay_request_link" | "assay_result_link" | "assay_run_link" | "boolean" | "float" | "integer" | "datetime" | "date" | "json";
        export interface Fields {
            [name: string]: Field;
        }
        export interface FindMatchingRegionsAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                aaSequenceMatches?: {
                    matchingAASequenceIds?: string[];
                    targetAASequenceId?: string;
                }[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface FindMatchingRegionsDnaAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                dnaSequenceMatches?: {
                    matchingDnaSequenceIds?: string[];
                    targetDnaSequenceId?: string;
                }[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface FloatAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * float
             */
            type?: "float";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * 1
             */
            value?: number | null; // float
        }
        export interface FloatFieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
            decimalPrecision?: number | null;
            legalTextDropdownId?: string | null;
            numericMax?: number | null;
            numericMin?: number | null;
        }
        export interface Folder {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            id?: string;
            name?: string;
            /**
             * ID of the parent folder, if it exists
             */
            parentFolderId?: string | null;
            /**
             * ID of the containing project
             */
            projectId?: string;
        }
        export interface FolderCreate {
            /**
             * The name of the new folder.
             */
            name: string;
            /**
             * The ID of the parent folder.
             */
            parentFolderId: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of folders along with any IDs of folder contents that were unarchived.
         *
         */
        export interface FoldersArchivalChange {
            aaSequenceIds?: string[];
            customEntityIds?: string[];
            dnaSequenceIds?: string[];
            entryIds?: string[];
            folderIds?: string[];
            mixtureIds?: string[];
            oligoIds?: string[];
            protocolIds?: string[];
        }
        export interface FoldersArchive {
            /**
             * A list of folder IDs to archive.
             */
            folderIds: string[];
            /**
             * The reason for archiving the provided folders. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Made in error" | "Retired" | "Other";
        }
        export interface FoldersPaginatedList {
            folders?: Folder[];
            nextToken?: string;
        }
        export interface FoldersUnarchive {
            /**
             * A list of folder IDs to unarchive.
             */
            folderIds: string[];
        }
        export interface ForbiddenError {
            error?: {
                invalidId?: string;
                message?: string;
                type?: string;
                userMessage?: string;
            };
        }
        export interface ForbiddenRestrictedSampleError {
            /**
             * example:
             * {
             *   "invalidIds": [
             *     "Q6uhNZvw",
             *     "con_OwmERWGE",
             *     "con_zuDFhNvz"
             *   ],
             *   "message": "You're not a restricted sample user for some items.",
             *   "type": "invalid_request_error",
             *   "userMessage": "You're not a restricted sample user for some items."
             * }
             */
            error?: {
                message?: string;
                type?: "invalid_request_error";
                userMessage?: string;
                invalidIds?: string[];
            };
        }
        export interface GenericApiIdentifiedAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             */
            type?: "container_schema" | "plate_schema" | "location_schema" | "box_schema" | "run_schema" | "result_schema" | "request_schema" | "entry_schema" | "workflow_task_schema" | "dropdown" | "dropdown_option" | "registry" | "folder" | "entry" | "worklist" | "project" | "workflow_task_status" | "dna_sequence" | "dna_oligo" | "aa_sequence" | "custom_entity" | "mixture" | "molecule" | "rna_oligo" | "rna_sequence" | "box" | "container" | "location" | "plate";
            description?: string;
            requiredConfig?: boolean;
            linkedResource?: ({
                [key: string]: any;
            } | null) & (LinkedAppConfigResourceSummary | InaccessibleResource);
            value?: string | null;
        }
        export interface GenericEntity {
            aliases?: string[];
            apiURL?: string;
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Array of UserSummary Resources of the authors of the entry. This defaults to the creator but can be manually changed.
             *
             */
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            createdAt?: string; // date-time
            /**
             * UserSummary of the user who created the request
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            entityRegistryId?: string | null;
            fields?: Fields;
            folderId?: string;
            id?: string;
            modifiedAt?: string; // date-time
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            registryId?: string | null;
            /**
             * SchemaProperty
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            webURL?: string;
        }
        export interface InaccessibleResource {
            inaccessibleId?: string;
            resourceType?: "inaccessible_resource";
            /**
             * The type of this inaccessible item. Example values: "custom_entity", "container", "plate", "dna_sequence"
             *
             * example:
             * custom_entity
             */
            type?: string;
        }
        export interface Ingredient {
            /**
             * The amount value of this ingredient in its mixture, in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4). One ingredient on this mixture can have an amount value of `"QS"`.
             *
             * example:
             * 12
             */
            amount?: string | null;
            /**
             * example:
             * DION_004
             */
            catalogIdentifier?: string | null;
            /**
             * The entity that uniquely identifies this component.
             */
            componentEntity?: {
                /**
                 * example:
                 * REAG000
                 */
                entityRegistryId?: string | null;
                /**
                 * example:
                 * bfi_12345
                 */
                id?: string;
                /**
                 * example:
                 * Deionized Water
                 */
                name?: string;
            };
            /**
             * The container representing the component lot for this ingredient. This is only present if the mixture schema supports component lots in "inventory" format.
             */
            componentLotContainer?: {
                /**
                 * example:
                 * VIAL001
                 */
                barcode?: string;
                /**
                 * example:
                 * cnt_12345
                 */
                id?: string;
                /**
                 * example:
                 * My Container
                 */
                name?: string;
            } | null;
            /**
             * The entity representing the component lot for this ingredient. This is only present if the mixture schema supports component lots in "inventory" format.
             */
            componentLotEntity?: {
                /**
                 * example:
                 * REAG000
                 */
                entityRegistryId?: string | null;
                /**
                 * example:
                 * bfi_12345
                 */
                id?: string;
                /**
                 * example:
                 * Deionized Water
                 */
                name?: string;
            } | null;
            /**
             * Text representing the component lot for this ingredient. This is only present if the mixture schema supports component lots in "text" format.
             * example:
             * DION_004-source_001
             */
            componentLotText?: string | null;
            hasParent?: boolean;
            notes?: string | null;
            /**
             * The target amount for this ingredient such that this ingredient's proportion in its mixture would preserve the equivalent ingredient's proportion in the parent mixture. Pair with `units`.
             * example:
             * 123
             */
            targetAmount?: string | null;
            units?: /**
             * example:
             * mL
             */
            IngredientMeasurementUnits;
        }
        /**
         * example:
         * mL
         */
        export type IngredientMeasurementUnits = "nL" | "uL" | "mL" | "L" | "mg" | "g" | "Units";
        export interface IngredientWriteParams {
            /**
             * The amount value of this ingredient in its mixture, in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4). One ingredient on this mixture can have an amount value of `"QS"`.
             *
             * example:
             * 12
             */
            amount: string | null;
            /**
             * example:
             * DION_004
             */
            catalogIdentifier: string | null;
            /**
             * The entity that uniquely identifies this component.
             * example:
             * bfi_37hdg8
             */
            componentEntityId: string;
            /**
             * The container representing the component lot for this ingredient. This is only writable if the mixture schema supports component lots in "inventory" format.
             * example:
             * cnt_12345
             */
            componentLotContainerId: string | null;
            /**
             * The entity representing the component lot for this ingredient. This is only writable if the mixture schema supports component lots in "inventory" format.
             * example:
             * bfi_12345
             */
            componentLotEntityId: string | null;
            /**
             * Text representing the component lot for this ingredient. This is only writable if the mixture schema supports component lots in "text" format.
             * example:
             * DION_004-source_001
             */
            componentLotText: string | null;
            notes: string | null;
            units: /**
             * example:
             * mL
             */
            IngredientMeasurementUnits;
        }
        export interface InitialTable {
            /**
             * blobId of an uploaded csv blob. The CSV should be formatted with column headers of `columnId` which can be found in the [EntryTemplate](#/components/schemas/EntryTemplate). For more information on uploading a blob, [click here](https://docs.benchling.com/docs/uploading-a-blob-to-benchling).
             */
            csvData?: string;
            /**
             * Template table API ID
             */
            templateTableID?: string;
        }
        export interface IntegerAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * integer
             */
            type?: "integer";
            description?: string;
            requiredConfig?: boolean;
            value?: number | null;
        }
        export interface IntegerFieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
            numericMax?: number | null;
            numericMin?: number | null;
        }
        export interface InteractiveUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
        }
        export interface JsonAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * json
             */
            type?: "json";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * {"abc": "123"}
             */
            value?: string | null;
        }
        export interface LabAutomationBenchlingAppError {
            message?: string;
        }
        export interface LabAutomationBenchlingAppErrors {
            topLevelErrors?: {
                errorMessage?: string;
            }[];
        }
        export interface LabAutomationTransform {
            /**
             * The canonical url of the transform in the API.
             */
            apiURL?: string; // uri
            blobId?: string | null; // uuid
            customTransformId?: string | null; // uuid
            errors?: LabAutomationBenchlingAppErrors;
            id?: string;
            inputGeneratorId?: string | null;
            /**
             * DateTime the transform was last modified.
             */
            modifiedAt?: string; // date-time
            outputProcessorId?: string | null;
            status?: "NOT_STARTED" | "RUNNING" | "FAILED" | "SUCCEEDED";
        }
        export interface LabAutomationTransformUpdate {
            blobId?: string; // uuid
            errors?: LabAutomationBenchlingAppError[];
        }
        export interface LabelTemplate {
            /**
             * ID of the label template.
             */
            id?: string;
            /**
             * Name of the label template.
             */
            name?: string;
            /**
             * The ZPL template that will be filled in and sent to a printer.
             */
            zplTemplate?: string;
        }
        export interface LabelTemplatesList {
            labelTemplates?: LabelTemplate[];
        }
        export interface LegacyWorkflow {
            /**
             * DateTime at which the the legacy workflow was created
             */
            createdAt?: string; // date-time
            /**
             * Description of the legacy workflow
             */
            description?: string | null;
            /**
             * User-friendly ID of the legacy workflow
             */
            displayId?: string;
            /**
             * ID of the legacy workflow
             * example:
             * wfw_uHBz7ka2
             */
            id?: string;
            /**
             * Name of the legacy workflow
             */
            name?: string;
            /**
             * ID of the project that contains the legacy workflow
             */
            projectId?: string;
        }
        export interface LegacyWorkflowList {
            workflows?: LegacyWorkflow[];
        }
        export interface LegacyWorkflowPatch {
            /**
             * Description of the legacy workflow
             */
            description?: string;
            /**
             * Name of the legacy workflow
             */
            name?: string;
            /**
             * ID of the project that contains the legacy workflow
             */
            projectId?: string;
        }
        export interface LegacyWorkflowSample {
            /**
             * ID of the batch
             */
            batchId?: string;
            /**
             * Array of IDs of containers
             */
            containerIds?: string[];
            /**
             * DateTime at which the the sample was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the sample
             */
            id?: string;
            /**
             * Name of the sample
             */
            name?: string;
        }
        export interface LegacyWorkflowSampleList {
            samples?: LegacyWorkflowSample[];
        }
        export interface LegacyWorkflowStage {
            /**
             * DateTime at which the the legacy workflow stage was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the legacy workflow stage
             */
            id?: string;
            /**
             * Name of the legacy workflow stage
             */
            name?: string;
        }
        export interface LegacyWorkflowStageList {
            workflowStages?: LegacyWorkflowStage[];
        }
        export interface LegacyWorkflowStageRun {
            /**
             * DateTime at which the the legacy workflow stage run was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the legacy workflow stage run
             */
            id?: string;
            /**
             * Name of the legacy workflow stage run
             */
            name?: string;
            /**
             * Status of the legacy workflow stage run
             */
            status?: "COMPLETED" | "DISCARDED" | "INITIALIZED";
        }
        export interface LegacyWorkflowStageRunList {
            workflowStageRuns?: LegacyWorkflowStageRun[];
        }
        export type LinkedAppConfigResource = LinkedAppConfigResourceSummary | InaccessibleResource;
        export interface LinkedAppConfigResourceMixin {
            linkedResource?: ({
                [key: string]: any;
            } | null) & (LinkedAppConfigResourceSummary | InaccessibleResource);
        }
        export interface LinkedAppConfigResourceSummary {
            /**
             * The API ID of the linked resource
             * example:
             * tsf_e59a3b23
             */
            id?: string;
            /**
             * The name of the resource in Benchling
             * example:
             * Parent Sample
             */
            name?: string;
        }
        export interface Location {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            barcode?: string;
            createdAt?: string;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            fields?: Fields;
            id?: string;
            modifiedAt?: string;
            name?: string;
            parentStorageId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            webURL?: string;
        }
        export interface LocationCreate {
            barcode?: string;
            fields?: Fields;
            name: string;
            parentStorageId?: string;
            schemaId: string;
        }
        export interface LocationSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "location";
            prefix?: string;
            registryId?: string;
        }
        export interface LocationSchemasList {
            locationSchemas?: LocationSchema[];
        }
        export interface LocationSchemasPaginatedList {
            locationSchemas?: LocationSchema[];
            nextToken?: string;
        }
        export interface LocationUpdate {
            fields?: Fields;
            name?: string;
            parentStorageId?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of locations along with any IDs of locations, boxes, plates, containers that were archived.
         *
         */
        export interface LocationsArchivalChange {
            boxIds?: string[];
            containerIds?: string[];
            locationIds?: string[];
            plateIds?: string[];
        }
        export interface LocationsArchive {
            /**
             * Array of location IDs
             */
            locationIds: string[];
            /**
             * Reason that locations are being archived.
             *
             */
            reason: "Made in error" | "Retired" | "Other";
            /**
             * Remove barcodes. Removing barcodes from archived inventory that contain items will also remove barcodes from the contained items.
             *
             */
            shouldRemoveBarcodes?: boolean;
        }
        export interface LocationsBulkGet {
            locations?: Location[];
        }
        export interface LocationsPaginatedList {
            locations?: Location[];
            nextToken?: string;
        }
        export interface LocationsUnarchive {
            /**
             * Array of location IDs
             */
            locationIds: string[];
        }
        export interface LookupTableNotePart {
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            type?: "lookup_table";
        }
        export interface MarkdownUiBlock {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "MARKDOWN";
            /**
             * example:
             * # This is a markdown block
             * 1. with **bold text**.
             */
            value: string;
        }
        export interface MarkdownUiBlockCreate {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "MARKDOWN";
            /**
             * example:
             * # This is a markdown block
             * 1. with **bold text**.
             */
            value: string;
        }
        export interface MarkdownUiBlockUpdate {
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type: "MARKDOWN";
            /**
             * example:
             * # This is a markdown block
             * 1. with **bold text**.
             */
            value: string;
        }
        export interface Measurement {
            /**
             * Can only be null if value is also null
             */
            units: string | null;
            /**
             * Can only be null if units is also null
             */
            value: number | null;
        }
        export interface Mixture {
            aliases?: string[];
            /**
             * Derived from the mixture's schema.
             */
            allowMeasuredIngredients?: boolean;
            /**
             * The positive numerical amount value of this mixture in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4).
             * example:
             * 123
             */
            amount?: string;
            /**
             * The canonical url of the Mixture in the API.
             * example:
             * https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * example:
             * 2017-04-18T05:54:56.247545+00:00
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * example:
             * FRM000
             */
            entityRegistryId?: string | null;
            /**
             * Mixtures can have up to one parent mixture field.
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * example:
             * lib_R8KcsjhW
             */
            folderId?: string | null;
            /**
             * example:
             * mxt_xCUXNVyG
             */
            id?: string;
            /**
             * List of ingredients on this mixture.
             */
            ingredients?: Ingredient[];
            /**
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * example:
             * FRM000
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * example:
             * src_NetYd96a
             */
            registryId?: string | null;
            /**
             * example:
             * {
             *   "id": "ts_EM122lfJ",
             *   "name": "Prep"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            };
            units?: /**
             * example:
             * L
             */
            MixtureMeasurementUnits;
            /**
             * example:
             * https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
             */
            webURL?: string;
        }
        export interface MixtureBulkUpdate {
            /**
             * Aliases to add to the mixture
             */
            aliases?: string[];
            /**
             * The positive numerical amount value of this mixture in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4).
             * example:
             * 123
             */
            amount?: string;
            /**
             * IDs of users to set as the mixture's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the mixture. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * example:
             * RCP001
             */
            entityRegistryId?: string;
            /**
             * Schema fields to set on the mixture. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             * If you are setting the parent mixture field here, you must also specify `ingredients`
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            /**
             * Desired final state for the ingredients on this mixture.
             * Each ingredient you specify will be matched with the existing ingredients on the mixture based on the component entity, and Benchling will create, update, or delete this mixture's ingredients so that the final state of this mixture's ingredients matches your request.
             * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
             *
             */
            ingredients?: IngredientWriteParams[];
            name?: string;
            schemaId?: string;
            units?: /**
             * example:
             * L
             */
            MixtureMeasurementUnits;
            /**
             * example:
             * ingr_3jshUi
             */
            id: string;
        }
        export interface MixtureCreate {
            /**
             * Aliases to add to the mixture
             */
            aliases?: string[];
            /**
             * The positive numerical amount value of this mixture in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4).
             * example:
             * 123
             */
            amount?: string;
            /**
             * IDs of users to set as the mixture's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the mixture. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             * example:
             * RCP001
             */
            entityRegistryId?: string;
            /**
             * Schema fields to set on the mixture. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             * If you are setting the parent mixture field here, you must also specify `ingredients`
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Desired final state for the ingredients on this mixture.
             * Each ingredient you specify will be matched with the existing ingredients on the mixture based on the component entity, and Benchling will create, update, or delete this mixture's ingredients so that the final state of this mixture's ingredients matches your request.
             * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
             *
             */
            ingredients: IngredientWriteParams[];
            name: string;
            schemaId: string;
            units: /**
             * example:
             * L
             */
            MixtureMeasurementUnits;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        /**
         * example:
         * L
         */
        export type MixtureMeasurementUnits = "nL" | "uL" | "mL" | "L" | "g" | "kg" | "Units";
        export interface MixturePrepTableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "mixture_prep_table";
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            /**
             * example:
             * ts_eGNPfqCX
             */
            mixtureSchemaId?: string;
        }
        export interface MixtureUpdate {
            /**
             * Aliases to add to the mixture
             */
            aliases?: string[];
            /**
             * The positive numerical amount value of this mixture in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4).
             * example:
             * 123
             */
            amount?: string;
            /**
             * IDs of users to set as the mixture's authors.
             */
            authorIds?: string[];
            /**
             * Custom fields to add to the mixture. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * example:
             * RCP001
             */
            entityRegistryId?: string;
            /**
             * Schema fields to set on the mixture. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             * If you are setting the parent mixture field here, you must also specify `ingredients`
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder that the entity is moved into
             */
            folderId?: string;
            /**
             * Desired final state for the ingredients on this mixture.
             * Each ingredient you specify will be matched with the existing ingredients on the mixture based on the component entity, and Benchling will create, update, or delete this mixture's ingredients so that the final state of this mixture's ingredients matches your request.
             * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
             *
             */
            ingredients?: IngredientWriteParams[];
            name?: string;
            schemaId?: string;
            units?: /**
             * example:
             * L
             */
            MixtureMeasurementUnits;
        }
        export interface MixtureWithEntityType {
            aliases?: string[];
            /**
             * Derived from the mixture's schema.
             */
            allowMeasuredIngredients?: boolean;
            /**
             * The positive numerical amount value of this mixture in string format (to preserve full precision). Pair with `units`. Supports scientific notation (1.23e4).
             * example:
             * 123
             */
            amount?: string;
            /**
             * The canonical url of the Mixture in the API.
             * example:
             * https://benchling.com/api/v2/mixtures/mxt_xCUXNVyG
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * example:
             * 2017-04-18T05:54:56.247545+00:00
             */
            createdAt?: string; // date-time
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * example:
             * FRM000
             */
            entityRegistryId?: string | null;
            /**
             * Mixtures can have up to one parent mixture field.
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * example:
             * lib_R8KcsjhW
             */
            folderId?: string | null;
            /**
             * example:
             * mxt_xCUXNVyG
             */
            id?: string;
            /**
             * List of ingredients on this mixture.
             */
            ingredients?: Ingredient[];
            /**
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * example:
             * FRM000
             */
            name?: string;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * example:
             * src_NetYd96a
             */
            registryId?: string | null;
            /**
             * example:
             * {
             *   "id": "ts_EM122lfJ",
             *   "name": "Prep"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            };
            units?: /**
             * example:
             * L
             */
            MixtureMeasurementUnits;
            /**
             * example:
             * https://benchling.com/benchling/f/R8KcsjhW-academic-registry/mxt-xCUXNVyG-sbn000/edit
             */
            webURL?: string;
            entityType?: "mixture";
        }
        /**
         * IDs of all mixtures that were archived or unarchived.
         *
         */
        export interface MixturesArchivalChange {
            mixtureIds?: string[];
        }
        /**
         * The request body for archiving mixtures.
         *
         */
        export interface MixturesArchive {
            mixtureIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface MixturesBulkCreateRequest {
            mixtures: [
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?,
                MixtureCreate?
            ];
        }
        export interface MixturesBulkUpdateRequest {
            mixtures?: MixtureBulkUpdate[];
        }
        export interface MixturesPaginatedList {
            mixtures?: Mixture[];
            nextToken?: string;
        }
        /**
         * The request body for unarchiving mixtures.
         *
         */
        export interface MixturesUnarchive {
            mixtureIds: string[];
        }
        export interface Molecule {
            /**
             * Array of aliases.
             */
            aliases?: string[];
            /**
             * The canonical url of the Molecule in the API.
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * The canonicalized chemical structure in SMILES format.
             * example:
             * Nc1nc(=O)n([H:1])cc1C1CC1
             */
            canonicalizedSmiles?: string;
            /**
             * DateTime the Molecule was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Molecule.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Molecule if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Molecule.
             */
            folderId?: string;
            /**
             * ID of the Molecule.
             * example:
             * mol_bhuDUw9D
             */
            id?: string;
            /**
             * DateTime the Molecule was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Molecule.
             */
            name?: string;
            /**
             * The original chemical structure supplied by the user in SMILES format. Null if the user did not originally supply SMILES.
             * example:
             * Nc1nc(=O)n([H:1])cc1C1CC1
             */
            originalSmiles?: string | null;
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Molecule is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Molecule.
             * example:
             * https://benchling.com/benchling/f/lib_R8KcsjhW-molecules/mol_xCUXNVyG-molecule1/edit
             */
            webURL?: string; // uri
        }
        export interface MoleculeBaseRequest {
            /**
             * Aliases to add to the Molecule.
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Molecule's authors.
             */
            authorIds?: string[];
            /**
             * Chemical structure of the Molecule.
             *
             */
            chemicalStructure?: {
                structureFormat?: "smiles" | "molfile";
                /**
                 * Chemical structure in SMILES or molfile format.
                 * example:
                 * Nc1nc(=O)n([H:1])cc1C1CC1
                 */
                value?: string;
            };
            /**
             * Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Molecule.
             *
             */
            folderId?: string;
            /**
             * Name of the Molecule.
             *
             */
            name?: string;
            /**
             * ID of the Molecule's schema.
             *
             */
            schemaId?: string;
        }
        export interface MoleculeBaseRequestForCreate {
            /**
             * Aliases to add to the Molecule.
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Molecule's authors.
             */
            authorIds?: string[];
            /**
             * Chemical structure of the Molecule.
             *
             */
            chemicalStructure: {
                structureFormat?: "smiles" | "molfile";
                /**
                 * Chemical structure in SMILES or molfile format.
                 * example:
                 * Nc1nc(=O)n([H:1])cc1C1CC1
                 */
                value?: string;
            };
            /**
             * Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Molecule.
             *
             */
            folderId?: string;
            /**
             * Name of the Molecule.
             *
             */
            name: string;
            /**
             * ID of the Molecule's schema.
             *
             */
            schemaId?: string;
        }
        export interface MoleculeBulkUpdate {
            id?: string;
            entityRegistryId?: string;
            /**
             * Aliases to add to the Molecule.
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Molecule's authors.
             */
            authorIds?: string[];
            /**
             * Chemical structure of the Molecule.
             *
             */
            chemicalStructure?: {
                structureFormat?: "smiles" | "molfile";
                /**
                 * Chemical structure in SMILES or molfile format.
                 * example:
                 * Nc1nc(=O)n([H:1])cc1C1CC1
                 */
                value?: string;
            };
            /**
             * Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Molecule.
             *
             */
            folderId?: string;
            /**
             * Name of the Molecule.
             *
             */
            name?: string;
            /**
             * ID of the Molecule's schema.
             *
             */
            schemaId?: string;
        }
        export interface MoleculeCreate {
            /**
             * Aliases to add to the Molecule.
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Molecule's authors.
             */
            authorIds?: string[];
            /**
             * Chemical structure of the Molecule.
             *
             */
            chemicalStructure: {
                structureFormat?: "smiles" | "molfile";
                /**
                 * Chemical structure in SMILES or molfile format.
                 * example:
                 * Nc1nc(=O)n([H:1])cc1C1CC1
                 */
                value?: string;
            };
            /**
             * Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the Molecule.
             *
             */
            name: string;
            /**
             * ID of the Molecule's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface MoleculeStructure {
            structureFormat?: "smiles" | "molfile";
            /**
             * Chemical structure in SMILES or molfile format.
             * example:
             * Nc1nc(=O)n([H:1])cc1C1CC1
             */
            value?: string;
        }
        export interface MoleculeUpdate {
            entityRegistryId?: string;
            /**
             * Aliases to add to the Molecule.
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Molecule's authors.
             */
            authorIds?: string[];
            /**
             * Chemical structure of the Molecule.
             *
             */
            chemicalStructure?: {
                structureFormat?: "smiles" | "molfile";
                /**
                 * Chemical structure in SMILES or molfile format.
                 * example:
                 * Nc1nc(=O)n([H:1])cc1C1CC1
                 */
                value?: string;
            };
            /**
             * Custom fields to add to the Molecule. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Molecule. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Molecule.
             *
             */
            folderId?: string;
            /**
             * Name of the Molecule.
             *
             */
            name?: string;
            /**
             * ID of the Molecule's schema.
             *
             */
            schemaId?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Molecules along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface MoleculesArchivalChange {
            batchIds?: string[];
            moleculeIds?: string[];
        }
        /**
         * The request body for archiving Molecules.
         *
         */
        export interface MoleculesArchive {
            moleculeIds: string[];
            /**
             * The reason for archiving the provided Molecules. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
        }
        export interface MoleculesBulkCreateRequest {
            molecules?: MoleculeCreate[];
        }
        export interface MoleculesBulkUpdateRequest {
            molecules?: MoleculeBulkUpdate[];
        }
        export interface MoleculesPaginatedList {
            nextToken?: string;
            molecules?: Molecule[];
        }
        /**
         * The request body for unarchiving Molecules.
         *
         */
        export interface MoleculesUnarchive {
            moleculeIds: string[];
        }
        export interface Monomer {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * A list of the capping group present at each location where the monomer can form a bond with other monomers
             * example:
             * [
             *   "OH",
             *   "OH"
             * ]
             */
            attachmentPoints?: string[];
            /**
             * The molecular weight of the monomer as calculated by RDKit based on the monomer chemical structure
             * example:
             * 120.422
             */
            calculatedMolecularWeight?: number;
            /**
             * The canonicalized chemical structure in SMILES format.
             * example:
             * O[P@@](=S)([OH:1])[OH:2]
             */
            canonicalSmiles?: string;
            /**
             * DateTime the monomer was created.
             */
            createdAt?: string; // date-time
            /**
             * Optional molecular weight value that the user can provide to override the calculated molecular weight
             * example:
             * 119.422
             */
            customMolecularWeight?: number | null;
            /**
             * ID of the monomer
             * example:
             * mon_bhuDUw9D
             */
            id?: string;
            /**
             * DateTime the monomer was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * The part of the nucleotide structure that the monomer fits into, i.e. backbone or branch
             */
            monomerType?: "BACKBONE" | "BRANCH";
            /**
             * Name of the monomer
             * example:
             * (Rp)-Phosphorothioate
             */
            name?: string;
            /**
             * Symbol for the natural equivalent of the monomer. Acceptable natural analog values include IUPAC bases, r, and p.
             * example:
             * T
             */
            naturalAnalog?: string;
            /**
             * The polymer type of the monomer. Currently only RNA monomers are supported.
             */
            polymerType?: "RNA";
            /**
             * User-defined identifier of the monomer, unique on the monomer type.
             * example:
             * Rsp
             */
            symbol?: string;
            /**
             * The hex color code of the monomer visual symbol
             * example:
             * #7051FC
             */
            visualColor?: string | null;
            /**
             * The shape of the monomer visual symbol.
             */
            visualSymbol?: "DIAMOND_FILLED" | "DIAMOND_HOLLOW" | "DIAMOND_DASHED" | "STAR_FILLED" | "STAR_HOLLOW" | "TRIANGLE_FILLED" | "TRIANGLE_HOLLOW" | "DYAD_FILLED" | "DYAD_HOLLOW" | "CLOVER_FILLED" | "CLOVER_HOLLOW" | "TRIAD_FILLED" | "TRIAD_HOLLOW" | "RECTANGLE_FILLED" | "RECTANGLE_HOLLOW" | "LETTERS_P" | "LETTERS_PS";
        }
        export interface MonomerBaseRequest {
            /**
             * The hex color code of the monomer visual symbol
             * example:
             * #7051FC
             */
            color?: string | null;
            /**
             * Optional molecular weight value that the user can provide to override the calculated molecular weight
             * example:
             * 119.422
             */
            customMolecularWeight?: number | null;
            /**
             * Name of the monomer
             * example:
             * (Rp)-Phosphorothioate
             */
            name?: string;
            /**
             * The chemical structure in SMILES format.
             * example:
             * O[P@@](=S)([OH:1])[OH:2]
             */
            smiles?: string;
            /**
             * User-defined identifier of the monomer, unique on the monomer type.
             * example:
             * Rsp
             */
            symbol?: string;
            /**
             * The shape of the monomer visual symbol.
             */
            visualSymbol?: "DIAMOND_FILLED" | "DIAMOND_HOLLOW" | "DIAMOND_DASHED" | "STAR_FILLED" | "STAR_HOLLOW" | "TRIANGLE_FILLED" | "TRIANGLE_HOLLOW" | "DYAD_FILLED" | "DYAD_HOLLOW" | "CLOVER_FILLED" | "CLOVER_HOLLOW" | "TRIAD_FILLED" | "TRIAD_HOLLOW" | "RECTANGLE_FILLED" | "RECTANGLE_HOLLOW" | "LETTERS_P" | "LETTERS_PS";
        }
        export interface MonomerCreate {
            /**
             * The hex color code of the monomer visual symbol
             * example:
             * #7051FC
             */
            color?: string | null;
            /**
             * Optional molecular weight value that the user can provide to override the calculated molecular weight
             * example:
             * 119.422
             */
            customMolecularWeight?: number | null;
            /**
             * Name of the monomer
             * example:
             * (Rp)-Phosphorothioate
             */
            name: string;
            /**
             * The chemical structure in SMILES format.
             * example:
             * O[P@@](=S)([OH:1])[OH:2]
             */
            smiles: string;
            /**
             * User-defined identifier of the monomer, unique on the monomer type.
             * example:
             * Rsp
             */
            symbol: string;
            /**
             * The shape of the monomer visual symbol.
             */
            visualSymbol?: "DIAMOND_FILLED" | "DIAMOND_HOLLOW" | "DIAMOND_DASHED" | "STAR_FILLED" | "STAR_HOLLOW" | "TRIANGLE_FILLED" | "TRIANGLE_HOLLOW" | "DYAD_FILLED" | "DYAD_HOLLOW" | "CLOVER_FILLED" | "CLOVER_HOLLOW" | "TRIAD_FILLED" | "TRIAD_HOLLOW" | "RECTANGLE_FILLED" | "RECTANGLE_HOLLOW" | "LETTERS_P" | "LETTERS_PS";
            /**
             * Symbol for the natural equivalent of the monomer. Acceptable natural analog values include IUPAC bases, r, and p.
             * example:
             * T
             */
            naturalAnalog: string;
        }
        /**
         * The polymer type of the monomer. Currently only RNA monomers are supported.
         */
        export type MonomerPolymerType = "RNA";
        /**
         * The part of the nucleotide structure that the monomer fits into, i.e. backbone or branch
         */
        export type MonomerType = "BACKBONE" | "BRANCH";
        export interface MonomerUpdate {
            /**
             * The hex color code of the monomer visual symbol
             * example:
             * #7051FC
             */
            color?: string | null;
            /**
             * Optional molecular weight value that the user can provide to override the calculated molecular weight
             * example:
             * 119.422
             */
            customMolecularWeight?: number | null;
            /**
             * Name of the monomer
             * example:
             * (Rp)-Phosphorothioate
             */
            name?: string;
            /**
             * The chemical structure in SMILES format.
             * example:
             * O[P@@](=S)([OH:1])[OH:2]
             */
            smiles?: string;
            /**
             * User-defined identifier of the monomer, unique on the monomer type.
             * example:
             * Rsp
             */
            symbol?: string;
            /**
             * The shape of the monomer visual symbol.
             */
            visualSymbol?: "DIAMOND_FILLED" | "DIAMOND_HOLLOW" | "DIAMOND_DASHED" | "STAR_FILLED" | "STAR_HOLLOW" | "TRIANGLE_FILLED" | "TRIANGLE_HOLLOW" | "DYAD_FILLED" | "DYAD_HOLLOW" | "CLOVER_FILLED" | "CLOVER_HOLLOW" | "TRIAD_FILLED" | "TRIAD_HOLLOW" | "RECTANGLE_FILLED" | "RECTANGLE_HOLLOW" | "LETTERS_P" | "LETTERS_PS";
        }
        /**
         * The shape of the monomer visual symbol.
         */
        export type MonomerVisualSymbol = "DIAMOND_FILLED" | "DIAMOND_HOLLOW" | "DIAMOND_DASHED" | "STAR_FILLED" | "STAR_HOLLOW" | "TRIANGLE_FILLED" | "TRIANGLE_HOLLOW" | "DYAD_FILLED" | "DYAD_HOLLOW" | "CLOVER_FILLED" | "CLOVER_HOLLOW" | "TRIAD_FILLED" | "TRIAD_HOLLOW" | "RECTANGLE_FILLED" | "RECTANGLE_HOLLOW" | "LETTERS_P" | "LETTERS_PS";
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type.
         *
         */
        export interface MonomersArchivalChange {
            batchIds?: string[];
            monomerIds?: string[];
        }
        /**
         * The request body for archiving Monomers.
         *
         */
        export interface MonomersArchive {
            monomerIds: [
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?
            ];
            /**
             * The reason for archiving the provided Monomers. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Made in error" | "Archived" | "Other";
        }
        export interface MonomersPaginatedList {
            nextToken?: string;
            monomers?: Monomer[];
        }
        /**
         * The request body for unarchiving Monomers.
         *
         */
        export interface MonomersUnarchive {
            monomerIds: [
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?
            ];
        }
        export interface MultipleContainersTransfer {
            /**
             * IDs of users or teams to be set as restricted sample parties for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            restrictedSamplePartyIds?: string[];
            /**
             * Restriction status of the destination container, either RESTRICTED or UNRESTRICTED. If not specified, the restriction status of the destination container will be the more restrictive of the source container, if present, and destination container restriction statuses. This only applies to stand-alone containers (Plate wells are always set to NOT_APPLICABLE).
             *
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * IDs of users or teams to be set as sample owners for the destination container. If not specified, restricted sample parties from the source container, if present, will be added to those of the destination container. This only applies to stand-alone containers.
             *
             */
            sampleOwnerIds?: string[];
            /**
             * ID of the batch that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceBatchId?: string;
            /**
             * ID of the container that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceContainerId?: string;
            /**
             * ID of the entity that will be transferred in. Must specify one of sourceEntityId, sourceBatchId, or sourceContainerId.
             *
             */
            sourceEntityId?: string;
            /**
             * This represents the quantity of the source to be transferred into the destination container. Supports mass, volume, and other quantities. Required in place of transferVolume.
             *
             */
            transferQuantity?: {
                /**
                 * example:
                 * mL
                 */
                units?: "L" | "mL" | "uL" | "nL" | "pL" | "gal (US)" | "qt (US)" | "pt (US)" | "kg" | "g" | "mg" | "ug" | "ng" | "pg" | "lb" | "oz" | "mol" | "mmol" | "umol" | "nmol" | "pmol" | "cells" | "(x10^3) cells" | "(x10^4) cells" | "(x10^5) cells" | "(x10^6) cells" | "(x10^7) cells" | "(x10^8) cells" | "(x10^9) cells" | "items" | "units" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * Deprecated - use transferQuantity instead.
             *
             */
            transferVolume?: {
                /**
                 * example:
                 * mL
                 */
                units?: "pL" | "nL" | "uL" | "mL" | "L" | null;
                /**
                 * example:
                 * 10
                 */
                value?: number | null;
            };
            /**
             * ID of container that will be transferred into.
             */
            destinationContainerId: string;
            finalQuantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            finalVolume?: /**
             * Desired volume for a container, well, or transfer. "volume" type keys are deprecated in API requests; use the more permissive "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForInput;
            /**
             * Concentration at which to transfer entities or batches. Not applicable for container-to-container transfers (the concentration of the source container’s contents will be used).
             *
             */
            sourceConcentration?: {
                [key: string]: any;
            };
        }
        export interface MultipleContainersTransfersList {
            transfers: [
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?,
                MultipleContainersTransfer?
            ];
        }
        /**
         * Specifies the behavior for automatically generated names when registering an entity.
         * - NEW_IDS: Generate new registry IDs
         * - IDS_FROM_NAMES: Generate registry IDs based on entity names
         * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
         * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
         * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
         * - KEEP_NAMES: Keep existing entity names as registry IDs
         * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
         *
         */
        export type NamingStrategy = "NEW_IDS" | "IDS_FROM_NAMES" | "DELETE_NAMES" | "SET_FROM_NAME_PARTS" | "REPLACE_NAMES_FROM_PARTS" | "KEEP_NAMES" | "REPLACE_ID_AND_NAME_FROM_PARTS";
        export interface NotFoundError {
            error?: {
                message?: string;
                type?: "invalid_request_error";
                userMessage?: string;
                invalidId?: string;
            };
        }
        export interface NucleotideAlignment {
            /**
             * The canonical url of the Alignment in the API.
             * example:
             * https://benchling.com/api/v2/alignments/seqanl_6ZVdX98t
             */
            apiURL?: string; // uri
            /**
             * DateTime the Alignment was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * seqanl_6ZVdX98t
             */
            id?: string;
            /**
             * DateTime the Alignment was last modified
             */
            modifiedAt?: string; // date-time
            name?: string;
            /**
             * The ID of the template or consensus Sequence associated with the Alignment
             * example:
             * seq_MYmsnS1u
             */
            referenceSequenceId?: string;
            /**
             * The Benchling web UI url to view the Alignment
             */
            webURL?: string; // uri
            alignedSequences?: AlignedNucleotideSequence[];
        }
        export interface NucleotideAlignmentBase {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | NucleotideAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
        }
        export interface NucleotideAlignmentFile {
            data?: string; // byte
            name?: string;
        }
        export interface NucleotideAlignmentSummary {
            /**
             * The canonical url of the Alignment in the API.
             * example:
             * https://benchling.com/api/v2/alignments/seqanl_6ZVdX98t
             */
            apiURL?: string; // uri
            /**
             * DateTime the Alignment was created
             */
            createdAt?: string; // date-time
            /**
             * example:
             * seqanl_6ZVdX98t
             */
            id?: string;
            /**
             * DateTime the Alignment was last modified
             */
            modifiedAt?: string; // date-time
            name?: string;
            /**
             * The ID of the template or consensus Sequence associated with the Alignment
             * example:
             * seq_MYmsnS1u
             */
            referenceSequenceId?: string;
            /**
             * The Benchling web UI url to view the Alignment
             */
            webURL?: string; // uri
        }
        export interface NucleotideAlignmentsPaginatedList {
            nextToken?: string;
            alignments?: NucleotideAlignmentSummary[];
        }
        export interface NucleotideConsensusAlignmentCreate {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | NucleotideAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
            newSequence?: {
                /**
                 * example:
                 * lib_qQFY3WQH
                 */
                folderId?: string;
            };
            sequenceId?: string;
        }
        export interface NucleotideSequencePart {
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * example:
             * seq_VfVOART1
             */
            sequenceId?: string;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
        }
        export interface NucleotideTemplateAlignmentCreate {
            algorithm: "mafft" | "clustalo";
            files: ({
                /**
                 * example:
                 * seq_3cxbVcCf
                 */
                sequenceId?: string;
            } | NucleotideAlignmentFile)[];
            /**
             * example:
             * my new alignment
             */
            name?: string;
            /**
             * example:
             * seq_rXqq0IHU
             */
            templateSequenceId: string;
        }
        export interface OAuthBadRequestError {
            error?: {
                message?: string;
                type?: "invalid_request" | "invalid_grant" | "unauthorized_client" | "unsupported_grant_type";
                userMessage?: string;
            };
        }
        export interface OAuthUnauthorizedError {
            error?: {
                message?: string;
                type?: "invalid_client";
                userMessage?: string;
            };
        }
        export interface Oligo {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * The canonical url of the Oligo in the API.
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Base pairs of the Oligo.
             * example:
             * ACTTTTT
             */
            bases?: string;
            /**
             * DateTime the Oligo was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Oligo.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Oligo if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Oligo.
             */
            folderId?: string | null;
            /**
             * ID of the Oligo.
             * example:
             * seq_bhuDUw9D
             */
            id?: string;
            /**
             * Number of bases in the Oligo.
             */
            length?: number;
            /**
             * DateTime the Oligo was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Oligo.
             */
            name?: string;
            /**
             * Nucleotide type of the Oligo.
             */
            nucleotideType?: "DNA" | "RNA";
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Oligo is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Oligo.
             * example:
             * https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
             */
            webURL?: string; // uri
        }
        export interface OligoBaseRequest {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
        }
        export interface OligoBaseRequestForCreate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
        }
        export interface OligoCreate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface OligoUpdate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Oligos along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface OligosArchivalChange {
            batchIds?: string[];
            oligoIds?: string[];
        }
        /**
         * The request body for archiving Oligos.
         *
         */
        export interface OligosArchive {
            oligoIds: string[];
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
        }
        export interface OligosBulkCreateRequest {
            oligos?: [
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?,
                OligoCreate?
            ];
        }
        export interface OligosBulkGet {
            oligos?: (DnaOligo | RnaOligo)[];
        }
        export interface OligosPaginatedList {
            nextToken?: string;
            oligos?: Oligo[];
        }
        /**
         * The request body for unarchiving Oligos.
         *
         */
        export interface OligosUnarchive {
            oligoIds: string[];
        }
        export interface Organization {
            handle?: string;
            id?: string;
            name?: string;
        }
        export interface OrganizationSummary {
            handle?: string;
            id?: string;
            name?: string;
        }
        export interface OrganizationsPaginatedList {
            nextToken?: string;
            organizations?: Organization[];
        }
        export interface Pagination {
            nextToken?: string;
        }
        export interface PartySummary {
            handle?: string;
            id?: string;
            name?: string;
        }
        export interface Plate {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Barcode of the plate
             */
            barcode?: string | null;
            /**
             * DateTime the container was created
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            fields?: Fields;
            /**
             * ID of the plate
             */
            id?: string;
            /**
             * DateTime the plate was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the plate, defaults to barcode if name is not provided.
             */
            name?: string;
            /**
             * ID of containing parent inventory (e.g. loc_k2lNspzS).
             */
            parentStorageId?: string | null;
            /**
             * ID of the project if set
             */
            projectId?: string | null;
            /**
             * SchemaProperty
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
            type?: "matrix_plate" | "well_plate";
            webURL?: string;
            /**
             * Well contents of the plate, keyed by position string (eg. "A1").
             */
            wells?: {
                [name: string]: WellOrInaccessibleResource;
            };
        }
        export interface PlateCreate {
            barcode?: string;
            containerSchemaId?: string;
            fields?: Fields;
            name?: string;
            parentStorageId?: string;
            projectId?: string;
            schemaId: string;
            wells?: {
                [name: string]: {
                    barcode?: string;
                };
            };
        }
        export interface PlateCreationTableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "plate_creation_table";
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            /**
             * example:
             * pltsch_LRIuH0yJ
             */
            plateSchemaId?: string;
        }
        export interface PlateSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "plate";
            prefix?: string;
            registryId?: string;
            containerSchema?: {
                id?: string;
                name?: string;
            } | null;
            height?: number;
            plateType?: string;
            width?: number;
        }
        export interface PlateSchemasList {
            plateSchemas?: PlateSchema[];
        }
        export interface PlateSchemasPaginatedList {
            plateSchemas?: PlateSchema[];
            nextToken?: string;
        }
        export interface PlateUpdate {
            fields?: Fields;
            name?: string;
            parentStorageId?: string;
            projectId?: string;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of plates along with any IDs of containers that were archived / unarchived.
         *
         */
        export interface PlatesArchivalChange {
            containerIds?: string[];
            plateIds?: string[];
        }
        export interface PlatesArchive {
            /**
             * Array of plate IDs
             */
            plateIds: string[];
            /**
             * Reason that plates are being archived.
             *
             */
            reason: "Made in error" | "Retired" | "Expended" | "Shipped" | "Contaminated" | "Expired" | "Missing" | "Other";
            /**
             * Remove barcodes. Removing barcodes from archived inventory that contain items will also remove barcodes from the contained items.
             *
             */
            shouldRemoveBarcodes: boolean;
        }
        export interface PlatesBulkGet {
            plates?: Plate[];
        }
        export interface PlatesPaginatedList {
            nextToken?: string;
            plates?: Plate[];
        }
        export interface PlatesUnarchive {
            /**
             * Array of plate IDs
             */
            plateIds: string[];
        }
        export interface Primer {
            bases?: string;
            bindPosition?: number;
            color?: string;
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            name?: string;
            oligoId?: string;
            overhangLength?: number;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * 1
             */
            strand?: number;
        }
        export interface PrintLabels {
            /**
             * List of IDs of containers that will have labels printed (one label will be printed per container).
             *
             */
            containerIds: string[];
            /**
             * ID of label template to use (same template will be used for all labels printed).
             *
             * example:
             * lbltmp_lCpY5Qvh
             */
            labelTemplateId: string;
            /**
             * ID of printer to use (same printer will be used for all labels printed).
             *
             * example:
             * print_YJQkilOJ
             */
            printerId: string;
        }
        export interface Printer {
            /**
             * Web address of the printer (either IP address or URL).
             */
            address?: string;
            /**
             * Short description of the printer.
             */
            description?: string | null;
            /**
             * ID of the printer.
             */
            id?: string;
            /**
             * Name of the printer.
             */
            name?: string;
            /**
             * Port to reach the printer at.
             */
            port?: number | null;
            /**
             * ID of the registry associated with this printer.
             */
            registryId?: string;
        }
        export interface PrintersList {
            labelPrinters?: Printer[];
        }
        export interface Project {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            id?: string;
            name?: string;
            owner?: Organization | /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of projects along with any IDs of project contents that were unarchived.
         *
         */
        export interface ProjectsArchivalChange {
            aaSequenceIds?: string[];
            customEntityIds?: string[];
            dnaSequenceIds?: string[];
            entryIds?: string[];
            folderIds?: string[];
            mixtureIds?: string[];
            oligoIds?: string[];
            projectIds?: string[];
            protocolIds?: string[];
        }
        export interface ProjectsArchive {
            /**
             * A list of project IDs to archive.
             */
            projectIds: string[];
            /**
             * The reason for archiving the provided projects. Accepted reasons may differ based on tenant configuration.
             *
             */
            reason: "Made in error" | "Retired" | "Other";
        }
        export interface ProjectsPaginatedList {
            nextToken?: string;
            projects?: Project[];
        }
        export interface ProjectsUnarchive {
            /**
             * A list of project IDs to unarchive.
             */
            projectIds: string[];
        }
        export interface RegisterEntities {
            /**
             * Array of entity IDs
             */
            entityIds: [
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?,
                string?
            ];
            namingStrategy: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
        }
        export interface RegisteredEntitiesList {
            entities?: (DnaSequenceWithEntityType | CustomEntityWithEntityType | AaSequenceWithEntityType | MixtureWithEntityType | DnaOligoWithEntityType | RnaOligoWithEntityType)[];
        }
        export interface RegistrationOrigin {
            originEntryId?: string | null;
            registeredAt?: string; // date-time
        }
        export interface RegistrationTableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "registration_table";
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            /**
             * example:
             * ts_hMbJPSA8
             */
            entitySchemaId?: string;
        }
        export interface RegistriesList {
            registries?: Registry[];
        }
        export interface Registry {
            id?: string;
            /**
             * DateTime the Registry was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            name?: string;
            owner?: Organization;
        }
        export interface RegistrySchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
            prefix?: string;
            registryId?: string;
        }
        /**
         * A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service.
         */
        export interface Request {
            /**
             * The canonical url of the Request in the API.
             * example:
             * https://benchling.com/api/v2/requests/req_dnn2JtWq
             */
            apiURL?: string; // uri
            /**
             * Array of assignees
             */
            assignees?: (RequestUserAssignee | RequestTeamAssignee)[];
            /**
             * Date and time the request was created
             * example:
             * 2017-04-23T01:30:50.970Z
             */
            createdAt?: string; // isoformat
            /**
             * UserSummary of the user who created the request
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            /**
             * User-friendly ID of the request
             * example:
             * VP1
             */
            displayId?: string;
            fields?: Fields;
            /**
             * Unique ID for the request
             * example:
             * req_JekfeyVS
             */
            id?: string;
            /**
             * The ID of the project to which the request belongs.
             * example:
             * src_29pt8Ida
             */
            projectId?: string;
            requestStatus?: RequestStatus;
            /**
             * UserSummary of the user making the request
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            requestor?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            sampleGroups?: RequestSampleGroup[];
            /**
             * Date the request is scheduled to be executed on, in YYYY-MM-DD format.
             * example:
             * 2019-09-12T00:00:00.000Z
             */
            scheduledOn?: string | null; // date
            /**
             * SchemaProperty
             * SchemaSummary for the request
             * example:
             * {
             *   "id": "assaysch_3IF58QOf",
             *   "name": "Vector Production"
             * }
             */
            schema?: {
                id?: string;
                name?: string;
            };
            tasks?: /**
             * A request task.
             *
             */
            RequestTask[];
            /**
             * URL of the request
             * example:
             * https://benchling.com/requests/req_JekfeyVS
             */
            webURL?: string; // uri
        }
        /**
         * A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service.
         */
        export interface RequestBase {
        }
        /**
         * A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service.
         */
        export interface RequestCreate {
            /**
             * Array of assignees
             */
            assignees?: (RequestWriteUserAssignee | RequestWriteTeamAssignee)[];
            /**
             * The request's fields
             */
            fields: {
                [name: string]: Field;
            };
            /**
             * The ID of the project to which the request belongs.
             * example:
             * src_29pt8Ida
             */
            projectId: string;
            /**
             * ID of the user making the request. If unspecified, the requestor is the request creator.
             *
             * example:
             * ent_a0SApq3z
             */
            requestorId?: string | null;
            sampleGroups: RequestSampleGroupCreate[];
            /**
             * Date the request is scheduled to be executed on, in YYYY-MM-DD format.
             * example:
             * 2019-09-12T00:00:00.000Z
             */
            scheduledOn?: string; // date
            /**
             * ID of the request's schema.
             * example:
             * assaysch_3IF58QOf
             */
            schemaId: string;
        }
        export interface RequestCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.request.created";
            request?: /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Request;
        }
        /**
         * A request fulfillment represents work that is done which changes the status of a request or a sample group within that request.
         * Fulfillments are created when state changes between IN_PROGRESS, COMPLETED, or FAILED statuses. Fulfillments do not capture a PENDING state because all requests or request sample groups are considered PENDING until the first corresponding fulfillment is created.
         *
         */
        export interface RequestFulfillment {
            /**
             * Date and time the fulfillment was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the entry this fulfillment was executed in, if any
             * example:
             * etr_IKwdYx31
             */
            entryId?: string;
            /**
             * ID of the request fulfillment
             * example:
             * reqffm_8Hm71Usw
             */
            id?: string;
            /**
             * DateTime the Request Fulfillment was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * ID of the request this fulfillment fulfills
             * example:
             * req_pu9caSiv
             */
            requestId?: string;
            /**
             * The request sample group this fulfillment was executed upon, if any.
             */
            sampleGroup?: {
                id?: string;
                samples?: {
                    [key: string]: any;
                };
            } | null;
            status?: /* Status of a sample group */ SampleGroupStatus;
        }
        /**
         * An object containing an array of RequestFulfillments
         */
        export interface RequestFulfillmentsPaginatedList {
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
            requestFulfillments?: /**
             * A request fulfillment represents work that is done which changes the status of a request or a sample group within that request.
             * Fulfillments are created when state changes between IN_PROGRESS, COMPLETED, or FAILED statuses. Fulfillments do not capture a PENDING state because all requests or request sample groups are considered PENDING until the first corresponding fulfillment is created.
             *
             */
            RequestFulfillment[];
        }
        export interface RequestResponse {
            results?: AssayResult[];
            /**
             * Array of samples produced by the request.
             */
            samples?: {
                /**
                 * The sample, if it is a batch resource. Null otherwise.
                 */
                batch?: null & (/* The sample, if it is a batch resource. Null otherwise. */ Batch | InaccessibleResource);
                /**
                 * The sample, if it is an entity resource. Null otherwise.
                 */
                entity?: ({
                    [key: string]: any;
                } | null) & (/* The sample, if it is an entity resource. Null otherwise. */ Entity | InaccessibleResource);
                /**
                 * The status of the sample, based on the status of the stage run that generated it.
                 */
                status?: "COMPLETED" | "DISCARDED";
            }[];
        }
        export type RequestResponseSamplesItemBatch = Batch | InaccessibleResource;
        export type RequestResponseSamplesItemEntity = Entity | InaccessibleResource;
        export interface RequestSampleGroup {
            /**
             * example:
             * sgrp_YJKtcWV
             */
            id?: string;
            samples?: /**
             * The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
             *
             * example:
             * {
             *   "Batch Example": {
             *     "batchId": "bat_XK0UnLyk"
             *   },
             *   "Entity Example": {
             *     "containerId": "ctn_urUAEBq",
             *     "entityId": "seq_nDtxYEs"
             *   }
             * }
             */
            RequestSampleGroupSamples;
        }
        export interface RequestSampleGroupCreate {
            samples: /**
             * The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
             *
             * example:
             * {
             *   "Batch Example": {
             *     "batchId": "bat_XK0UnLyk"
             *   },
             *   "Entity Example": {
             *     "containerId": "ctn_urUAEBq",
             *     "entityId": "seq_nDtxYEs"
             *   }
             * }
             */
            RequestSampleGroupSamples;
        }
        /**
         * The key for each RequestSample should match one of the samplesSchema[n].name property in the request schema json.
         *
         * example:
         * {
         *   "Batch Example": {
         *     "batchId": "bat_XK0UnLyk"
         *   },
         *   "Entity Example": {
         *     "containerId": "ctn_urUAEBq",
         *     "entityId": "seq_nDtxYEs"
         *   }
         * }
         */
        export interface RequestSampleGroupSamples {
            [name: string]: RequestSampleWithEntity | RequestSampleWithBatch;
        }
        export interface RequestSampleWithBatch {
            /**
             * example:
             * bat_XK0UnLyk
             */
            batchId: string;
            /**
             * example:
             * ctn_urUAEBq
             */
            containerId?: string;
        }
        export interface RequestSampleWithEntity {
            /**
             * example:
             * ctn_urUAEBq
             */
            containerId?: string;
            /**
             * example:
             * seq_nDtxYEs
             */
            entityId: string;
        }
        export interface RequestSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "request";
            /**
             * DateTime the Request Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * The organization that owns the schema.
             *
             */
            organization?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            systemName?: string;
        }
        export interface RequestSchemasPaginatedList {
            nextToken?: string;
            requestSchemas?: RequestSchema[];
        }
        export type RequestStatus = "REQUESTED" | "SCHEDULED" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED";
        /**
         * A request task.
         *
         */
        export interface RequestTask {
            /**
             * Schema fields to set on the request task.
             * Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * IDs of all request sample groups now associated with this task.
             */
            sampleGroupIds?: string[];
            /**
             * ID of the request task
             * example:
             * reqtsk_PFHQ8rmb
             */
            id: string;
            /**
             * SchemaProperty
             */
            schema?: {
                id?: string;
                name?: string;
            } | null;
        }
        /**
         * A request task.
         *
         */
        export interface RequestTaskBase {
            /**
             * Schema fields to set on the request task.
             * Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * IDs of all request sample groups now associated with this task.
             */
            sampleGroupIds?: string[];
            /**
             * ID of the request task
             * example:
             * reqtsk_PFHQ8rmb
             */
            id: string;
        }
        /**
         * Shared fields for request tasks and related endpoints.
         *
         */
        export interface RequestTaskBaseFields {
            /**
             * Schema fields to set on the request task.
             * Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * IDs of all request sample groups now associated with this task.
             */
            sampleGroupIds?: string[];
        }
        export interface RequestTaskSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: "request_task";
            /**
             * DateTime the Request Task Schema was last modified
             * example:
             * 2017-04-18T05:55:48.685345+00:00
             */
            modifiedAt?: string; // date-time
            /**
             * The organization that owns the schema.
             *
             */
            organization?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            systemName?: string;
        }
        export interface RequestTaskSchemasPaginatedList {
            nextToken?: string;
            requestTaskSchemas?: RequestTaskSchema[];
        }
        /**
         * Shared fields for request tasks and related endpoints.
         *
         */
        export interface RequestTasksBulkCreate {
            /**
             * Schema fields to set on the request task.
             * Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * IDs of all request sample groups now associated with this task.
             */
            sampleGroupIds?: string[];
            /**
             * The schema id of the task to create
             * example:
             * reqtsksch_XHu79QRw
             */
            schemaId: string;
        }
        export interface RequestTasksBulkCreateRequest {
            /**
             * The tasks to create
             */
            tasks: [
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?,
                /**
                 * Shared fields for request tasks and related endpoints.
                 *
                 */
                RequestTasksBulkCreate?
            ];
        }
        export interface RequestTasksBulkCreateResponse {
            /**
             * The created tasks
             */
            tasks?: /**
             * A request task.
             *
             */
            RequestTask[];
        }
        /**
         * A request body for bulk updating request tasks.
         *
         */
        export interface RequestTasksBulkUpdateRequest {
            /**
             * The tasks to update
             */
            tasks: /**
             * A request task.
             *
             */
            RequestTaskBase[];
        }
        export interface RequestTasksBulkUpdateResponse {
            /**
             * The tasks to update
             */
            tasks?: /**
             * A request task.
             *
             */
            RequestTask[];
        }
        export interface RequestTeamAssignee {
            team?: /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary;
        }
        /**
         * A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service.
         */
        export interface RequestUpdate {
            /**
             * Array of assignees
             */
            assignees?: (RequestWriteUserAssignee | RequestWriteTeamAssignee)[];
            /**
             * The request's fields
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * The ID of the project to which the request belongs.
             * example:
             * src_29pt8Ida
             */
            projectId?: string;
            /**
             * ID of the user making the request. If unspecified, the requestor is the request creator.
             *
             * example:
             * ent_a0SApq3z
             */
            requestorId?: string | null;
            sampleGroups?: RequestSampleGroupCreate[];
            /**
             * Date the request is scheduled to be executed on, in YYYY-MM-DD format.
             * example:
             * 2019-09-12T00:00:00.000Z
             */
            scheduledOn?: string; // date
            requestStatus?: RequestStatus;
        }
        export interface RequestUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            eventType?: "v2.request.updated.fields";
            request?: /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Request;
        }
        export interface RequestUserAssignee {
            user?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
        }
        /**
         * A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service.
         */
        export interface RequestWriteBase {
            /**
             * Array of assignees
             */
            assignees?: (RequestWriteUserAssignee | RequestWriteTeamAssignee)[];
            /**
             * The request's fields
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * The ID of the project to which the request belongs.
             * example:
             * src_29pt8Ida
             */
            projectId?: string;
            /**
             * ID of the user making the request. If unspecified, the requestor is the request creator.
             *
             * example:
             * ent_a0SApq3z
             */
            requestorId?: string | null;
            sampleGroups?: RequestSampleGroupCreate[];
            /**
             * Date the request is scheduled to be executed on, in YYYY-MM-DD format.
             * example:
             * 2019-09-12T00:00:00.000Z
             */
            scheduledOn?: string; // date
        }
        export interface RequestWriteTeamAssignee {
            /**
             * example:
             * team_5cjIguqc
             */
            teamId: string;
        }
        export interface RequestWriteUserAssignee {
            /**
             * example:
             * ent_a0SApq3z
             */
            userId: string;
        }
        export interface RequestsBulkGet {
            requests?: /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Request[];
        }
        export interface RequestsPaginatedList {
            requests?: /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Request[];
            nextToken?: string;
        }
        export interface ResultsTableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "results_table";
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
            /**
             * example:
             * assaysch_msh1Ly6g
             */
            assayResultSchemaId?: string;
        }
        export interface RnaAnnotation {
            /**
             * Hex color code used when displaying this feature in the UI.
             * example:
             * #F58A5E
             */
            color?: string;
            customFields?: [
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?
            ];
            name?: string;
            /**
             * example:
             * Cong et al Science. 2013 Jan 3.
             */
            notes?: string;
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * 1
             */
            strand?: number;
            type?: string;
        }
        export interface RnaOligo {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * The canonical url of the Oligo in the API.
             * example:
             * https://benchling.com/api/v2/rna-oligos/seq_bhuDUw9D
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Base pairs of the Oligo.
             * example:
             * ACUUUUU
             */
            bases?: string;
            /**
             * DateTime the Oligo was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Oligo.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Oligo if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Oligo.
             */
            folderId?: string | null;
            /**
             * ID of the Oligo.
             * example:
             * seq_bhuDUw9D
             */
            id?: string;
            /**
             * Number of bases in the Oligo.
             */
            length?: number;
            /**
             * DateTime the Oligo was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Oligo.
             */
            name?: string;
            /**
             * Nucleotide type of the Oligo.
             * example:
             * RNA
             */
            nucleotideType?: "DNA" | "RNA";
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Oligo is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Oligo.
             * example:
             * https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
             */
            webURL?: string; // uri
            /**
             * Annotations on the Oligo.
             */
            annotations?: RnaAnnotation[];
            /**
             * Representation of the oligo in the custom notation specified in the request. Null if no notation was specified.
             */
            customNotation?: string | null;
            /**
             * Name of the custom notation specified in the request. Null if no notation was specified.
             */
            customNotationName?: string | null;
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r(C)[Ssp].r(U)p.r(U)p.r(U)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
        }
        export interface RnaOligoBulkUpdate {
            id?: string;
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: RnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaOligoCreate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: RnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaOligoUpdate {
            /**
             * Aliases to add to the Oligo
             */
            aliases?: string[];
            /**
             * IDs of users to set as the Oligo's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs of the oligo.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the Oligo. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the Oligo. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the Oligo.
             *
             */
            folderId?: string;
            /**
             * Name of the Oligo.
             *
             */
            name?: string;
            /**
             * ID of the oligo's schema.
             *
             */
            schemaId?: string;
            /**
             * Annotations on the Oligo.
             */
            annotations?: RnaAnnotation[];
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaOligoWithEntityType {
            /**
             * Array of aliases
             */
            aliases?: string[];
            /**
             * The canonical url of the Oligo in the API.
             * example:
             * https://benchling.com/api/v2/rna-oligos/seq_bhuDUw9D
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Base pairs of the Oligo.
             * example:
             * ACUUUUU
             */
            bases?: string;
            /**
             * DateTime the Oligo was created.
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * Custom fields set on the Oligo.
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Registry ID of the Oligo if registered.
             */
            entityRegistryId?: string | null;
            fields?: Fields;
            /**
             * ID of the folder that contains the Oligo.
             */
            folderId?: string | null;
            /**
             * ID of the Oligo.
             * example:
             * seq_bhuDUw9D
             */
            id?: string;
            /**
             * Number of bases in the Oligo.
             */
            length?: number;
            /**
             * DateTime the Oligo was last modified.
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the Oligo.
             */
            name?: string;
            /**
             * Nucleotide type of the Oligo.
             * example:
             * RNA
             */
            nucleotideType?: "DNA" | "RNA";
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            /**
             * Registry the Oligo is registered in.
             */
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * URL of the Oligo.
             * example:
             * https://benchling.com/benchling/f/lib_hBHqKbzE-oligos/seq_bhuDUw9D-test-oligo-abc/edit
             */
            webURL?: string; // uri
            /**
             * Annotations on the Oligo.
             */
            annotations?: RnaAnnotation[];
            /**
             * Representation of the oligo in the custom notation specified in the request. Null if no notation was specified.
             */
            customNotation?: string | null;
            /**
             * Name of the custom notation specified in the request. Null if no notation was specified.
             */
            customNotationName?: string | null;
            /**
             * Representation of the oligo in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r(C)[Ssp].r(U)p.r(U)p.r(U)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            entityType?: "rna_oligo";
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of RNA Oligos along with any IDs of batches that were archived / unarchived.
         *
         */
        export interface RnaOligosArchivalChange {
            batchIds?: string[];
            rnaOligoIds?: string[];
        }
        /**
         * The request body for archiving RNA Oligos.
         *
         */
        export interface RnaOligosArchive {
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
            rnaOligoIds: string[];
        }
        export interface RnaOligosBulkCreateRequest {
            rnaOligos?: [
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?,
                RnaOligoCreate?
            ];
        }
        export interface RnaOligosBulkUpdateRequest {
            rnaOligos?: RnaOligoBulkUpdate[];
        }
        export interface RnaOligosPaginatedList {
            nextToken?: string;
            rnaOligos?: RnaOligo[];
        }
        /**
         * The request body for unarchiving RNA Oligos.
         *
         */
        export interface RnaOligosUnarchive {
            rnaOligoIds: string[];
        }
        export interface RnaSequence {
            aliases?: string[];
            annotations?: RnaAnnotation[];
            /**
             * The canonical url of the RNA Sequence in the API.
             * example:
             * https://benchling.com/api/v2/rna-sequences/seq_asZya4lk
             */
            apiURL?: string; // uri
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            bases?: string;
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * Representation of the RNA Sequence in the custom notation specified in the request. Null if no notation was specified.
             */
            customNotation?: string | null;
            /**
             * Name of the custom notation specified in the request. Null if no notation was specified.
             */
            customNotationName?: string | null;
            entityRegistryId?: string | null;
            fields?: Fields;
            folderId?: string | null;
            /**
             * Representation of the RNA Sequence in HELM syntax, including any chemical modifications.
             * example:
             * RNA1{r(A)p.r(C)[Ssp].r(U)p.r(U)p.r(U)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string | null;
            id?: string;
            /**
             * example:
             * false
             */
            isCircular?: boolean;
            length?: number;
            modifiedAt?: string; // date-time
            name?: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            registrationOrigin?: {
                originEntryId?: string | null;
                registeredAt?: string; // date-time
            } | null;
            registryId?: string | null;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            translations?: Translation[];
            webURL?: string;
        }
        export interface RnaSequenceBaseRequest {
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the RNA sequence.
             *
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name?: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaSequenceBaseRequestForCreate {
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the RNA sequence.
             *
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaSequenceBulkCreate {
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface RnaSequenceBulkUpdate {
            id?: string;
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the RNA sequence.
             *
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name?: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
        }
        export interface RnaSequenceCreate {
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the entity. Can be left empty when registryId is present.
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
            /**
             * Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time.
             *
             */
            entityRegistryId?: string;
            namingStrategy?: /**
             * Specifies the behavior for automatically generated names when registering an entity.
             * - NEW_IDS: Generate new registry IDs
             * - IDS_FROM_NAMES: Generate registry IDs based on entity names
             * - DELETE_NAMES: Generate new registry IDs and replace name with registry ID
             * - SET_FROM_NAME_PARTS: Generate new registry IDs, rename according to name template, and keep old name as alias
             * - REPLACE_NAMES_FROM_PARTS: Generate new registry IDs, and replace name according to name template
             * - KEEP_NAMES: Keep existing entity names as registry IDs
             * - REPLACE_ID_AND_NAME_FROM_PARTS: Generate registry IDs and names according to name template
             *
             */
            NamingStrategy;
            /**
             * Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization
             * To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)
             *
             * Required in order for entities to be created directly in the registry.
             *
             */
            registryId?: string;
        }
        export interface RnaSequencePart {
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * example:
             * seq_VfVOART1
             */
            sequenceId?: string;
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * 1
             */
            strand?: number;
        }
        export interface RnaSequenceRequestRegistryFields {
            entityRegistryId?: string;
        }
        export interface RnaSequenceUpdate {
            /**
             * Aliases to add to the RNA sequence
             */
            aliases?: string[];
            /**
             * Annotations to create on the RNA sequence.
             *
             */
            annotations?: RnaAnnotation[];
            /**
             * IDs of users to set as the RNA sequence's authors.
             */
            authorIds?: string[];
            /**
             * Base pairs for the RNA sequence.
             *
             */
            bases?: string;
            /**
             * Custom fields to add to the RNA sequence. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            customFields?: {
                [name: string]: CustomField;
            };
            /**
             * Fields to set on the RNA sequence. Must correspond with the schema's field definitions. Every field should have its name as a key, mapping to an object with information about the value of the field.
             *
             */
            fields?: {
                [name: string]: Field;
            };
            /**
             * ID of the folder containing the RNA sequence.
             *
             */
            folderId?: string;
            /**
             * Representation of the RNA sequence in HELM syntax, including any chemical modifications
             * example:
             * RNA1{r(A)p.r([impr2G])p.r(G)[Ssp].r(A)p.r(U)p.r(U)p}$$$$V2.0
             */
            helm?: string;
            /**
             * Whether the RNA sequence is circular or linear. RNA sequences can only be linear
             *
             * example:
             * false
             */
            isCircular?: boolean;
            /**
             * Name of the RNA sequence.
             *
             */
            name?: string;
            parts?: RnaSequencePart[];
            primers?: Primer[];
            /**
             * ID of the RNA sequence's schema.
             *
             */
            schemaId?: string;
            /**
             * Translations to create on the RNA sequence. Translations are specified by either a combination of 'start' and 'end' fields, or a list of regions. Both cannot be provided.
             *
             */
            translations?: Translation[];
            /**
             * Representation of the sequence or oligo in the custom notation specified by customNotationId
             */
            customNotation?: string;
            /**
             * ID of the notation used to interpret the string provided in the customNotation field
             */
            customNotationId?: string;
            entityRegistryId?: string;
        }
        /**
         * IDs of all RNA Sequences that were archived or unarchived, grouped by resource type.
         *
         */
        export interface RnaSequencesArchivalChange {
            rnaSequenceIds?: string[];
        }
        /**
         * The request body for archiving RNA sequences.
         *
         */
        export interface RnaSequencesArchive {
            reason: /**
             * The reason for archiving the provided entities. Accepted reasons may differ based on tenant configuration.
             *
             */
            EntityArchiveReason;
            rnaSequenceIds: string[];
        }
        export interface RnaSequencesBulkCreateRequest {
            rnaSequences?: [
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?,
                RnaSequenceBulkCreate?
            ];
        }
        export interface RnaSequencesBulkGet {
            rnaSequences?: RnaSequence[];
        }
        export interface RnaSequencesBulkUpdateRequest {
            rnaSequences?: RnaSequenceBulkUpdate[];
        }
        export interface RnaSequencesPaginatedList {
            nextToken?: string;
            rnaSequences?: RnaSequence[];
        }
        /**
         * The request body for unarchiving RNA sequences.
         *
         */
        export interface RnaSequencesUnarchive {
            rnaSequenceIds: string[];
        }
        /**
         * Represents a sample group that is an input to a request. A sample group is a set of samples upon which work in the request should be done.
         */
        export interface SampleGroup {
            id?: string;
            samples?: {
                [key: string]: any;
            };
        }
        /**
         * Status of a sample group
         */
        export type SampleGroupStatus = "IN_PROGRESS" | "COMPLETED" | "FAILED";
        export interface SampleGroupStatusUpdate {
            /**
             * The string id of the sample group
             * example:
             * sgrp_2GPCXk6
             */
            sampleGroupId: string;
            status: /* Status of a sample group */ SampleGroupStatus;
        }
        /**
         * Specification to update status of sample groups on the request which were executed.
         */
        export interface SampleGroupsStatusUpdate {
            sampleGroups: SampleGroupStatusUpdate[];
        }
        export type SampleRestrictionStatus = "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
        export interface Schema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
        }
        export type SchemaDependencySubtypes = "aa_sequence" | "dna_sequence" | "custom_entity" | "mixture" | "molecule" | "dna_oligo" | "rna_oligo" | "rna_sequence";
        /**
         * example:
         * {
         *   "schemaField.Cell Count": ">= 10 AND <= 50",
         *   "schemaField.Experiment": "MyExperiment",
         *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
         * }
         */
        export interface SchemaFieldsQueryParam {
            [name: string]: any;
        }
        export interface SchemaLinkFieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
            schemaId?: string | null;
        }
        export interface SchemaSummary {
            id?: string;
            name?: string;
        }
        export interface SearchInputMultiValueUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT_MULTIVALUE";
        }
        export interface SearchInputMultiValueUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT_MULTIVALUE";
        }
        export interface SearchInputMultiValueUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT_MULTIVALUE";
        }
        export interface SearchInputUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT";
        }
        export interface SearchInputUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT";
        }
        export type SearchInputUiBlockItemType = "dna_sequence" | "dna_oligo" | "aa_sequence" | "custom_entity" | "mixture" | "box" | "container" | "location" | "plate";
        export interface SearchInputUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            itemType: SearchInputUiBlockItemType;
            schemaId: string | null;
            type: "SEARCH_INPUT";
        }
        export interface SectionUiBlock {
            children: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock)[];
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type?: "SECTION";
        }
        export interface SectionUiBlockCreate {
            children: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock)[];
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type?: "SECTION";
        }
        export interface SectionUiBlockUpdate {
            children: (ButtonUiBlock | ChipUiBlock | DropdownUiBlock | DropdownMultiValueUiBlock | MarkdownUiBlock | SearchInputUiBlock | SearchInputMultiValueUiBlock | SelectorInputUiBlock | SelectorInputMultiValueUiBlock | TextInputUiBlock)[];
            /**
             * example:
             * user_generated_id
             */
            id?: string;
            type?: "SECTION";
        }
        export interface SecureTextAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * secure_text
             */
            type?: "secure_text";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * <encryptedtext/>
             */
            value?: string | null;
        }
        export interface SelectorInputMultiValueUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            options: string[];
            type: "SELECTOR_INPUT_MULTIVALUE";
        }
        export interface SelectorInputMultiValueUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            options: string[];
            type: "SELECTOR_INPUT_MULTIVALUE";
        }
        export interface SelectorInputMultiValueUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
            options: string[];
            type: "SELECTOR_INPUT_MULTIVALUE";
        }
        export interface SelectorInputUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            options: string[];
            type: "SELECTOR_INPUT";
        }
        export interface SelectorInputUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            options: string[];
            type: "SELECTOR_INPUT";
        }
        export interface SelectorInputUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            options: string[];
            type: "SELECTOR_INPUT";
        }
        export interface SequenceFeatureBase {
            /**
             * Hex color code used when displaying this feature in the UI.
             * example:
             * #F58A5E
             */
            color?: string;
            customFields?: [
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?
            ];
            name?: string;
            /**
             * example:
             * Cong et al Science. 2013 Jan 3.
             */
            notes?: string;
        }
        /**
         * A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature.
         */
        export interface SequenceFeatureCustomField {
            /**
             * Name of the custom field
             */
            name?: string;
            /**
             * Value of the custom field
             */
            value?: string;
        }
        export interface SimpleFieldDefinition {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * example:
             * tsf_HXUnClU9
             */
            id?: string;
            isMulti?: boolean;
            isRequired?: boolean;
            /**
             * example:
             * Resistance Gene
             */
            name?: string;
            type?: FieldType;
        }
        /**
         * Simple note parts include the following types: - 'text': plain text - 'code': preformatted code block - 'list_bullet': one "line" of a bulleted list - 'list_number': one "line" of a numbered list
         *
         */
        export interface SimpleNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "text" | "code" | "list_bullet" | "list_number";
            /**
             * Array of links referenced in text via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
             *
             */
            links?: /**
             * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
             *
             */
            EntryLink[];
            /**
             * The textual contents of the note.
             */
            text?: string;
        }
        /**
         * A notebook entry used for execution of one or more stage runs in a legacy workflow.
         */
        export interface StageEntry {
            /**
             * The canonical url of the Stage Entry in the API.
             * example:
             * https://benchling.com/api/v2-alpha/stage-entries/stgentr_1HEcejZq
             */
            apiURL?: string; // uri
            /**
             * Array of UserSummary Resources of the authors of the stage entry. This defaults to the creator but can be manually changed.
             *
             */
            authors?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * DateTime the stage entry was created at
             */
            createdAt?: string; // date-time
            /**
             * UserSummary Resource of the user who created the stage entry
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            creator?: {
                handle?: string;
                id?: string;
                name?: string;
            };
            customFields?: /**
             * example:
             * {
             *   "Legacy ID": {
             *     "value": "STR100"
             *   }
             * }
             */
            CustomFields;
            /**
             * User-friendly ID of the stage entry
             */
            displayId?: string;
            fields?: Fields;
            /**
             * ID of the folder that contains the stage entry
             */
            folderId?: string;
            /**
             * ID of the stage entry
             */
            id?: string;
            /**
             * DateTime the stage entry was last modified
             */
            modifiedAt?: string;
            /**
             * Title of the stage entry
             */
            name?: string;
            /**
             * Review record if set
             */
            reviewRecord?: {
                [key: string]: any;
            } | null;
            /**
             * SchemaProperty
             * Entry schema if set
             */
            schema?: {
                /**
                 * ID of the entry schema
                 */
                id?: string;
                /**
                 * DateTime the Entry Schema was last modified
                 * example:
                 * 2017-04-18T05:55:48.685345+00:00
                 */
                modifiedAt?: string; // date-time
                /**
                 * Name of the entry schema
                 */
                name?: string;
            } | null;
            /**
             * URL of the stage entry
             */
            webURL?: string;
            /**
             * ID of the parent workflow
             * example:
             * wfw_7COQmok7
             */
            workflowId?: string;
            /**
             * ID of the associated workflow stage
             * example:
             * wfwstg_EZuryAiW
             */
            workflowStageId?: string;
        }
        export interface StageEntryCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
        }
        export interface StageEntryUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            eventType?: "v2-alpha.stageEntry.updated.fields";
            stageEntry?: /* A notebook entry used for execution of one or more stage runs in a legacy workflow. */ StageEntry;
        }
        export interface StageEntryUpdatedReviewRecordEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
            entry?: /* A notebook entry used for execution of one or more stage runs in a legacy workflow. */ StageEntry;
            eventType?: "v2-alpha.stageEntry.updated.reviewRecord";
        }
        export interface StructuredTableApiIdentifiers {
            apiId?: string;
            columns?: StructuredTableColumnInfo[];
        }
        export interface StructuredTableColumnInfo {
            columnId?: string;
            isReadOnly?: boolean;
            name?: string;
        }
        /**
         * A table with rows and columns of text
         */
        export interface TableNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "table";
            /**
             * Array of links referenced in the caption via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
             *
             */
            links?: /**
             * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
             *
             */
            EntryLink[];
            /**
             * Actual tabular data with rows and columns of text on the note.
             *
             */
            table?: {
                /**
                 * Array of strings, with one item per column. Defaults to null, if the user is using the default, but is set if the user has given a custom name to the column.
                 *
                 */
                columnLabels?: (string | null)[];
                /**
                 * Name of the table - defaults to e.g. Table1 but can be renamed.
                 *
                 */
                name?: string;
                /**
                 * Array of row objects.
                 */
                rows?: /* Each has property 'cells' that is an array of cell objects */ EntryTableRow[];
            };
            /**
             * The caption of the table.
             */
            text?: string;
        }
        export interface TableUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * Display name for the table block, to be shown in the UI
             */
            name: string;
            source: TableUiBlockSource;
            type: "TABLE";
        }
        export interface TableUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * Display name for the table block, to be shown in the UI
             */
            name: string;
            source: TableUiBlockSource;
            type: "TABLE";
        }
        export interface TableUiBlockDatasetSource {
            /**
             * `datasetId` of an uploaded dataset (see [Create Dataset endpoint](https://biotechtx.benchling.com/api/v2-beta/reference#/Datasets/createDataset)). Note: Canvas tables currently support only text-type columns.
             *
             * example:
             * dset_mfz1f3ai2e8y
             */
            datasetId: string | null;
            type: "DATASET";
        }
        export type TableUiBlockSource = TableUiBlockDatasetSource;
        export interface TableUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * Display name for the table block, to be shown in the UI
             */
            name: string;
            source: TableUiBlockSource;
            type: "TABLE";
        }
        /**
         * example:
         * {
         *   "handle": "elion_team",
         *   "id": "team_5cjIguqc",
         *   "name": "Elion's Team",
         *   "organization": "Elion's Org"
         * }
         */
        export interface Team {
            handle?: string;
            id?: string;
            name?: string;
            organization?: OrganizationSummary;
        }
        /**
         * example:
         * {
         *   "handle": "elion_team",
         *   "id": "team_5cjIguqc",
         *   "name": "Elion's Team"
         * }
         */
        export interface TeamSummary {
            handle?: string;
            id?: string;
            name?: string;
        }
        export interface TeamsPaginatedList {
            nextToken?: string;
            teams?: /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team",
             *   "organization": "Elion's Org"
             * }
             */
            Team[];
        }
        export interface TextAppConfigItem {
            apiURL?: string; // uri
            app?: {
                /**
                 * The id of the Benchling app to which this configuration item belongs
                 */
                id?: string;
            };
            /**
             * DateTime the app config item was created
             */
            createdAt?: string; // date-time
            id?: string;
            /**
             * DateTime the app config item was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Array-based representation of config item's location in the tree in order from top to bottom.
             * example:
             * [
             *   "My Schema 1",
             *   "My Field 1"
             * ]
             */
            path?: string[];
            /**
             * Type of the app config item
             * example:
             * text
             */
            type?: "text";
            description?: string;
            requiredConfig?: boolean;
            /**
             * example:
             * user configured text
             */
            value?: string | null;
        }
        export interface TextBoxNotePart {
            /**
             * All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
             */
            indentation?: number;
            /**
             * The type of the note.  Type determines what other fields are present.
             */
            type?: "text_box";
            /**
             * Array of links referenced via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note.
             *
             */
            links?: /**
             * Links are contained within notes to reference resources that live outside of the entry. A link can target an external resource via an http(s):// hyperlink or a Benchling resource via @-mentions and drag-n-drop.
             *
             */
            EntryLink[];
            name?: string;
            text?: string;
        }
        export interface TextInputUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            placeholder?: string | null;
            type: "TEXT_INPUT";
        }
        export interface TextInputUiBlockCreate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            placeholder?: string | null;
            type: "TEXT_INPUT";
        }
        export interface TextInputUiBlockUpdate {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
            placeholder?: string | null;
            type: "TEXT_INPUT";
        }
        export interface TokenCreate {
            /**
             * ID of client to request token for. Leave off if client ID and secret are being supplied through Authorization header.
             *
             */
            client_id?: string;
            /**
             * Leave off if client ID and secret are being supplied through Authorization header.
             *
             */
            client_secret?: string;
            /**
             * example:
             * client_credentials
             */
            grant_type: "client_credentials";
        }
        export interface TokenResponse {
            /**
             * example:
             * eyJ...
             */
            access_token?: string;
            /**
             * Number of seconds that token is valid for
             * example:
             * 900
             */
            expires_in?: number;
            /**
             * example:
             * Bearer
             */
            token_type?: "Bearer";
        }
        export interface TransfersAsyncTask {
            /**
             * Present only when status is FAILED for a bulk task. Contains information about the individual errors in the bulk task.
             *
             */
            errors?: {
                [key: string]: any;
            };
            /**
             * Present only when status is FAILED. Contains information about the error.
             */
            message?: string;
            /**
             * Present only when status is SUCCEEDED. response can be empty if there is no data to be returned.
             */
            response?: {
                destinationContainers?: Container[];
            };
            /**
             * The current state of the task.
             */
            status: "RUNNING" | "SUCCEEDED" | "FAILED";
        }
        export interface Translation {
            /**
             * Hex color code used when displaying this feature in the UI.
             * example:
             * #F58A5E
             */
            color?: string;
            customFields?: [
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?,
                /* A name and value pair associated with a sequence feature (annotation or translation). For genbank imports, these are the qualifiers associated with each feature. */ SequenceFeatureCustomField?
            ];
            name?: string;
            /**
             * example:
             * Cong et al Science. 2013 Jan 3.
             */
            notes?: string;
            aminoAcids?: string;
            /**
             * 0-based exclusive end index. The end of the sequence is always represented as 0.
             */
            end?: number;
            /**
             * The genetic code to use when translating the nucleotide sequence into amino acids.
             */
            geneticCode?: "STANDARD" | "VERTEBRATE_MITOCHONDRIAL" | "YEAST_MITOCHONDRIAL" | "MOLD_PROTOZOAN_COELENTERATE_MITOCHONDRIAL_MYCOPLASMA_SPIROPLASMA" | "INVERTEBRATE_MITOCHONDRIAL" | "CILIATE_DASYCLADACEAN_HEXAMITA_NUCLEAR" | "ECHINODERM_FLATWORM_MITOCHONDRIAL" | "EUPLOTID_NUCLEAR" | "BACTERIAL_ARCHAEAL_PLANT_PLASTID" | "ALTERNATIVE_YEAST_NUCLEAR" | "ASCIDIAN_MITOCHONDRIAL" | "ALTERNATIVE_FLATWORM_MITOCHONDRIAL" | "CHLOROPHYCEAN_MITOCHONDRIAL" | "TREMATODE_MITOCHONDRIAL" | "SCENEDESMUS_OBLIQUUS_MITOCHONDRIAL" | "THRAUSTOCHYTRIUM_MITOCHONDRIAL" | "RHABDOPLEURIDAE_MITOCHONDRIAL" | "CANDIDATE_DIVISION_SR1_GRACILIBACTERIA" | "PACHYSOLEN_TANNOPHILUS_NUCLEAR" | "MESODINIUM_NUCLEAR" | "PERITRICH_NUCLEAR" | "CEPHALODISCIDAE_MITOCHONDRIAL_UAA_TYR";
            regions?: {
                /**
                 * 0-based exclusive end index. The end of the sequence is always represented as 0.
                 */
                end?: number;
                /**
                 * 0-based inclusive start index.
                 */
                start?: number;
            }[];
            /**
             * 0-based inclusive start index.
             */
            start?: number;
            /**
             * example:
             * 1
             */
            strand?: number;
        }
        export interface UnregisterEntities {
            /**
             * Array of entity IDs
             */
            entityIds: string[];
            /**
             * ID of the folder that the entities should be moved to
             */
            folderId: string;
        }
        export interface UpdateEventMixin {
            /**
             * These properties have been updated, causing this message
             *
             * example:
             * [
             *   "fields.Cost Center"
             * ]
             */
            updates?: string[];
        }
        /**
         * example:
         * {
         *   "handle": "lpasteur",
         *   "id": "ent_a0SApq3z",
         *   "name": "Louis Pasteur",
         *   "email": "lpasteur@benchling.com",
         *   "isSuspended": false
         * }
         */
        export interface User {
            handle?: string;
            id?: string;
            name?: string;
            email?: string;
            isSuspended?: boolean;
            passwordLastChangedAt?: string | null;
        }
        export interface UserActivity {
            lastSeen?: string | null; // date-time
            userId?: string;
        }
        export interface UserBulkCreateRequest {
            users?: UserCreate[];
        }
        export interface UserBulkUpdate {
            id: string;
            /**
             * Email of the User
             */
            email?: string;
            /**
             * Handle of the User
             */
            handle?: string;
            /**
             * Suspended status of the User
             */
            isSuspended?: boolean;
            /**
             * Name of the User
             */
            name?: string;
        }
        export interface UserBulkUpdateRequest {
            users?: UserBulkUpdate[];
        }
        export interface UserCreate {
            /**
             * Email of the User
             */
            email: string;
            /**
             * Handle of the User
             */
            handle: string;
            /**
             * Name of the User
             */
            name: string;
        }
        export interface UserInputMultiValueUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string[] | null;
        }
        export interface UserInputUiBlock {
            enabled?: boolean | null;
            /**
             * example:
             * user_defined_id
             */
            id: string;
            /**
             * example:
             * My Input
             */
            label?: string | null;
            value: string | null;
        }
        /**
         * example:
         * {
         *   "handle": "lpasteur",
         *   "id": "ent_a0SApq3z",
         *   "name": "Louis Pasteur"
         * }
         */
        export interface UserSummary {
            handle?: string;
            id?: string;
            name?: string;
        }
        export interface UserUpdate {
            /**
             * Email of the User
             */
            email?: string;
            /**
             * Handle of the User
             */
            handle?: string;
            /**
             * Suspended status of the User
             */
            isSuspended?: boolean;
            /**
             * Name of the User
             */
            name?: string;
        }
        export interface UserValidation {
            /**
             * A string explaining the reason for the provided validation status.
             */
            validationComment?: string;
            /**
             * Valid values for this enum depend on whether it is used to set a value (e.g., in a POST request), or is a return value for an existing result.
             * Acceptable values for setting a status are 'VALID' or 'INVALID'. Possible return values are 'VALID', 'INVALID', or 'PARTIALLY_VALID' (a result will be partially valid if it has some valid fields and some invalid fields).
             *
             */
            validationStatus?: "VALID" | "INVALID" | "PARTIALLY_VALID";
        }
        export interface UsersPaginatedList {
            nextToken?: string;
            users?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur",
             *   "email": "lpasteur@benchling.com",
             *   "isSuspended": false
             * }
             */
            User[];
        }
        export interface WarehouseCredentials {
            /**
             * The time after which new connections using the username/password will not be permitted. Upon expiration, currently open connections are not terminated.
             *
             * example:
             * 2017-04-18T05:54:56.247545+00:00
             */
            expiresAt?: string; // date-time
            /**
             * The password to connect to the warehouse.
             * example:
             * 9YC122LzxKW1Uq2q
             */
            password?: string;
            /**
             * The username to connect to the warehouse.
             * example:
             * u$lpasteur_az
             */
            username?: string;
        }
        export interface WarehouseCredentialsCreate {
            /**
             * Duration, in seconds, that credentials should be active for. Must be greater than 0 and less than 3600.
             *
             */
            expiresIn: number;
        }
        export interface Well {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            /**
             * Barcode of the well
             */
            barcode?: string;
            /**
             *
             * *assignee field* is set if status is "RESERVED" or "CHECKED_OUT", or null if status is "AVAILABLE".
             *
             * *comment field* is set when container was last reserved, checked out, or checked into.
             *
             * *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved
             *
             */
            checkoutRecord?: {
                assignee?: null & (/**
                 * example:
                 * {
                 *   "handle": "lpasteur",
                 *   "id": "ent_a0SApq3z",
                 *   "name": "Louis Pasteur"
                 * }
                 */
                UserSummary | /**
                 * example:
                 * {
                 *   "handle": "elion_team",
                 *   "id": "team_5cjIguqc",
                 *   "name": "Elion's Team"
                 * }
                 */
                TeamSummary);
                comment?: string;
                modifiedAt?: string; // date-time
                status?: "AVAILABLE" | "RESERVED" | "CHECKED_OUT";
            };
            /**
             * Array of well contents, each with a batch and concentration
             */
            contents?: ContainerContent[];
            /**
             * DateTime the well was created
             */
            createdAt?: string; // date-time
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            fields?: Fields;
            /**
             * ID of the well
             */
            id?: string;
            /**
             * DateTime the well was last modified
             */
            modifiedAt?: string; // date-time
            /**
             * Name of the well, defaults to barcode if name is not provided.
             */
            name?: string;
            /**
             * ID of containing parent inventory, a plate well with a coordinate (e.g. plt_2bAks9dx:a2).
             */
            parentStorageId?: string | null;
            parentStorageSchema?: SchemaSummary;
            /**
             * ID of the project if set
             */
            projectId?: string | null;
            quantity?: /* Quantity of a container, well, or transfer. Supports mass, volume, and other quantities. */ ContainerQuantity;
            resourceType?: "container";
            /**
             * Not applicable for fixed plate wells.
             */
            restrictedSampleParties?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            /**
             * Not applicable for fixed plate wells.
             */
            restrictionStatus?: "RESTRICTED" | "UNRESTRICTED" | "NOT_APPLICABLE";
            /**
             * Not applicable for fixed plate wells.
             */
            sampleOwners?: (/**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary | /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            TeamSummary)[];
            schema?: {
                id?: string;
                name?: string;
            } | null;
            volume?: /**
             * The deprecated "volume" type key in API responses can also contain non-volume quantities for back-compatibility purposes. Use the "quantity" type key instead.
             *
             */
            DeprecatedContainerVolumeForResponse;
            webURL?: string;
        }
        export type WellOrInaccessibleResource = Well | InaccessibleResource;
        export interface WorkflowList {
            workflows?: LegacyWorkflow[];
        }
        export interface WorkflowOutput {
            /**
             * User-friendly ID of the workflow task group
             */
            displayId?: string;
            /**
             * The ID of the workflow output
             * example:
             * wfout_5cJLQKVF
             */
            id?: string;
            creationOrigin?: CreationOrigin;
            fields?: Fields;
            task?: WorkflowTaskSummary;
            /**
             * URL of the workflow output
             */
            webURL?: string; // uri
            workflowTaskGroup?: WorkflowTaskGroupSummary;
        }
        /**
         * The reason for archiving the provided workflow outputs. Accepted reasons may differ based on tenant configuration.
         *
         */
        export type WorkflowOutputArchiveReason = "Made in error" | "Retired" | "Other";
        export interface WorkflowOutputBulkCreate {
            fields?: Fields;
            /**
             * The ID of the workflow task this output belogns to
             * example:
             * wftask_OnnsW08k
             */
            workflowTaskId: string;
        }
        export interface WorkflowOutputBulkUpdate {
            fields?: Fields;
            /**
             * The ID of the workflow output
             * example:
             * wfout_5cJLQKVF
             */
            workflowOutputId?: string;
        }
        export interface WorkflowOutputCreate {
            fields?: Fields;
            /**
             * The ID of the workflow task this output belogns to
             * example:
             * wftask_OnnsW08k
             */
            workflowTaskId: string;
        }
        export interface WorkflowOutputCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowOutput.created";
            workflowOutput?: WorkflowOutput;
        }
        export interface WorkflowOutputSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            name?: string;
            prefix?: string;
            type?: string;
        }
        export interface WorkflowOutputSummary {
            /**
             * User-friendly ID of the workflow task group
             */
            displayId?: string;
            /**
             * The ID of the workflow output
             * example:
             * wfout_5cJLQKVF
             */
            id?: string;
        }
        export interface WorkflowOutputUpdate {
            fields?: Fields;
        }
        export interface WorkflowOutputUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowOutput.updated.fields";
            workflowOutput?: WorkflowOutput;
        }
        export interface WorkflowOutputWriteBase {
            fields?: Fields;
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type
         *
         */
        export interface WorkflowOutputsArchivalChange {
            workflowOutputIds?: string[];
        }
        export interface WorkflowOutputsArchive {
            reason: /**
             * The reason for archiving the provided workflow outputs. Accepted reasons may differ based on tenant configuration.
             *
             */
            WorkflowOutputArchiveReason;
            workflowOutputIds: string[];
        }
        export interface WorkflowOutputsBulkCreateRequest {
            workflowOutputs?: [
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?,
                WorkflowOutputBulkCreate?
            ];
        }
        export interface WorkflowOutputsBulkUpdateRequest {
            workflowOutputs?: [
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?,
                WorkflowOutputBulkUpdate?
            ];
        }
        export interface WorkflowOutputsPaginatedList {
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
            workflowOutputs?: WorkflowOutput[];
        }
        export interface WorkflowOutputsUnarchive {
            workflowOutputIds: string[];
        }
        export interface WorkflowPatch {
            /**
             * Description of the workflow
             */
            description?: string;
            /**
             * Name of the workflow
             */
            name?: string;
            /**
             * ID of the project that contains the workflow
             */
            projectId?: string;
        }
        export interface WorkflowSample {
            /**
             * ID of the batch
             */
            batchId?: string;
            /**
             * Array of IDs of containers
             */
            containerIds?: string[];
            /**
             * DateTime at which the the sample was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the sample
             */
            id?: string;
            /**
             * Name of the sample
             */
            name?: string;
        }
        export interface WorkflowSampleList {
            samples?: WorkflowSample[];
        }
        export interface WorkflowStage {
            /**
             * DateTime at which the the workflow stage was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the workflow stage
             */
            id?: string;
            /**
             * Name of the workflow stage
             */
            name?: string;
        }
        export interface WorkflowStageList {
            workflowStages?: WorkflowStage[];
        }
        export interface WorkflowStageRun {
            /**
             * DateTime at which the the stage run was created
             */
            createdAt?: string; // date-time
            /**
             * ID of the stage run
             */
            id?: string;
            /**
             * Name of the stage run
             */
            name?: string;
            /**
             * Status of the stage run
             */
            status?: "COMPLETED" | "DISCARDED" | "INITIALIZED";
        }
        export interface WorkflowStageRunList {
            workflowStageRuns?: WorkflowStageRun[];
        }
        export interface WorkflowTask {
            /**
             * User-friendly ID of the workflow task
             */
            displayId?: string;
            /**
             * The ID of the workflow task
             * example:
             * wftask_OnnsW08k
             */
            id?: string;
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            assignee?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            clonedFrom?: {
                /**
                 * User-friendly ID of the workflow task
                 */
                displayId?: string;
                /**
                 * The ID of the workflow task
                 * example:
                 * wftask_OnnsW08k
                 */
                id?: string;
            } | null;
            creationOrigin?: CreationOrigin;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * The context into which a task was executed
             */
            executionOrigin?: {
                /**
                 * example:
                 * etr_30ad79
                 */
                entryId?: string | null;
                /**
                 * example:
                 * e8805895-0654-4613-ac04-39ee7462202e
                 */
                originModalUuid?: string | null; // uuid
                type?: "API" | "ENTRY" | "MODAL";
            } | null;
            fields?: Fields;
            outputs?: WorkflowOutputSummary[];
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string | null; // date
            status?: WorkflowTaskStatus;
            /**
             * URL of the workflow task
             */
            webURL?: string; // uri
            workflowTaskGroup?: WorkflowTaskGroupSummary;
            /**
             * The method by which the task of the workflow is executed
             */
            executionType?: "DIRECT" | "ENTRY";
        }
        /**
         * The reason for archiving the provided workflow tasks. Accepted reasons may differ based on tenant configuration.
         *
         */
        export type WorkflowTaskArchiveReason = "Made in error" | "Retired" | "Other";
        export interface WorkflowTaskBase {
            /**
             * User-friendly ID of the workflow task
             */
            displayId?: string;
            /**
             * The ID of the workflow task
             * example:
             * wftask_OnnsW08k
             */
            id?: string;
            /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            assignee?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            clonedFrom?: {
                /**
                 * User-friendly ID of the workflow task
                 */
                displayId?: string;
                /**
                 * The ID of the workflow task
                 * example:
                 * wftask_OnnsW08k
                 */
                id?: string;
            } | null;
            creationOrigin?: CreationOrigin;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            /**
             * The context into which a task was executed
             */
            executionOrigin?: {
                /**
                 * example:
                 * etr_30ad79
                 */
                entryId?: string | null;
                /**
                 * example:
                 * e8805895-0654-4613-ac04-39ee7462202e
                 */
                originModalUuid?: string | null; // uuid
                type?: "API" | "ENTRY" | "MODAL";
            } | null;
            fields?: Fields;
            outputs?: WorkflowOutputSummary[];
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string | null; // date
            status?: WorkflowTaskStatus;
            /**
             * URL of the workflow task
             */
            webURL?: string; // uri
            workflowTaskGroup?: WorkflowTaskGroupSummary;
        }
        export interface WorkflowTaskBulkCreate {
            /**
             * The id of the user assigned to the task
             * example:
             * ent_0YuSQS51
             */
            assigneeId?: string;
            fields?: Fields;
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string; // date
            /**
             * The workflow ID
             * example:
             * prs_giVNQcTL
             */
            workflowTaskGroupId: string;
        }
        export interface WorkflowTaskBulkUpdate {
            /**
             * example:
             * wfts_VFvwv7JV
             */
            statusId?: string;
            /**
             * The id of the user assigned to the task
             * example:
             * ent_0YuSQS51
             */
            assigneeId?: string;
            fields?: Fields;
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string; // date
            /**
             * The workflow task ID
             * example:
             * wftask_OnnsW08k
             */
            workflowTaskId?: string;
        }
        export interface WorkflowTaskCreate {
            /**
             * The id of the user assigned to the task
             * example:
             * ent_0YuSQS51
             */
            assigneeId?: string;
            fields?: Fields;
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string; // date
            /**
             * The workflow ID
             * example:
             * prs_giVNQcTL
             */
            workflowTaskGroupId: string;
        }
        export interface WorkflowTaskCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTask.created";
            workflowTask?: WorkflowTask;
        }
        /**
         * The context into which a task was executed
         */
        export interface WorkflowTaskExecutionOrigin {
            /**
             * example:
             * etr_30ad79
             */
            entryId?: string | null;
            /**
             * example:
             * e8805895-0654-4613-ac04-39ee7462202e
             */
            originModalUuid?: string | null; // uuid
            type?: "API" | "ENTRY" | "MODAL";
        }
        export interface WorkflowTaskGroup {
            /**
             * User-friendly ID of the workflow task group
             */
            displayId?: string;
            /**
             * The ID of the workflow task group
             * example:
             * prs_giVNQcTL
             */
            id?: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
            creationOrigin?: CreationOrigin;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            folder?: Folder;
            /**
             * The outputs of the workflow task group
             */
            outputs?: WorkflowOutputSummary[];
            /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            responsibleTeam?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            /**
             * The users watching the workflow task group
             */
            watchers?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * URL of the workflow task group
             */
            webURL?: string; // uri
            workflowTaskSchema?: WorkflowTaskSchemaSummary;
            /**
             * The input tasks to the workflow task group
             */
            workflowTasks?: WorkflowTaskSummary[];
            /**
             * The method by which the workflow is executed
             */
            executionType?: "DIRECT" | "ENTRY";
        }
        /**
         * The reason for archiving the provided workflow task groups. Accepted reasons may differ based on tenant configuration.
         *
         */
        export type WorkflowTaskGroupArchiveReason = "Made in error" | "Retired" | "Other";
        export interface WorkflowTaskGroupBase {
            /**
             * User-friendly ID of the workflow task group
             */
            displayId?: string;
            /**
             * The ID of the workflow task group
             * example:
             * prs_giVNQcTL
             */
            id?: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
            creationOrigin?: CreationOrigin;
            creator?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary;
            folder?: Folder;
            /**
             * The outputs of the workflow task group
             */
            outputs?: WorkflowOutputSummary[];
            /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            responsibleTeam?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            /**
             * The users watching the workflow task group
             */
            watchers?: /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur"
             * }
             */
            UserSummary[];
            /**
             * URL of the workflow task group
             */
            webURL?: string; // uri
            workflowTaskSchema?: WorkflowTaskSchemaSummary;
            /**
             * The input tasks to the workflow task group
             */
            workflowTasks?: WorkflowTaskSummary[];
        }
        export interface WorkflowTaskGroupCreate {
            /**
             * ID of the folder that contains the workflow task group
             */
            folderId: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
            /**
             * IDs of the users watching the workflow task group
             */
            watcherIds?: string[];
            /**
             * The workflow task schema of tasks in this task group
             * example:
             * prstsch_KnR9iVum
             */
            schemaId: string;
        }
        export interface WorkflowTaskGroupCreatedEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTaskGroup.created";
            workflowTaskGroup?: WorkflowTaskGroup;
        }
        export interface WorkflowTaskGroupSummary {
            /**
             * User-friendly ID of the workflow task group
             */
            displayId?: string;
            /**
             * The ID of the workflow task group
             * example:
             * prs_giVNQcTL
             */
            id?: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
        }
        export interface WorkflowTaskGroupUpdate {
            /**
             * ID of the folder that contains the workflow task group
             */
            folderId?: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
            /**
             * IDs of the users watching the workflow task group
             */
            watcherIds?: string[];
        }
        export interface WorkflowTaskGroupUpdatedWatchersEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTaskGroup.updated.watchers";
            workflowTaskGroup?: WorkflowTaskGroup;
        }
        export interface WorkflowTaskGroupWriteBase {
            /**
             * ID of the folder that contains the workflow task group
             */
            folderId?: string;
            /**
             * The name of the workflow task group
             */
            name?: string;
            /**
             * IDs of the users watching the workflow task group
             */
            watcherIds?: string[];
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type
         *
         */
        export interface WorkflowTaskGroupsArchivalChange {
            workflowTaskGroupIds?: string[];
        }
        export interface WorkflowTaskGroupsArchive {
            reason: /**
             * The reason for archiving the provided workflow task groups. Accepted reasons may differ based on tenant configuration.
             *
             */
            WorkflowTaskGroupArchiveReason;
            workflowTaskGroupIds: string[];
        }
        export interface WorkflowTaskGroupsPaginatedList {
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
            workflowTaskGroups?: WorkflowTaskGroup[];
        }
        export interface WorkflowTaskGroupsUnarchive {
            workflowTaskGroupIds: string[];
        }
        export interface WorkflowTaskSchema {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
            /**
             * Whether or not tasks of this schema can be created with a non-null assignee.
             */
            canSetAssigneeOnTaskCreation?: boolean;
            /**
             * ID of the default folder for creating workflow task groups
             */
            defaultCreationFolderId?: string | null;
            /**
             * ID of the default folder for workflow task execution entries
             */
            defaultEntryExecutionFolderId?: string | null;
            /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            defaultResponsibleTeam?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            /**
             * The ID of the template of the entries tasks of this schema will be executed into.
             * example:
             * tmpl_27b8fb
             */
            entryTemplateId?: string | null;
            /**
             * Whether propagation of watchers has been enabled for this task schema.
             */
            isPropagateWatchersEnabled?: boolean;
            /**
             * The prefix for the displayId of tasks of this schema.
             */
            prefix?: string;
            statusLifecycle?: WorkflowTaskStatusLifecycle;
            /**
             * The prefix for the displayId of task groups containing tasks of this schema
             */
            taskGroupPrefix?: string;
            workflowOutputSchema?: {
                archiveRecord?: {
                    /**
                     * example:
                     * Made in error
                     */
                    reason?: string;
                } | null;
                fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
                name?: string;
                prefix?: string;
                type?: string;
            } | null;
            /**
             * The method by which instances of this schema are executed
             */
            executionType?: "DIRECT" | "ENTRY";
        }
        export interface WorkflowTaskSchemaBase {
            archiveRecord?: {
                /**
                 * example:
                 * Made in error
                 */
                reason?: string;
            } | null;
            fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
            id?: string;
            name?: string;
            type?: string;
            /**
             * Whether or not tasks of this schema can be created with a non-null assignee.
             */
            canSetAssigneeOnTaskCreation?: boolean;
            /**
             * ID of the default folder for creating workflow task groups
             */
            defaultCreationFolderId?: string | null;
            /**
             * ID of the default folder for workflow task execution entries
             */
            defaultEntryExecutionFolderId?: string | null;
            /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team"
             * }
             */
            defaultResponsibleTeam?: {
                handle?: string;
                id?: string;
                name?: string;
            } | null;
            /**
             * The ID of the template of the entries tasks of this schema will be executed into.
             * example:
             * tmpl_27b8fb
             */
            entryTemplateId?: string | null;
            /**
             * Whether propagation of watchers has been enabled for this task schema.
             */
            isPropagateWatchersEnabled?: boolean;
            /**
             * The prefix for the displayId of tasks of this schema.
             */
            prefix?: string;
            statusLifecycle?: WorkflowTaskStatusLifecycle;
            /**
             * The prefix for the displayId of task groups containing tasks of this schema
             */
            taskGroupPrefix?: string;
            workflowOutputSchema?: {
                archiveRecord?: {
                    /**
                     * example:
                     * Made in error
                     */
                    reason?: string;
                } | null;
                fieldDefinitions?: (SimpleFieldDefinition | IntegerFieldDefinition | FloatFieldDefinition | DropdownFieldDefinition | SchemaLinkFieldDefinition)[];
                name?: string;
                prefix?: string;
                type?: string;
            } | null;
        }
        export interface WorkflowTaskSchemaSummary {
            /**
             * The ID of the workflow task schema
             */
            id?: string;
            /**
             * The name of the workflow task schema
             */
            name?: string;
        }
        export interface WorkflowTaskSchemasPaginatedList {
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
            workflowTaskSchemas?: WorkflowTaskSchema[];
        }
        export interface WorkflowTaskStatus {
            /**
             * The status label
             * example:
             * Pending
             */
            displayName?: string;
            /**
             * The ID of the workflow task status
             * example:
             * wfts_wQzUCsW0
             */
            id?: string;
            /**
             * The status type
             * example:
             * PENDING
             */
            statusType?: "PENDING" | "IN_PROGRESS" | "FAILED" | "CANCELLED" | "INVALID" | "COMPLETED";
        }
        export interface WorkflowTaskStatusLifecycle {
            /**
             * example:
             * prstswf_123kjlkj
             */
            id?: string;
            initialStatus?: WorkflowTaskStatus;
            /**
             * example:
             * Direct Completion
             */
            name?: string;
            /**
             * example:
             * [
             *   {
             *     "displayName": "Pending",
             *     "id": "prsts_wQzUCsW0",
             *     "statusType": "PENDING"
             *   },
             *   {
             *     "displayName": "In Progress",
             *     "id": "prsts_fc0781",
             *     "statusType": "IN_PROGRESS"
             *   }
             * ]
             */
            statuses?: WorkflowTaskStatus[];
            transitions?: /**
             * example:
             * {
             *   "from": {
             *     "displayName": "Pending",
             *     "id": "prsts_wQzUCsW0",
             *     "statusType": "PENDING"
             *   },
             *   "to": {
             *     "displayName": "In Progress",
             *     "id": "prsts_fc0781",
             *     "statusType": "IN_PROGRESS"
             *   }
             * }
             */
            WorkflowTaskStatusLifecycleTransition[];
        }
        /**
         * example:
         * {
         *   "from": {
         *     "displayName": "Pending",
         *     "id": "prsts_wQzUCsW0",
         *     "statusType": "PENDING"
         *   },
         *   "to": {
         *     "displayName": "In Progress",
         *     "id": "prsts_fc0781",
         *     "statusType": "IN_PROGRESS"
         *   }
         * }
         */
        export interface WorkflowTaskStatusLifecycleTransition {
            from?: WorkflowTaskStatus;
            to?: WorkflowTaskStatus;
        }
        export interface WorkflowTaskSummary {
            /**
             * User-friendly ID of the workflow task
             */
            displayId?: string;
            /**
             * The ID of the workflow task
             * example:
             * wftask_OnnsW08k
             */
            id?: string;
        }
        export interface WorkflowTaskUpdate {
            /**
             * example:
             * wfts_VFvwv7JV
             */
            statusId?: string;
            /**
             * The id of the user assigned to the task
             * example:
             * ent_0YuSQS51
             */
            assigneeId?: string;
            fields?: Fields;
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string; // date
        }
        export interface WorkflowTaskUpdatedAssigneeEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTask.updated.assignee";
            workflowTask?: WorkflowTask;
        }
        export interface WorkflowTaskUpdatedFieldsEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTask.updated.fields";
            workflowTask?: WorkflowTask;
        }
        export interface WorkflowTaskUpdatedScheduledOnEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTask.updated.scheduledOn";
            workflowTask?: WorkflowTask;
        }
        export interface WorkflowTaskUpdatedStatusEvent {
            createdAt?: string; // date-time
            /**
             * example:
             * false
             */
            deprecated?: boolean;
            /**
             * These properties have been dropped from the payload due to size.
             *
             */
            excludedProperties?: string[];
            id?: string;
            schema?: {
                id?: string;
                name?: string;
            } | null;
            eventType?: "v2.workflowTask.updated.status";
            workflowTask?: WorkflowTask;
        }
        export interface WorkflowTaskWriteBase {
            /**
             * The id of the user assigned to the task
             * example:
             * ent_0YuSQS51
             */
            assigneeId?: string;
            fields?: Fields;
            /**
             * The date on which the task is scheduled to be executed
             * example:
             * 2020-08-01
             */
            scheduledOn?: string; // date
        }
        /**
         * IDs of all items that were archived or unarchived, grouped by resource type
         *
         */
        export interface WorkflowTasksArchivalChange {
            workflowTaskIds?: string[];
        }
        export interface WorkflowTasksArchive {
            reason: /**
             * The reason for archiving the provided workflow tasks. Accepted reasons may differ based on tenant configuration.
             *
             */
            WorkflowTaskArchiveReason;
            workflowTaskIds: string[];
        }
        export interface WorkflowTasksBulkCopyRequest {
            workflowTaskIds?: string[];
        }
        export interface WorkflowTasksBulkCreateRequest {
            workflowTasks?: WorkflowTaskBulkCreate[];
        }
        export interface WorkflowTasksBulkUpdateRequest {
            workflowTasks?: WorkflowTaskBulkUpdate[];
        }
        export interface WorkflowTasksPaginatedList {
            /**
             * example:
             * Im5ldyB0ZXN0Ig==
             */
            nextToken?: string;
            workflowTasks?: WorkflowTask[];
        }
        export interface WorkflowTasksUnarchive {
            workflowTaskIds: string[];
        }
    }
}
declare namespace Paths {
    namespace AbortAssayResultsTransaction {
        namespace Parameters {
            export type TransactionId = string; // uuid
        }
        export interface PathParameters {
            transaction_id: Parameters.TransactionId /* uuid */;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultTransactionCreateResponse;
        }
    }
    namespace AbortMultipartBlob {
        namespace Parameters {
            export type BlobId = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveAASequences {
        export type RequestBody = /**
         * The request body for archiving AA sequences.
         *
         */
        Components.Schemas.AaSequencesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.AaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveAppCanvases {
        export type RequestBody = Components.Schemas.AppCanvasesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived. This includes the IDs of canvases that were archived / unarchived.
             *
             */
            Components.Schemas.AppCanvasesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveAssayResults {
        export type RequestBody = Components.Schemas.AssayResultsArchive;
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultIdsResponse;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveAssayRuns {
        export type RequestBody = /**
         * The request body for archiving Assay Runs.
         *
         */
        Components.Schemas.AssayRunsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all Assay Runs that were archived / unarchived.
             *
             */
            Components.Schemas.AssayRunsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveAutomationOutputProcessors {
        export type RequestBody = Components.Schemas.AutomationOutputProcessorsArchive;
        namespace Responses {
            export type $200 = /* IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of any linked Results that were archived / unarchived. */ Components.Schemas.AutomationOutputProcessorArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveBatches {
        export type RequestBody = /**
         * The request body for archiving Batches.
         *
         */
        Components.Schemas.BatchesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all batches that were archived / unarchived, grouped by resource type.
             *
             */
            Components.Schemas.BatchesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveBenchlingApps {
        export type RequestBody = Components.Schemas.BenchlingAppsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of apps that were archived / unarchived.
             *
             */
            Components.Schemas.BenchlingAppsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveBoxes {
        export type RequestBody = Components.Schemas.BoxesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of boxes along with any IDs of containers that were archived / unarchived.
             *
             */
            Components.Schemas.BoxesArchivalChange;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace ArchiveContainers {
        export type RequestBody = Components.Schemas.ContainersArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were unarchived, grouped by resource type. This includes the IDs of containers that were unarchived.
             *
             */
            Components.Schemas.ContainersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace ArchiveCustomEntities {
        export type RequestBody = /**
         * The request body for archiving custom entities.
         *
         */
        Components.Schemas.CustomEntitiesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of custom entities along with any IDs of batches that were archived (or unarchived).
             *
             */
            Components.Schemas.CustomEntitiesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveDNAOligos {
        export type RequestBody = /**
         * The request body for archiving DNA Oligos.
         *
         */
        Components.Schemas.DnaOligosArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.DnaOligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveDNASequences {
        export type RequestBody = /**
         * The request body for archiving DNA sequences.
         *
         */
        Components.Schemas.DnaSequencesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA sequences along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.DnaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveDropdownOptions {
        namespace Parameters {
            export type DropdownId = string;
        }
        export interface PathParameters {
            dropdown_id: Parameters.DropdownId;
        }
        export type RequestBody = Components.Schemas.DropdownOptionsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived.
             *
             */
            Components.Schemas.DropdownOptionsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ArchiveEntries {
        export type RequestBody = Components.Schemas.EntriesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of entries that changed..
             *
             */
            Components.Schemas.EntriesArchivalChange;
        }
    }
    namespace ArchiveFolders {
        export type RequestBody = Components.Schemas.FoldersArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of folders along with any IDs of folder contents that were unarchived.
             *
             */
            Components.Schemas.FoldersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveLocations {
        export type RequestBody = Components.Schemas.LocationsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of locations along with any IDs of locations, boxes, plates, containers that were archived.
             *
             */
            Components.Schemas.LocationsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace ArchiveMixtures {
        export type RequestBody = /**
         * The request body for archiving mixtures.
         *
         */
        Components.Schemas.MixturesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all mixtures that were archived or unarchived.
             *
             */
            Components.Schemas.MixturesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveMolecules {
        export type RequestBody = /**
         * The request body for archiving Molecules.
         *
         */
        Components.Schemas.MoleculesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Molecules along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.MoleculesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveMonomers {
        export type RequestBody = /**
         * The request body for archiving Monomers.
         *
         */
        Components.Schemas.MonomersArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type.
             *
             */
            Components.Schemas.MonomersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveOligos {
        export type RequestBody = /**
         * The request body for archiving Oligos.
         *
         */
        Components.Schemas.OligosArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.OligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchivePlates {
        export type RequestBody = Components.Schemas.PlatesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of plates along with any IDs of containers that were archived / unarchived.
             *
             */
            Components.Schemas.PlatesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace ArchiveProjects {
        export type RequestBody = Components.Schemas.ProjectsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of projects along with any IDs of project contents that were unarchived.
             *
             */
            Components.Schemas.ProjectsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveRNAOligos {
        export type RequestBody = /**
         * The request body for archiving RNA Oligos.
         *
         */
        Components.Schemas.RnaOligosArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of RNA Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.RnaOligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveRNASequences {
        export type RequestBody = /**
         * The request body for archiving RNA sequences.
         *
         */
        Components.Schemas.RnaSequencesArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all RNA Sequences that were archived or unarchived, grouped by resource type.
             *
             */
            Components.Schemas.RnaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveWorkflowOutputs {
        export type RequestBody = Components.Schemas.WorkflowOutputsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowOutputsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveWorkflowTaskGroups {
        export type RequestBody = Components.Schemas.WorkflowTaskGroupsArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowTaskGroupsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ArchiveWorkflowTasks {
        export type RequestBody = Components.Schemas.WorkflowTasksArchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowTasksArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutoAnnotateAaSequences {
        export type RequestBody = Components.Schemas.AutoAnnotateAaSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutoAnnotateDnaSequences {
        export type RequestBody = Components.Schemas.AutoAnnotateDnaSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutoAnnotateRnaSequences {
        export type RequestBody = Components.Schemas.AutoAnnotateRnaSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutofillDNASequenceParts {
        export type RequestBody = Components.Schemas.AutofillSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutofillDNASequenceTranslations {
        export type RequestBody = Components.Schemas.AutofillSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutofillRNASequenceParts {
        export type RequestBody = Components.Schemas.AutofillRnaSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace AutofillRNASequenceTranslations {
        export type RequestBody = Components.Schemas.AutofillRnaSequences;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCopyWorkflowTasks {
        export type RequestBody = Components.Schemas.WorkflowTasksBulkCopyRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateAASequences {
        export type RequestBody = Components.Schemas.AaSequencesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateAppConfigurationItems {
        export type RequestBody = Components.Schemas.AppConfigItemsBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateAssayResults {
        export type RequestBody = Components.Schemas.AssayResultsBulkCreateInTableRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateContainers {
        export type RequestBody = Components.Schemas.ContainersBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateCustomEntities {
        export type RequestBody = Components.Schemas.CustomEntitiesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateDNAOligos {
        export type RequestBody = Components.Schemas.DnaOligosBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateDNASequences {
        export type RequestBody = Components.Schemas.DnaSequencesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateFeatures {
        export type RequestBody = /* Inputs for bulk creating a new feature */ Components.Schemas.FeaturesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateMixtures {
        export type RequestBody = Components.Schemas.MixturesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateMolecules {
        export type RequestBody = Components.Schemas.MoleculesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateOligos {
        export type RequestBody = Components.Schemas.OligosBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateRNAOligos {
        export type RequestBody = Components.Schemas.RnaOligosBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateRNASequences {
        export type RequestBody = Components.Schemas.RnaSequencesBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateRequestTasks {
        namespace Parameters {
            export type RequestId = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        export type RequestBody = Components.Schemas.RequestTasksBulkCreateRequest;
        namespace Responses {
            export type $200 = Components.Schemas.RequestTasksBulkCreateResponse;
            export type $400 = Components.Schemas.BadRequestErrorBulk;
        }
    }
    namespace BulkCreateUsers {
        export type RequestBody = Components.Schemas.UserBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateWorkflowOutputs {
        export type RequestBody = Components.Schemas.WorkflowOutputsBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkCreateWorkflowTasks {
        export type RequestBody = Components.Schemas.WorkflowTasksBulkCreateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetAASequences {
        namespace Parameters {
            export type AaSequenceIds = string;
            /**
             * example:
             * aaSequences.id, aaSequences.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            aaSequenceIds: Parameters.AaSequenceIds;
            returning?: /**
             * example:
             * aaSequences.id, aaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AaSequencesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetAssayResults {
        namespace Parameters {
            export type AssayResultIds = string;
        }
        export interface QueryParameters {
            assayResultIds: Parameters.AssayResultIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultsBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetAssayRuns {
        namespace Parameters {
            export type AssayRunIds = string;
        }
        export interface QueryParameters {
            assayRunIds: Parameters.AssayRunIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayRunsBulkGet;
        }
    }
    namespace BulkGetBatches {
        namespace Parameters {
            export type BatchIds = string;
            export type BatchNames = string;
            export type RegistryId = string;
        }
        export interface QueryParameters {
            batchIds?: Parameters.BatchIds;
            batchNames?: Parameters.BatchNames;
            registryId?: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetBlobs {
        namespace Parameters {
            export type BlobIds = string;
            /**
             * example:
             * blobs.id,blobs.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            blobIds?: Parameters.BlobIds;
            returning?: /**
             * example:
             * blobs.id,blobs.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BlobsBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetBoxes {
        namespace Parameters {
            export type Barcodes = string;
            export type BoxIds = string;
        }
        export interface QueryParameters {
            boxIds?: Parameters.BoxIds;
            barcodes?: Parameters.Barcodes;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetContainers {
        namespace Parameters {
            /**
             * example:
             * W102477,W102478
             */
            export type Barcodes = string;
            export type ContainerIds = string;
            /**
             * example:
             * containers.id,containers.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            containerIds?: Parameters.ContainerIds;
            barcodes?: /**
             * example:
             * W102477,W102478
             */
            Parameters.Barcodes;
            returning?: /**
             * example:
             * containers.id,containers.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainersList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetCustomEntities {
        namespace Parameters {
            export type CustomEntityIds = string;
            /**
             * example:
             * customEntities.id,customEntities.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            customEntityIds: Parameters.CustomEntityIds;
            returning?: /**
             * example:
             * customEntities.id,customEntities.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.CustomEntitiesList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetDNASequences {
        namespace Parameters {
            export type DnaSequenceIds = string;
            /**
             * example:
             * dnaSequences.id,dnaSequences.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            dnaSequenceIds: Parameters.DnaSequenceIds;
            returning?: /**
             * example:
             * dnaSequences.id,dnaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaSequencesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetEntries {
        namespace Parameters {
            export type DisplayIds = string;
            export type EntryIds = string;
            /**
             * example:
             * entries.id, entries.name, entries.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            entryIds?: Parameters.EntryIds;
            displayIds?: Parameters.DisplayIds;
            returning?: /**
             * example:
             * entries.id, entries.name, entries.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Entries;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetLocations {
        namespace Parameters {
            export type Barcodes = string;
            export type LocationIds = string;
        }
        export interface QueryParameters {
            locationIds?: Parameters.LocationIds;
            barcodes?: Parameters.Barcodes;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LocationsBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace BulkGetOligos {
        namespace Parameters {
            export type OligoIds = string;
            /**
             * example:
             * oligos.id,oligos.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            oligoIds: Parameters.OligoIds;
            returning?: /**
             * example:
             * oligos.id,oligos.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.OligosBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetPlates {
        namespace Parameters {
            export type Barcodes = string;
            export type PlateIds = string;
            /**
             * example:
             * plates.id,plates.wells.*.webURL
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            plateIds?: Parameters.PlateIds;
            barcodes?: Parameters.Barcodes;
            returning?: /**
             * example:
             * plates.id,plates.wells.*.webURL
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PlatesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace BulkGetRNASequences {
        namespace Parameters {
            /**
             * example:
             * rnaSequences.id, rnaSequences.modifiedAt
             */
            export type Returning = string;
            export type RnaSequenceIds = string;
        }
        export interface QueryParameters {
            rnaSequenceIds: Parameters.RnaSequenceIds;
            returning?: /**
             * example:
             * rnaSequences.id, rnaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RnaSequencesBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkGetRegisteredEntities {
        namespace Parameters {
            export type EntityRegistryIds = string;
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export interface QueryParameters {
            entityRegistryIds: Parameters.EntityRegistryIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RegisteredEntitiesList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace BulkGetRequests {
        namespace Parameters {
            export type DisplayIds = string;
            export type RequestIds = string;
            /**
             * example:
             * requests.id,requests.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            requestIds?: Parameters.RequestIds;
            displayIds?: Parameters.DisplayIds;
            returning?: /**
             * example:
             * requests.id,requests.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestsBulkGet;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateAASequences {
        export type RequestBody = Components.Schemas.AaSequencesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateAppConfigurationItems {
        export type RequestBody = Components.Schemas.AppConfigItemsBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateContainers {
        export type RequestBody = Components.Schemas.ContainersBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateCustomEntities {
        export type RequestBody = Components.Schemas.CustomEntitiesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateDNAOligos {
        export type RequestBody = Components.Schemas.DnaOligosBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateDNASequences {
        export type RequestBody = Components.Schemas.DnaSequencesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateMixtures {
        export type RequestBody = Components.Schemas.MixturesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateMolecules {
        export type RequestBody = Components.Schemas.MoleculesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateRNAOligos {
        export type RequestBody = Components.Schemas.RnaOligosBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateRNASequences {
        export type RequestBody = Components.Schemas.RnaSequencesBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateRequestTasks {
        namespace Parameters {
            export type RequestId = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        export type RequestBody = /**
         * A request body for bulk updating request tasks.
         *
         */
        Components.Schemas.RequestTasksBulkUpdateRequest;
        namespace Responses {
            export type $200 = Components.Schemas.RequestTasksBulkUpdateResponse;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace BulkUpdateUsers {
        export type RequestBody = Components.Schemas.UserBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateWorkflowOutputs {
        export type RequestBody = Components.Schemas.WorkflowOutputsBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace BulkUpdateWorkflowTasks {
        export type RequestBody = Components.Schemas.WorkflowTasksBulkUpdateRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CheckinContainers {
        export type RequestBody = Components.Schemas.ContainersCheckin;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace CheckoutContainers {
        export type RequestBody = Components.Schemas.ContainersCheckout;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace CommitAssayResultsTransaction {
        namespace Parameters {
            export type TransactionId = string; // uuid
        }
        export interface PathParameters {
            transaction_id: Parameters.TransactionId /* uuid */;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultTransactionCreateResponse;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CompleteMultipartBlob {
        namespace Parameters {
            export type BlobId = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        export type RequestBody = Components.Schemas.BlobComplete;
        namespace Responses {
            export type $200 = Components.Schemas.Blob;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CopyWorkflowTask {
        namespace Parameters {
            /**
             * example:
             * wftask_OnnsW08k
             */
            export type WorkflowTaskId = string;
        }
        export interface PathParameters {
            workflow_task_id: /**
             * example:
             * wftask_OnnsW08k
             */
            Parameters.WorkflowTaskId;
        }
        namespace Responses {
            export type $201 = Components.Schemas.WorkflowTask;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace CreateAASequence {
        export type RequestBody = Components.Schemas.AaSequenceCreate;
        namespace Responses {
            export type $201 = Components.Schemas.AaSequence;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateAppCanvas {
        export type RequestBody = Components.Schemas.AppCanvasCreate;
        namespace Responses {
            export type $201 = Components.Schemas.AppCanvas;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
        }
    }
    namespace CreateAppConfigurationItem {
        export type RequestBody = Components.Schemas.AppConfigItemCreate;
        namespace Responses {
            export type $201 = Components.Schemas.AppConfigItem;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateAppSession {
        export type RequestBody = Components.Schemas.AppSessionCreate;
        namespace Responses {
            export type $201 = Components.Schemas.AppSession;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
        }
    }
    namespace CreateAssayResults {
        export type RequestBody = Components.Schemas.AssayResultsBulkCreateRequest;
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultsCreateResponse;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateAssayResultsInTransaction {
        namespace Parameters {
            export type TransactionId = string; // uuid
        }
        export interface PathParameters {
            transaction_id: Parameters.TransactionId /* uuid */;
        }
        export type RequestBody = Components.Schemas.AssayResultsBulkCreateRequest;
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultsCreateResponse;
        }
    }
    namespace CreateAssayResultsTransaction {
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultTransactionCreateResponse;
        }
    }
    namespace CreateAssayRuns {
        export type RequestBody = Components.Schemas.AssayRunsBulkCreateRequest;
        namespace Responses {
            export type $200 = Components.Schemas.AssayRunsBulkCreateResponse;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateAutomationOutputProcessor {
        export type RequestBody = Components.Schemas.AutomationOutputProcessorCreate;
        namespace Responses {
            export type $201 = Components.Schemas.AutomationOutputProcessor;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateBatch {
        export type RequestBody = Components.Schemas.BatchCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Batch;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateBenchlingApp {
        export type RequestBody = Components.Schemas.BenchlingAppCreate;
        namespace Responses {
            export type $201 = Components.Schemas.BenchlingApp;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $409 = Components.Schemas.ConflictError;
        }
    }
    namespace CreateBlob {
        export type RequestBody = Components.Schemas.BlobCreate;
        namespace Responses {
            export type $200 = Components.Schemas.Blob;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateBlobPart {
        namespace Parameters {
            export type BlobId = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        export type RequestBody = Components.Schemas.BlobPartCreate;
        namespace Responses {
            export type $200 = Components.Schemas.BlobPart;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateBox {
        export type RequestBody = Components.Schemas.BoxCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Box;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateConsensusNucleotideAlignment {
        export type RequestBody = Components.Schemas.NucleotideConsensusAlignmentCreate;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
        }
    }
    namespace CreateContainer {
        export type RequestBody = Components.Schemas.ContainerCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Container;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateCustomEntity {
        export type RequestBody = Components.Schemas.CustomEntityCreate;
        namespace Responses {
            export type $201 = Components.Schemas.CustomEntity;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateDNAOligo {
        export type RequestBody = Components.Schemas.DnaOligoCreate;
        namespace Responses {
            export type $201 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateDNASequence {
        export type RequestBody = Components.Schemas.DnaSequenceCreate;
        namespace Responses {
            export type $201 = Components.Schemas.DnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateDnaConsensusAlignment {
        export type RequestBody = Components.Schemas.DnaConsensusAlignmentCreate;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
        }
    }
    namespace CreateDnaTemplateAlignment {
        export type RequestBody = Components.Schemas.DnaTemplateAlignmentCreate;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
        }
    }
    namespace CreateDropdown {
        export type RequestBody = Components.Schemas.DropdownCreate;
        namespace Responses {
            export type $200 = /* Dropdowns are registry-wide enums. Use dropdowns to standardize on spelling and naming conventions, especially for important metadata like resistance markers. */ Components.Schemas.Dropdown;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateEntry {
        export type RequestBody = Components.Schemas.EntryCreate;
        namespace Responses {
            export type $201 = /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Components.Schemas.Entry;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateFeature {
        export type RequestBody = /* Inputs for a new feature */ Components.Schemas.FeatureCreate;
        namespace Responses {
            export type $201 = /* A feature from a feature library */ Components.Schemas.Feature;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateFeatureLibrary {
        export type RequestBody = /* Inputs for creating a feature library */ Components.Schemas.FeatureLibraryCreate;
        namespace Responses {
            export type $201 = /* A feature library */ Components.Schemas.FeatureLibrary;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateFolder {
        export type RequestBody = Components.Schemas.FolderCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Folder;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateLocation {
        export type RequestBody = Components.Schemas.LocationCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Location;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateMixture {
        export type RequestBody = Components.Schemas.MixtureCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Mixture;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateMolecule {
        export type RequestBody = Components.Schemas.MoleculeCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Molecule;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateMonomer {
        namespace Parameters {
            /**
             * example:
             * monomers.id,monomers.symbol
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * monomers.id,monomers.symbol
             */
            Parameters.Returning;
        }
        export type RequestBody = Components.Schemas.MonomerCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Monomer;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
        }
    }
    namespace CreateMultipartBlob {
        export type RequestBody = Components.Schemas.BlobMultipartCreate;
        namespace Responses {
            export type $200 = Components.Schemas.Blob;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateOligo {
        export type RequestBody = Components.Schemas.OligoCreate;
        namespace Responses {
            export type $201 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreatePlate {
        namespace Parameters {
            /**
             * example:
             * id,webURL
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,webURL
             */
            Parameters.Returning;
        }
        export type RequestBody = Components.Schemas.PlateCreate;
        namespace Responses {
            export type $201 = Components.Schemas.Plate;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateRNAOligo {
        export type RequestBody = Components.Schemas.RnaOligoCreate;
        namespace Responses {
            export type $201 = Components.Schemas.RnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateRNASequence {
        export type RequestBody = Components.Schemas.RnaSequenceCreate;
        namespace Responses {
            export type $201 = Components.Schemas.RnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
            export interface $503 {
            }
        }
    }
    namespace CreateRequest {
        export type RequestBody = /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Components.Schemas.RequestCreate;
        namespace Responses {
            export type $201 = /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Components.Schemas.Request;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateTemplateNucleotideAlignment {
        export type RequestBody = Components.Schemas.NucleotideTemplateAlignmentCreate;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
        }
    }
    namespace CreateUser {
        export type RequestBody = Components.Schemas.UserCreate;
        namespace Responses {
            export type $201 = /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur",
             *   "email": "lpasteur@benchling.com",
             *   "isSuspended": false
             * }
             */
            Components.Schemas.User;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateWarehouseCredentials {
        export type RequestBody = Components.Schemas.WarehouseCredentialsCreate;
        namespace Responses {
            export type $200 = Components.Schemas.WarehouseCredentials;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateWorkflowOutput {
        export type RequestBody = Components.Schemas.WorkflowOutputCreate;
        namespace Responses {
            export type $201 = Components.Schemas.WorkflowOutput;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateWorkflowTask {
        export type RequestBody = Components.Schemas.WorkflowTaskCreate;
        namespace Responses {
            export type $201 = Components.Schemas.WorkflowTask;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace CreateWorkflowTaskGroup {
        export type RequestBody = Components.Schemas.WorkflowTaskGroupCreate;
        namespace Responses {
            export type $201 = Components.Schemas.WorkflowTaskGroup;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace DeleteContainerContent {
        namespace Parameters {
            export type ContainableId = string;
            export type ContainerId = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
            containable_id: Parameters.ContainableId;
        }
        namespace Responses {
            export interface $204 {
            }
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace DeleteDNAAlignment {
        namespace Parameters {
            export type DnaAlignmentId = string;
        }
        export interface PathParameters {
            dna_alignment_id: Parameters.DnaAlignmentId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace DeleteNucleotideAlignment {
        namespace Parameters {
            export type AlignmentId = string;
        }
        export interface PathParameters {
            alignment_id: Parameters.AlignmentId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ExecuteRequestsSampleGroups {
        namespace Parameters {
            export type RequestId = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        export type RequestBody = /* Specification to update status of sample groups on the request which were executed. */ Components.Schemas.SampleGroupsStatusUpdate;
        namespace Responses {
            export type $200 = /**
             * The response is intentionally empty.
             *
             */
            Components.Schemas.ExecuteSampleGroups;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ExportItem {
        export type RequestBody = Components.Schemas.ExportItemRequest;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GenerateInputWithAutomationInputGenerator {
        namespace Parameters {
            export type InputGeneratorId = string;
        }
        export interface PathParameters {
            input_generator_id: Parameters.InputGeneratorId;
        }
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GenerateToken {
        export type RequestBody = Components.Schemas.TokenCreate;
        namespace Responses {
            export type $200 = Components.Schemas.TokenResponse;
            export type $400 = Components.Schemas.OAuthBadRequestError;
            export type $401 = Components.Schemas.OAuthUnauthorizedError;
        }
    }
    namespace GetAASequence {
        namespace Parameters {
            export type AaSequenceId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            aa_sequence_id: Parameters.AaSequenceId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetAppCanvas {
        namespace Parameters {
            export type CanvasId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            canvas_id: Parameters.CanvasId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AppCanvas;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetAppConfigurationItemById {
        namespace Parameters {
            export type ItemId = string;
        }
        export interface PathParameters {
            item_id: Parameters.ItemId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AppConfigItem;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetAppSessionById {
        namespace Parameters {
            export type Id = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            id: Parameters.Id;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AppSession;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetAssayResult {
        namespace Parameters {
            export type AssayResultId = string; // uuid
        }
        export interface PathParameters {
            assay_result_id: Parameters.AssayResultId /* uuid */;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResult;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetAssayRun {
        namespace Parameters {
            export type AssayRunId = string;
        }
        export interface PathParameters {
            assay_run_id: Parameters.AssayRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayRun;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetAutomationInputGenerator {
        namespace Parameters {
            export type InputGeneratorId = string;
        }
        export interface PathParameters {
            input_generator_id: Parameters.InputGeneratorId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AutomationInputGenerator;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetAutomationOutputProcessor {
        namespace Parameters {
            export type OutputProcessorId = string;
        }
        export interface PathParameters {
            output_processor_id: Parameters.OutputProcessorId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AutomationOutputProcessor;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetBatch {
        namespace Parameters {
            export type BatchId = string;
        }
        export interface PathParameters {
            batch_id: Parameters.BatchId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Batch;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetBatchSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetBenchlingAppByID {
        namespace Parameters {
            export type AppId = string;
        }
        export interface PathParameters {
            app_id: Parameters.AppId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BenchlingApp;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetBlob {
        namespace Parameters {
            export type BlobId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Blob;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetBlobFile {
        namespace Parameters {
            export type BlobId = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        namespace Responses {
            export interface $200 {
            }
            export interface $302 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetBlobUrl {
        namespace Parameters {
            export type BlobId = string;
        }
        export interface PathParameters {
            blob_id: Parameters.BlobId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BlobUrl;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetBox {
        namespace Parameters {
            export type BoxId = string;
        }
        export interface PathParameters {
            box_id: Parameters.BoxId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Box;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetBoxSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetContainer {
        namespace Parameters {
            export type ContainerId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Container;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetContainerContent {
        namespace Parameters {
            export type ContainableId = string;
            export type ContainerId = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
            containable_id: Parameters.ContainableId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainerContent;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetContainerSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainerSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetCustomEntity {
        namespace Parameters {
            export type CustomEntityId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            custom_entity_id: Parameters.CustomEntityId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.CustomEntity;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetDNAAlignment {
        namespace Parameters {
            export type DnaAlignmentId = string;
        }
        export interface PathParameters {
            dna_alignment_id: Parameters.DnaAlignmentId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaAlignment;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetDNAOligo {
        namespace Parameters {
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            export type OligoId = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export interface QueryParameters {
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetDNASequence {
        namespace Parameters {
            export type DnaSequenceId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            dna_sequence_id: Parameters.DnaSequenceId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetDropdown {
        namespace Parameters {
            export type DropdownId = string;
        }
        export interface PathParameters {
            dropdown_id: Parameters.DropdownId;
        }
        namespace Responses {
            export type $200 = /* Dropdowns are registry-wide enums. Use dropdowns to standardize on spelling and naming conventions, especially for important metadata like resistance markers. */ Components.Schemas.Dropdown;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetEnitityBatches {
        namespace Parameters {
            export type EntityId = string;
        }
        export interface PathParameters {
            entity_id: Parameters.EntityId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetEntitySchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = /* EntitySchema */ Components.Schemas.EntitySchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetEntry {
        namespace Parameters {
            export type EntryId = string;
            /**
             * example:
             * id, name, modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            entry_id: Parameters.EntryId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id, name, modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntryById;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetEntrySchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntrySchemaDetailed;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetEntryTemplate {
        namespace Parameters {
            export type EntryTemplateId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            entry_template_id: Parameters.EntryTemplateId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /**
             * Entry templates are templates that users can base new notebook entries off of.
             *
             */
            Components.Schemas.EntryTemplate;
        }
    }
    namespace GetExternalFileMetadata {
        namespace Parameters {
            export type EntryId = string;
            export type ExternalFileId = string;
        }
        export interface PathParameters {
            entry_id: Parameters.EntryId;
            external_file_id: Parameters.ExternalFileId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntryExternalFileById;
        }
    }
    namespace GetFeature {
        namespace Parameters {
            export type FeatureId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            feature_id: Parameters.FeatureId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /* A feature from a feature library */ Components.Schemas.Feature;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetFeatureLibrary {
        namespace Parameters {
            export type FeatureLibraryId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            feature_library_id: Parameters.FeatureLibraryId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /* A feature library */ Components.Schemas.FeatureLibrary;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetFolder {
        namespace Parameters {
            export type FolderId = string;
        }
        export interface PathParameters {
            folder_id: Parameters.FolderId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Folder;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetLabAutomationTransform {
        namespace Parameters {
            export type TransformId = string;
        }
        export interface PathParameters {
            transform_id: Parameters.TransformId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LabAutomationTransform;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetLocation {
        namespace Parameters {
            export type LocationId = string;
        }
        export interface PathParameters {
            location_id: Parameters.LocationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Location;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetLocationSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LocationSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetMixture {
        namespace Parameters {
            export type MixtureId = string;
        }
        export interface PathParameters {
            mixture_id: Parameters.MixtureId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Mixture;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetMolecule {
        namespace Parameters {
            export type MoleculeId = string;
        }
        export interface PathParameters {
            molecule_id: Parameters.MoleculeId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Molecule;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetNucleotideAlignment {
        namespace Parameters {
            export type AlignmentId = string;
        }
        export interface PathParameters {
            alignment_id: Parameters.AlignmentId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.NucleotideAlignment;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetOligo {
        namespace Parameters {
            export type OligoId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetOrganization {
        namespace Parameters {
            export type OrganizationId = string;
        }
        export interface PathParameters {
            organization_id: Parameters.OrganizationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Organization;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetPlate {
        namespace Parameters {
            export type PlateId = string;
            /**
             * example:
             * id,webURL
             */
            export type Returning = string;
        }
        export interface PathParameters {
            plate_id: Parameters.PlateId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,webURL
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Plate;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetPlateSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PlateSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetProject {
        namespace Parameters {
            export type ProjectId = string;
        }
        export interface PathParameters {
            project_id: Parameters.ProjectId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Project;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRNAOligo {
        namespace Parameters {
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            export type OligoId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetRNASequence {
        namespace Parameters {
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
            export type RnaSequenceId = string;
        }
        export interface PathParameters {
            rna_sequence_id: Parameters.RnaSequenceId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace GetRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.Registry;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRequest {
        namespace Parameters {
            export type RequestId = string;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Components.Schemas.Request;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRequestFulfillment {
        namespace Parameters {
            export type RequestFulfillmentId = string;
        }
        export interface PathParameters {
            request_fulfillment_id: Parameters.RequestFulfillmentId;
        }
        namespace Responses {
            export type $200 = /**
             * A request fulfillment represents work that is done which changes the status of a request or a sample group within that request.
             * Fulfillments are created when state changes between IN_PROGRESS, COMPLETED, or FAILED statuses. Fulfillments do not capture a PENDING state because all requests or request sample groups are considered PENDING until the first corresponding fulfillment is created.
             *
             */
            Components.Schemas.RequestFulfillment;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRequestResponse {
        namespace Parameters {
            export type RequestId = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestResponse;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRequestSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRequestTaskSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestTaskSchema;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetResultSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetRunSchema {
        namespace Parameters {
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayRunSchema;
            export interface $400 {
            }
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetTask {
        namespace Parameters {
            export type TaskId = string;
        }
        export interface PathParameters {
            task_id: Parameters.TaskId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AsyncTask | Components.Schemas.CreateTemplateAlignmentAsyncTask | Components.Schemas.CreateConsensusAlignmentAsyncTask | Components.Schemas.CreateNucleotideTemplateAlignmentAsyncTask | Components.Schemas.CreateNucleotideConsensusAlignmentAsyncTask | Components.Schemas.BulkCreateDnaSequencesAsyncTask | Components.Schemas.BulkUpdateDnaSequencesAsyncTask | Components.Schemas.BulkCreateRnaSequencesAsyncTask | Components.Schemas.BulkUpdateRnaSequencesAsyncTask | Components.Schemas.AutofillPartsAsyncTask | Components.Schemas.AutofillTranslationsAsyncTask | Components.Schemas.BulkRegisterEntitiesAsyncTask | Components.Schemas.BulkCreateDnaOligosAsyncTask | Components.Schemas.BulkUpdateDnaOligosAsyncTask | Components.Schemas.BulkCreateRnaOligosAsyncTask | Components.Schemas.BulkCreateAaSequencesAsyncTask | Components.Schemas.BulkCreateCustomEntitiesAsyncTask | Components.Schemas.BulkUpdateCustomEntitiesAsyncTask | Components.Schemas.BulkCreateContainersAsyncTask | Components.Schemas.BulkUpdateContainersAsyncTask | Components.Schemas.BulkUpdateAaSequencesAsyncTask | Components.Schemas.BulkUpdateRnaOligosAsyncTask | Components.Schemas.TransfersAsyncTask | Components.Schemas.AOPProcessOutputAsyncTask | Components.Schemas.AIGGenerateInputAsyncTask | Components.Schemas.ExportsAsyncTask | Components.Schemas.BulkCreateFeaturesAsyncTask | Components.Schemas.FindMatchingRegionsAsyncTask | Components.Schemas.FindMatchingRegionsDnaAsyncTask;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetTeam {
        namespace Parameters {
            export type TeamId = string;
        }
        export interface PathParameters {
            team_id: Parameters.TeamId;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "handle": "elion_team",
             *   "id": "team_5cjIguqc",
             *   "name": "Elion's Team",
             *   "organization": "Elion's Org"
             * }
             */
            Components.Schemas.Team;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetUser {
        namespace Parameters {
            export type UserId = string;
        }
        export interface PathParameters {
            user_id: Parameters.UserId;
        }
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur",
             *   "email": "lpasteur@benchling.com",
             *   "isSuspended": false
             * }
             */
            Components.Schemas.User;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetUserActivity {
        namespace Parameters {
            export type UserId = string;
        }
        export interface PathParameters {
            user_id: Parameters.UserId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.UserActivity;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetWorkflowOutput {
        namespace Parameters {
            /**
             * example:
             * wfout_5cJLQKVF
             */
            export type WorkflowOutputId = string;
        }
        export interface PathParameters {
            workflow_output_id: /**
             * example:
             * wfout_5cJLQKVF
             */
            Parameters.WorkflowOutputId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowOutput;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetWorkflowTask {
        namespace Parameters {
            /**
             * example:
             * wftask_OnnsW08k
             */
            export type WorkflowTaskId = string;
        }
        export interface PathParameters {
            workflow_task_id: /**
             * example:
             * wftask_OnnsW08k
             */
            Parameters.WorkflowTaskId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTask;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetWorkflowTaskGroup {
        namespace Parameters {
            /**
             * example:
             * prs_giVNQcTL
             */
            export type WorkflowTaskGroupId = string;
        }
        export interface PathParameters {
            workflow_task_group_id: /**
             * example:
             * prs_giVNQcTL
             */
            Parameters.WorkflowTaskGroupId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTaskGroup;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace GetWorkflowTaskSchema {
        namespace Parameters {
            /**
             * example:
             * prstsch_KnR9iVum
             */
            export type SchemaId = string;
        }
        export interface PathParameters {
            schema_id: /**
             * example:
             * prstsch_KnR9iVum
             */
            Parameters.SchemaId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTaskSchema;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListAASequences {
        namespace Parameters {
            export type AminoAcids = string;
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * prtn_6gxJGfPh,prtn_u7fOvqWg
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * aaSequences.id,aaSequences.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            aminoAcids?: Parameters.AminoAcids;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * prtn_6gxJGfPh,prtn_u7fOvqWg
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            returning?: /**
             * example:
             * aaSequences.id,aaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AaSequencesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListAppConfigurationItems {
        namespace Parameters {
            export type AppId = string;
            /**
             * example:
             * aci_VfVOART1,aci_RFhDGaaC
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and createdAt (created time, most recent first). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "createdAt" | "createdAt:asc" | "createdAt:desc" | "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc";
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
            appId?: Parameters.AppId;
            ids?: /**
             * example:
             * aci_VfVOART1,aci_RFhDGaaC
             */
            Parameters.Ids;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and createdAt (created time, most recent first). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AppConfigurationPaginatedList;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListAssayResultSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListAssayResults {
        namespace Parameters {
            export type ArchiveReason = string;
            export type AssayRunIds = string;
            export type AutomationOutputProcessorId = string;
            export type CreatedAtGt = string;
            export type CreatedAtGte = string;
            export type CreatedAtLt = string;
            export type CreatedAtLte = string;
            export type EntityIds = string;
            export type Ids = string; // uuid
            export type MaxCreatedTime = number;
            export type MinCreatedTime = number;
            export type ModifiedAtGt = string;
            export type ModifiedAtGte = string;
            export type ModifiedAtLt = string;
            export type ModifiedAtLte = string;
            export type NextToken = string;
            export type PageSize = number;
            export type SchemaId = string;
            export type Sort = "createdAt:asc" | "createdAt:desc" | "modifiedAt:asc" | "modifiedAt:desc";
            export type StorageIds = string;
        }
        export interface QueryParameters {
            schemaId?: Parameters.SchemaId;
            "createdAt.lt"?: Parameters.CreatedAtLt;
            "createdAt.gt"?: Parameters.CreatedAtGt;
            "createdAt.lte"?: Parameters.CreatedAtLte;
            "createdAt.gte"?: Parameters.CreatedAtGte;
            minCreatedTime?: Parameters.MinCreatedTime;
            maxCreatedTime?: Parameters.MaxCreatedTime;
            sort?: Parameters.Sort;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            entityIds?: Parameters.EntityIds;
            storageIds?: Parameters.StorageIds;
            assayRunIds?: Parameters.AssayRunIds;
            automationOutputProcessorId?: Parameters.AutomationOutputProcessorId;
            ids?: Parameters.Ids /* uuid */;
            "modifiedAt.lt"?: Parameters.ModifiedAtLt;
            "modifiedAt.gt"?: Parameters.ModifiedAtGt;
            "modifiedAt.lte"?: Parameters.ModifiedAtLte;
            "modifiedAt.gte"?: Parameters.ModifiedAtGte;
            archiveReason?: Parameters.ArchiveReason;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultsPaginatedList;
        }
    }
    namespace ListAssayRunSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayRunSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListAssayRuns {
        namespace Parameters {
            export type Ids = string; // uuid
            export type MaxCreatedTime = number;
            export type MinCreatedTime = number;
            export type NextToken = string;
            export type PageSize = number;
            export type SchemaId = string;
        }
        export interface QueryParameters {
            schemaId: Parameters.SchemaId;
            minCreatedTime?: Parameters.MinCreatedTime;
            maxCreatedTime?: Parameters.MaxCreatedTime;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            ids?: Parameters.Ids /* uuid */;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AssayRunsPaginatedList;
        }
    }
    namespace ListAutomationInputGenerators {
        namespace Parameters {
            export type AssayRunId = string;
            export type ModifiedAt = string;
            export type NextToken = string;
        }
        export interface PathParameters {
            assay_run_id: Parameters.AssayRunId;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.AutomationFileInputsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListAutomationOutputProcessors {
        namespace Parameters {
            export type ArchiveReason = string;
            export type AssayRunId = string;
            export type AutomationFileConfigName = string;
            export type ModifiedAt = string;
            export type NextToken = string;
        }
        export interface QueryParameters {
            assayRunId?: Parameters.AssayRunId;
            automationFileConfigName?: Parameters.AutomationFileConfigName;
            archiveReason?: Parameters.ArchiveReason;
            modifiedAt?: Parameters.ModifiedAt;
            nextToken?: Parameters.NextToken;
        }
        namespace Responses {
            export type $200 = /* A paginated list of automation output processors which have an attached file. */ Components.Schemas.AutomationOutputProcessorsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListAutomationOutputProcessorsDeprecated {
        namespace Parameters {
            export type AssayRunId = string;
            export type NextToken = string;
        }
        export interface PathParameters {
            assay_run_id: Parameters.AssayRunId;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
        }
        namespace Responses {
            export type $200 = /* Deprecated - A paginated list of automation output processors */ Components.Schemas.DeprecatedAutomationOutputProcessorsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBatchSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBatchSchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchSchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBatches {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * bat_VfVOART1,bat_RFhDGaaC
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            ids?: /**
             * example:
             * bat_VfVOART1,bat_RFhDGaaC
             */
            Parameters.Ids;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BatchesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBenchlingApps {
        namespace Parameters {
            export type AdminOf = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * app_J39na03L1nsLS34o,app_ae92kBv9aNSl593z,app_e59sjL23Pqn30xHg
             */
            export type Ids = string;
            export type MemberOf = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1, MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type Sort = "modifiedAt" | "name" | "modifiedAt:asc" | "name:asc" | "modifiedAt:desc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: Parameters.Sort;
            ids?: /**
             * example:
             * app_J39na03L1nsLS34o,app_ae92kBv9aNSl593z,app_e59sjL23Pqn30xHg
             */
            Parameters.Ids;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            "names.anyOf"?: /**
             * example:
             * MyName1, MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            memberOf?: Parameters.MemberOf;
            adminOf?: Parameters.AdminOf;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BenchlingAppsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
        }
    }
    namespace ListBoxContents {
        namespace Parameters {
            export type BoxId = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * id,modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            box_id: Parameters.BoxId;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            returning?: /**
             * example:
             * id,modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxContentsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListBoxSchemas {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBoxSchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxSchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListBoxes {
        namespace Parameters {
            export type AncestorStorageId = string;
            export type ArchiveReason = string;
            /**
             * example:
             * 10x10-BOX105,10x10-BOX115
             */
            export type Barcodes = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            export type EmptyContainers = number;
            export type EmptyContainersGt = number;
            export type EmptyContainersGte = number;
            export type EmptyContainersLt = number;
            export type EmptyContainersLte = number;
            export type EmptyPositions = number;
            export type EmptyPositionsGt = number;
            export type EmptyPositionsGte = number;
            export type EmptyPositionsLt = number;
            export type EmptyPositionsLte = number;
            /**
             * example:
             * box_Jx8Zsphf,box_s9Zv7Jto,box_mFDuLwA6
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc" | "createdAt:asc" | "createdAt:desc";
            export type StorageContentsId = string;
            export type StorageContentsIds = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            emptyPositions?: Parameters.EmptyPositions;
            "emptyPositions.gte"?: Parameters.EmptyPositionsGte;
            "emptyPositions.gt"?: Parameters.EmptyPositionsGt;
            "emptyPositions.lte"?: Parameters.EmptyPositionsLte;
            "emptyPositions.lt"?: Parameters.EmptyPositionsLt;
            emptyContainers?: Parameters.EmptyContainers;
            "emptyContainers.gte"?: Parameters.EmptyContainersGte;
            "emptyContainers.gt"?: Parameters.EmptyContainersGt;
            "emptyContainers.lte"?: Parameters.EmptyContainersLte;
            "emptyContainers.lt"?: Parameters.EmptyContainersLt;
            ancestorStorageId?: Parameters.AncestorStorageId;
            storageContentsId?: Parameters.StorageContentsId;
            storageContentsIds?: Parameters.StorageContentsIds;
            archiveReason?: Parameters.ArchiveReason;
            ids?: /**
             * example:
             * box_Jx8Zsphf,box_s9Zv7Jto,box_mFDuLwA6
             */
            Parameters.Ids;
            barcodes?: /**
             * example:
             * 10x10-BOX105,10x10-BOX115
             */
            Parameters.Barcodes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.BoxesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListContainerContents {
        namespace Parameters {
            export type ContainerId = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainerContentsList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListContainerSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainerSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListContainerSchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainerSchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListContainers {
        namespace Parameters {
            export type AncestorStorageId = string;
            export type ArchiveReason = string;
            /**
             * example:
             * W103371,W103343,W103366
             */
            export type Barcodes = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type CheckoutAssigneeIdsAnyOf = string;
            export type CheckoutStatus = "AVAILABLE" | "RESERVED" | "CHECKED_OUT";
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * con_Q6uhNZvw,con_OwmERWGE,con_nzuDFhNvz
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type RestrictedSamplePartyIdsAllOf = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type RestrictedSamplePartyIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type RestrictedSamplePartyIdsNoneOf = string;
            export type RestrictionStatus = Components.Schemas.SampleRestrictionStatus;
            /**
             * example:
             * containers.id,containers.modifiedAt
             */
            export type Returning = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type SampleOwnerIdsAllOf = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type SampleOwnerIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            export type SampleOwnerIdsNoneOf = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            export type Sort = "barcode" | "modifiedAt" | "name" | "barcode:asc" | "modifiedAt:asc" | "name:asc" | "barcode:desc" | "modifiedAt:desc" | "name:desc" | "createdAt:asc" | "createdAt:desc";
            export type StorageContentsId = string;
            export type StorageContentsIds = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: Parameters.Sort;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ancestorStorageId?: Parameters.AncestorStorageId;
            storageContentsId?: Parameters.StorageContentsId;
            storageContentsIds?: Parameters.StorageContentsIds;
            archiveReason?: Parameters.ArchiveReason;
            checkoutStatus?: Parameters.CheckoutStatus;
            "checkoutAssigneeIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.CheckoutAssigneeIdsAnyOf;
            restrictionStatus?: Parameters.RestrictionStatus;
            "sampleOwnerIds.allOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.SampleOwnerIdsAllOf;
            "sampleOwnerIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.SampleOwnerIdsAnyOf;
            "sampleOwnerIds.noneOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.SampleOwnerIdsNoneOf;
            "restrictedSamplePartyIds.allOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.RestrictedSamplePartyIdsAllOf;
            "restrictedSamplePartyIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.RestrictedSamplePartyIdsAnyOf;
            "restrictedSamplePartyIds.noneOf"?: /**
             * example:
             * ent_a0SApq3z,team_Il92ydiY
             */
            Parameters.RestrictedSamplePartyIdsNoneOf;
            ids?: /**
             * example:
             * con_Q6uhNZvw,con_OwmERWGE,con_nzuDFhNvz
             */
            Parameters.Ids;
            barcodes?: /**
             * example:
             * W103371,W103343,W103366
             */
            Parameters.Barcodes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            returning?: /**
             * example:
             * containers.id,containers.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ContainersPaginatedList;
            export interface $400 {
                error?: {
                    message?: string;
                    type?: "invalid_request_error";
                    userMessage?: string;
                };
                invalidIds?: string[];
            }
        }
    }
    namespace ListCustomEntities {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * customEntities.id,customEntities.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            sort?: /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            returning?: /**
             * example:
             * customEntities.id,customEntities.modifiedAt
             */
            Parameters.Returning;
            nameIncludes?: Parameters.NameIncludes;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            Parameters.Ids;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
        }
        namespace Responses {
            export type $200 = Components.Schemas.CustomEntitiesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListCustomNotations {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
        }
        namespace Responses {
            export type $200 = Components.Schemas.CustomNotationsPaginatedList;
        }
    }
    namespace ListDNAAlignments {
        namespace Parameters {
            /**
             * example:
             * seqanl_VfVOART1,seqanl_RFhDGaaC
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            export type SequenceIds = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ids?: /**
             * example:
             * seqanl_VfVOART1,seqanl_RFhDGaaC
             */
            Parameters.Ids;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            sequenceIds?: /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            Parameters.SequenceIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaAlignmentsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListDNAOligos {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            export type Bases = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * dnaOligos.id,dnaOligos.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            bases?: Parameters.Bases;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            returning?: /**
             * example:
             * dnaOligos.id,dnaOligos.modifiedAt
             */
            Parameters.Returning;
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaOligosPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListDNASequences {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            export type Bases = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * dnaSequences.id, dnaSequences.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            bases?: Parameters.Bases;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            returning?: /**
             * example:
             * dnaSequences.id, dnaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DnaSequencesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListDropdowns {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DropdownSummariesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListDropdownsByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DropdownsRegistryList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEntitySchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntitySchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEntitySchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.DeprecatedEntitySchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEntries {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_SdUvia1v
             */
            export type AssignedReviewerIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * VPR001,VPR002
             */
            export type DisplayIds = string;
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            /**
             * example:
             * entries.id, entries.name, entries.modifiedAt
             */
            export type Returning = string;
            export type ReviewStatus = "IN_PROGRESS" | "ACCEPTED" | "REJECTED" | "NEEDS_REVIEW" | "RETRACTED";
            export type SchemaId = string;
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            projectId?: Parameters.ProjectId;
            archiveReason?: Parameters.ArchiveReason;
            reviewStatus?: Parameters.ReviewStatus;
            mentionedIn?: Parameters.MentionedIn;
            mentions?: Parameters.Mentions;
            ids?: Parameters.Ids;
            schemaId?: Parameters.SchemaId;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            "assignedReviewerIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_SdUvia1v
             */
            Parameters.AssignedReviewerIdsAnyOf;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            displayIds?: /**
             * example:
             * VPR001,VPR002
             */
            Parameters.DisplayIds;
            returning?: /**
             * example:
             * entries.id, entries.name, entries.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntriesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEntrySchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntrySchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEntryTemplates {
        namespace Parameters {
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * entryTemplates.id,entryTemplates.modifiedAt
             */
            export type Returning = string;
            export type SchemaId = string;
            /**
             * example:
             * tmplcol_jC7rOniv
             */
            export type TemplateCollectionId = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            templateCollectionId?: /**
             * example:
             * tmplcol_jC7rOniv
             */
            Parameters.TemplateCollectionId;
            ids?: Parameters.Ids;
            schemaId?: Parameters.SchemaId;
            returning?: /**
             * example:
             * entryTemplates.id,entryTemplates.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EntryTemplatesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListEvents {
        namespace Parameters {
            export type CreatedAtGte = string;
            export type EventTypes = string;
            export type NextToken = string;
            export type PageSize = number;
            export type Poll = boolean;
            export type StartingAfter = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            "createdAt.gte"?: Parameters.CreatedAtGte;
            startingAfter?: Parameters.StartingAfter;
            eventTypes?: Parameters.EventTypes;
            poll?: Parameters.Poll;
        }
        namespace Responses {
            export type $200 = Components.Schemas.EventsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListFeatureLibraries {
        namespace Parameters {
            /**
             * example:
             * featlib_VfVOART1,featlib_RFhDGaaC
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * featureLibraries.id,featureLibraries.modifiedAt
             */
            export type Returning = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ids?: /**
             * example:
             * featlib_VfVOART1,featlib_RFhDGaaC
             */
            Parameters.Ids;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            returning?: /**
             * example:
             * featureLibraries.id,featureLibraries.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /* A paginated list of feature libraries */ Components.Schemas.FeatureLibrariesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListFeatures {
        namespace Parameters {
            /**
             * example:
             * featlib_D0v2x9Q7
             */
            export type FeatureLibraryId = string;
            /**
             * example:
             * terminator
             */
            export type FeatureType = string;
            /**
             * example:
             * feat_VfVOART1,feat_RFhDGaaC
             */
            export type Ids = string;
            /**
             * example:
             * nucleotide
             */
            export type MatchType = "nucleotide" | "protein";
            export type Name = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * features.id,features.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            name?: Parameters.Name;
            ids?: /**
             * example:
             * feat_VfVOART1,feat_RFhDGaaC
             */
            Parameters.Ids;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            featureLibraryId?: /**
             * example:
             * featlib_D0v2x9Q7
             */
            Parameters.FeatureLibraryId;
            featureType?: /**
             * example:
             * terminator
             */
            Parameters.FeatureType;
            matchType?: /**
             * example:
             * nucleotide
             */
            Parameters.MatchType;
            returning?: /**
             * example:
             * features.id,features.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = /* A paginated list of features */ Components.Schemas.FeaturesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListFolders {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * lib_qQFY3WQH,lib_QvXryHdi,lib_3eF8mZjn
             */
            export type Ids = string;
            export type Name = string;
            export type NameIncludes = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ParentFolderId = string;
            export type ProjectId = string;
            /**
             * example:
             * INVENTORY
             */
            export type Section = "INVENTORY" | "NOTEBOOK";
            export type Sort = "modifiedAt" | "name" | "modifiedAt:asc" | "name:asc" | "modifiedAt:desc" | "name:desc";
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            sort?: Parameters.Sort;
            archiveReason?: Parameters.ArchiveReason;
            nameIncludes?: Parameters.NameIncludes;
            parentFolderId?: Parameters.ParentFolderId;
            projectId?: Parameters.ProjectId;
            ids?: /**
             * example:
             * lib_qQFY3WQH,lib_QvXryHdi,lib_3eF8mZjn
             */
            Parameters.Ids;
            name?: Parameters.Name;
            section?: /**
             * example:
             * INVENTORY
             */
            Parameters.Section;
        }
        namespace Responses {
            export type $200 = Components.Schemas.FoldersPaginatedList;
        }
    }
    namespace ListLabelTemplates {
        namespace Parameters {
            export type Name = string;
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export interface QueryParameters {
            name?: Parameters.Name;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LabelTemplatesList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListLegacyWorkflowStageRunInputSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowSampleList;
        }
    }
    namespace ListLegacyWorkflowStageRunOutputSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowSampleList;
        }
    }
    namespace ListLegacyWorkflowStageRunRegisteredSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowSampleList;
        }
    }
    namespace ListLegacyWorkflowStageRuns {
        namespace Parameters {
            export type StageId = string;
        }
        export interface PathParameters {
            stage_id: Parameters.StageId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowStageRunList;
        }
    }
    namespace ListLegacyWorkflowStages {
        namespace Parameters {
            export type LegacyWorkflowId = string;
        }
        export interface PathParameters {
            legacy_workflow_id: Parameters.LegacyWorkflowId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowStageList;
        }
    }
    namespace ListLegacyWorkflows {
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflowList;
        }
    }
    namespace ListLocationSchemas {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LocationSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListLocationSchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LocationSchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListLocations {
        namespace Parameters {
            export type AncestorStorageId = string;
            export type ArchiveReason = string;
            /**
             * example:
             * b001, b002, f001
             */
            export type Barcodes = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * loc_9fxPzGDy,loc_fALwBTI7,loc_GyxUeUIi
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            export type Sort = "barcode" | "modifiedAt" | "name" | "barcode:asc" | "modifiedAt:asc" | "name:asc" | "barcode:desc" | "modifiedAt:desc" | "name:desc" | "createdAt:asc" | "createdAt:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: Parameters.Sort;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ancestorStorageId?: Parameters.AncestorStorageId;
            archiveReason?: Parameters.ArchiveReason;
            ids?: /**
             * example:
             * loc_9fxPzGDy,loc_fALwBTI7,loc_GyxUeUIi
             */
            Parameters.Ids;
            barcodes?: /**
             * example:
             * b001, b002, f001
             */
            Parameters.Barcodes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.LocationsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListMixtures {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            export type Ids = string;
            /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            export type IngredientComponentEntityIds = string;
            /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            export type IngredientComponentEntityIdsAnyOf = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            sort?: /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            Parameters.Ids;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            ingredientComponentEntityIds?: /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            Parameters.IngredientComponentEntityIds;
            "ingredientComponentEntityIds.anyOf"?: /**
             * example:
             * bfi_blhxTUl1,bfi_y5bkDmJp,bfi_xwfILBog
             */
            Parameters.IngredientComponentEntityIdsAnyOf;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
        }
        namespace Responses {
            export type $200 = Components.Schemas.MixturesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListMolecules {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            /**
             * example:
             * Format described at https://en.wikipedia.org/wiki/Chemical_table_file#Molfile As an example, ethanol is represented as follows: ChEBI
             *   Marvin  10060515352D
             *
             *   3  2  0  0  0  0            999 V2000
             *     4.8667   -3.3230    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
             *     5.5812   -2.9105    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
             *     6.2956   -3.3230    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
             *   1  2  1  0  0  0  0
             *   2  3  1  0  0  0  0
             * M  END
             *
             */
            export type ChemicalSubstructureMol = string;
            /**
             * example:
             * CCO,C(C1C(C(C(C(O1)O)O)O)O)O
             */
            export type ChemicalSubstructureSmiles = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * mol_yWs5X7lv,mol_RhYGVnHF
             */
            export type Ids = string;
            export type MentionedIn = string[];
            export type Mentions = string[];
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * mol_yWs5X7lv,mol_RhYGVnHF
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            "chemicalSubstructure.mol"?: /**
             * example:
             * Format described at https://en.wikipedia.org/wiki/Chemical_table_file#Molfile As an example, ethanol is represented as follows: ChEBI
             *   Marvin  10060515352D
             *
             *   3  2  0  0  0  0            999 V2000
             *     4.8667   -3.3230    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
             *     5.5812   -2.9105    0.0000 C   0  0  0  0  0  0  0  0  0  0  0  0
             *     6.2956   -3.3230    0.0000 O   0  0  0  0  0  0  0  0  0  0  0  0
             *   1  2  1  0  0  0  0
             *   2  3  1  0  0  0  0
             * M  END
             *
             */
            Parameters.ChemicalSubstructureMol;
            "chemicalSubstructure.smiles"?: /**
             * example:
             * CCO,C(C1C(C(C(C(O1)O)O)O)O)O
             */
            Parameters.ChemicalSubstructureSmiles;
        }
        namespace Responses {
            export type $200 = Components.Schemas.MoleculesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListMonomers {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * monomers.id,monomers.modifiedAt
             */
            export type Returning = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            returning?: /**
             * example:
             * monomers.id,monomers.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.MonomersPaginatedList;
        }
    }
    namespace ListNucleotideAlignments {
        namespace Parameters {
            /**
             * example:
             * seqanl_VfVOART1,seqanl_RFhDGaaC
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            export type SequenceIds = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ids?: /**
             * example:
             * seqanl_VfVOART1,seqanl_RFhDGaaC
             */
            Parameters.Ids;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            sequenceIds?: /**
             * example:
             * seq_VfVOART1,seq_RFhDGaaC
             */
            Parameters.SequenceIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.NucleotideAlignmentsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListOligos {
        namespace Parameters {
            export type ArchiveReason = string;
            export type Bases = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * oligos.id,oligos.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            bases?: Parameters.Bases;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            returning?: /**
             * example:
             * oligos.id,oligos.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.OligosPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListOrganizations {
        namespace Parameters {
            export type HasAdmins = string;
            export type HasMembers = string;
            /**
             * example:
             * ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (organization name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn
             */
            Parameters.Ids;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            modifiedAt?: Parameters.ModifiedAt;
            hasMembers?: Parameters.HasMembers;
            hasAdmins?: Parameters.HasAdmins;
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (organization name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
        }
        namespace Responses {
            export type $200 = Components.Schemas.OrganizationsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListPlateSchemas {
        namespace Parameters {
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PlateSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListPlateSchemasByRegistry {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PlateSchemasList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListPlates {
        namespace Parameters {
            export type AncestorStorageId = string;
            export type ArchiveReason = string;
            /**
             * example:
             * W102477,W102478
             */
            export type Barcodes = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * plt_xd4hj4eB,plt_xd4hj4C
             */
            export type Ids = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * plates.id,plates.wells.*.webURL
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "barcode" | "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc" | "createdAt:asc" | "createdAt:desc";
            export type StorageContentsId = string;
            export type StorageContentsIds = string;
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            ancestorStorageId?: Parameters.AncestorStorageId;
            storageContentsId?: Parameters.StorageContentsId;
            storageContentsIds?: Parameters.StorageContentsIds;
            archiveReason?: Parameters.ArchiveReason;
            ids?: /**
             * example:
             * plt_xd4hj4eB,plt_xd4hj4C
             */
            Parameters.Ids;
            barcodes?: /**
             * example:
             * W102477,W102478
             */
            Parameters.Barcodes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            returning?: /**
             * example:
             * plates.id,plates.wells.*.webURL
             */
            Parameters.Returning;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PlatesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListPrinters {
        namespace Parameters {
            export type Name = string;
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export interface QueryParameters {
            name?: Parameters.Name;
        }
        namespace Responses {
            export type $200 = Components.Schemas.PrintersList;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListProjects {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * src_ZJy8RTbo,src_8GVbVkPj,src_qREJ33rn
             */
            export type Ids = string;
            export type Name = string;
            export type NextToken = string;
            export type PageSize = number;
            export type Sort = "modifiedAt" | "name" | "modifiedAt:asc" | "name:asc" | "modifiedAt:desc" | "name:desc";
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            sort?: Parameters.Sort;
            archiveReason?: Parameters.ArchiveReason;
            ids?: /**
             * example:
             * src_ZJy8RTbo,src_8GVbVkPj,src_qREJ33rn
             */
            Parameters.Ids;
            name?: Parameters.Name;
        }
        namespace Responses {
            export type $200 = Components.Schemas.ProjectsPaginatedList;
        }
    }
    namespace ListRNAOligos {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            export type Bases = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * rnaOligos.id,rnaOligos.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            bases?: Parameters.Bases;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * seq_yWs5X7lv,seq_RhYGVnHF
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            returning?: /**
             * example:
             * rnaOligos.id,rnaOligos.modifiedAt
             */
            Parameters.Returning;
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RnaOligosPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListRNASequences {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            export type AuthorIdsAnyOf = string;
            export type Bases = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * sntx_lRe007yZ
             */
            export type CustomNotationId = string;
            /**
             * example:
             * TP001,TP002
             */
            export type EntityRegistryIdsAnyOf = string;
            export type FolderId = string;
            /**
             * example:
             * seq_VzVOART1,seq_RahDGaaC
             */
            export type Ids = string;
            export type MentionedIn = string;
            export type Mentions = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type ProjectId = string;
            export type RegistryId = string | null;
            /**
             * example:
             * rnaSequences.id, rnaSequences.modifiedAt
             */
            export type Returning = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            export type SchemaId = string;
            /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Method by which to order search results. Valid sorts are modifiedAt (modified time, most recent first) and name (entity name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
            modifiedAt?: Parameters.ModifiedAt;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            bases?: Parameters.Bases;
            folderId?: Parameters.FolderId;
            mentionedIn?: Parameters.MentionedIn;
            projectId?: Parameters.ProjectId;
            registryId?: Parameters.RegistryId;
            schemaId?: Parameters.SchemaId;
            schemaFields?: Parameters.SchemaFields;
            archiveReason?: Parameters.ArchiveReason;
            mentions?: Parameters.Mentions;
            ids?: /**
             * example:
             * seq_VzVOART1,seq_RahDGaaC
             */
            Parameters.Ids;
            "entityRegistryIds.anyOf"?: /**
             * example:
             * TP001,TP002
             */
            Parameters.EntityRegistryIdsAnyOf;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            "authorIds.anyOf"?: /**
             * example:
             * ent_a0SApq3z,ent_b4AApz9b
             */
            Parameters.AuthorIdsAnyOf;
            customNotationId?: /**
             * example:
             * sntx_lRe007yZ
             */
            Parameters.CustomNotationId;
            returning?: /**
             * example:
             * rnaSequences.id, rnaSequences.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RnaSequencesPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListRegistries {
        namespace Parameters {
            export type ModifiedAt = string;
            export type Name = string;
        }
        export interface QueryParameters {
            name?: Parameters.Name;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RegistriesList;
        }
    }
    namespace ListRequestFulfillments {
        namespace Parameters {
            export type EntryId = string;
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            entryId: Parameters.EntryId;
            modifiedAt?: Parameters.ModifiedAt;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
        }
        namespace Responses {
            export type $200 = /* An object containing an array of RequestFulfillments */ Components.Schemas.RequestFulfillmentsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListRequestSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListRequestTaskSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestTaskSchemasPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListRequests {
        namespace Parameters {
            export type MaxCreatedTime = number;
            export type MinCreatedTime = number;
            export type NextToken = string;
            export type PageSize = number;
            export type RequestStatus = Components.Schemas.RequestStatus;
            /**
             * example:
             * requests.id,requests.modifiedAt
             */
            export type Returning = string;
            export type SchemaId = string;
        }
        export interface QueryParameters {
            schemaId: Parameters.SchemaId;
            requestStatus?: Parameters.RequestStatus;
            minCreatedTime?: Parameters.MinCreatedTime;
            maxCreatedTime?: Parameters.MaxCreatedTime;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            returning?: /**
             * example:
             * requests.id,requests.modifiedAt
             */
            Parameters.Returning;
        }
        namespace Responses {
            export type $200 = Components.Schemas.RequestsPaginatedList;
        }
    }
    namespace ListStageRunInputSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowSampleList;
        }
    }
    namespace ListStageRunOutputSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowSampleList;
        }
    }
    namespace ListStageRunRegisteredSamples {
        namespace Parameters {
            export type StageRunId = string;
        }
        export interface PathParameters {
            stage_run_id: Parameters.StageRunId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowSampleList;
        }
    }
    namespace ListTeams {
        namespace Parameters {
            export type HasAdmins = string;
            export type HasMembers = string;
            /**
             * example:
             * team_ZJy8RTbo,team_8GVbVkPj,team_qREJ33rn
             */
            export type Ids = string;
            /**
             * example:
             * etr_1X1AlQPD, etr_tv7m7B78
             */
            export type MentionedIn = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type OrganizationId = string;
            export type PageSize = number;
            /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (team name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * team_ZJy8RTbo,team_8GVbVkPj,team_qREJ33rn
             */
            Parameters.Ids;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            modifiedAt?: Parameters.ModifiedAt;
            mentionedIn?: /**
             * example:
             * etr_1X1AlQPD, etr_tv7m7B78
             */
            Parameters.MentionedIn;
            organizationId?: Parameters.OrganizationId;
            hasMembers?: Parameters.HasMembers;
            hasAdmins?: Parameters.HasAdmins;
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (team name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
        }
        namespace Responses {
            export type $200 = Components.Schemas.TeamsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListUsers {
        namespace Parameters {
            export type AdminOf = string;
            export type EmailAnyOf = string;
            export type Handles = string;
            /**
             * example:
             * ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn
             */
            export type Ids = string;
            export type MemberOf = string;
            export type ModifiedAt = string;
            export type Name = string;
            export type NameIncludes = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOf = string;
            /**
             * example:
             * MyName1,MyName2
             */
            export type NamesAnyOfCaseSensitive = string;
            export type NextToken = string;
            export type PageSize = number;
            export type PasswordLastChangedAt = string;
            /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (user name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            export type Sort = "modifiedAt" | "modifiedAt:asc" | "modifiedAt:desc" | "name" | "name:asc" | "name:desc";
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * ent_ZJy8RTbo,ent_8GVbVkPj,ent_qREJ33rn
             */
            Parameters.Ids;
            name?: Parameters.Name;
            nameIncludes?: Parameters.NameIncludes;
            "names.anyOf"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOf;
            "names.anyOf.caseSensitive"?: /**
             * example:
             * MyName1,MyName2
             */
            Parameters.NamesAnyOfCaseSensitive;
            modifiedAt?: Parameters.ModifiedAt;
            memberOf?: Parameters.MemberOf;
            adminOf?: Parameters.AdminOf;
            handles?: Parameters.Handles;
            "email.anyOf"?: Parameters.EmailAnyOf;
            passwordLastChangedAt?: Parameters.PasswordLastChangedAt;
            pageSize?: Parameters.PageSize;
            nextToken?: Parameters.NextToken;
            sort?: /**
             * Sets the sort-order of the response. Valid sorts are modifiedAt (modified time, most recent first) and name (user name, alphabetical). Optionally add :asc or :desc to specify ascending or descending order.
             *
             */
            Parameters.Sort;
        }
        namespace Responses {
            export type $200 = Components.Schemas.UsersPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListWorkflowOutputs {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * etr_d00c97,etr_30ad79
             */
            export type CreationOriginIds = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * ANG1-O1,ANG1-O2
             */
            export type DisplayIds = string;
            /**
             * example:
             * wfout_5cJLQKVF,wfout_9jENXd3t
             */
            export type Ids = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsAllOf = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsAnyOf = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsNoneOf = string;
            export type ModifiedAt = string;
            /**
             * example:
             * PR-1
             */
            export type Name = string;
            /**
             * example:
             * PR
             */
            export type NameIncludes = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            export type ResponsibleTeamIds = string;
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            /**
             * example:
             * prstsch_KnR9iVum
             */
            export type SchemaId = string;
            /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            export type WatcherIds = string;
            /**
             * example:
             * prs_giVNQcTL,prst6m99v1
             */
            export type WorkflowTaskGroupIds = string;
            /**
             * example:
             * wftask_OnnsW08k,wftask_4ejSW7en
             */
            export type WorkflowTaskIds = string;
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * wfout_5cJLQKVF,wfout_9jENXd3t
             */
            Parameters.Ids;
            workflowTaskGroupIds?: /**
             * example:
             * prs_giVNQcTL,prst6m99v1
             */
            Parameters.WorkflowTaskGroupIds;
            workflowTaskIds?: /**
             * example:
             * wftask_OnnsW08k,wftask_4ejSW7en
             */
            Parameters.WorkflowTaskIds;
            schemaId?: /**
             * example:
             * prstsch_KnR9iVum
             */
            Parameters.SchemaId;
            watcherIds?: /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            Parameters.WatcherIds;
            responsibleTeamIds?: /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            Parameters.ResponsibleTeamIds;
            creationOriginIds?: /**
             * example:
             * etr_d00c97,etr_30ad79
             */
            Parameters.CreationOriginIds;
            "linkedItemIds.anyOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsAnyOf;
            "linkedItemIds.allOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsAllOf;
            "linkedItemIds.noneOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsNoneOf;
            schemaFields?: Parameters.SchemaFields;
            name?: /**
             * example:
             * PR-1
             */
            Parameters.Name;
            nameIncludes?: /**
             * example:
             * PR
             */
            Parameters.NameIncludes;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            modifiedAt?: Parameters.ModifiedAt;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            displayIds?: /**
             * example:
             * ANG1-O1,ANG1-O2
             */
            Parameters.DisplayIds;
            archiveReason?: Parameters.ArchiveReason;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowOutputsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListWorkflowStageRuns {
        namespace Parameters {
            export type StageId = string;
        }
        export interface PathParameters {
            stage_id: Parameters.StageId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowStageRunList;
        }
    }
    namespace ListWorkflowStages {
        namespace Parameters {
            export type WorkflowId = string;
        }
        export interface PathParameters {
            workflow_id: Parameters.WorkflowId;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowStageList;
        }
    }
    namespace ListWorkflowTaskGroups {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * VPR001,VPR002
             */
            export type DisplayIds = string;
            /**
             * example:
             * ENTRY,DIRECT
             */
            export type ExecutionTypes = string;
            /**
             * example:
             * lib_bf0636
             */
            export type FolderId = string;
            /**
             * example:
             * prs_giVNQcTL,prs_t6m99v1
             */
            export type Ids = string;
            /**
             * example:
             * etr_30ad79,etr_d00c97
             */
            export type MentionedIn = string;
            export type ModifiedAt = string;
            /**
             * example:
             * Plasmid Transformation
             */
            export type Name = string;
            /**
             * example:
             * Plasmid
             */
            export type NameIncludes = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * src_NetYd96a
             */
            export type ProjectId = string;
            /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            export type ResponsibleTeamIds = string;
            /**
             * example:
             * prstsch_KnR9iVum,prstsch_nJ34lw9y
             */
            export type SchemaId = string;
            /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            export type StatusIdsAnyOf = string;
            /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            export type StatusIdsNoneOf = string;
            /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            export type StatusIdsOnly = string;
            /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            export type WatcherIds = string;
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * prs_giVNQcTL,prs_t6m99v1
             */
            Parameters.Ids;
            schemaId?: /**
             * example:
             * prstsch_KnR9iVum,prstsch_nJ34lw9y
             */
            Parameters.SchemaId;
            folderId?: /**
             * example:
             * lib_bf0636
             */
            Parameters.FolderId;
            projectId?: /**
             * example:
             * src_NetYd96a
             */
            Parameters.ProjectId;
            mentionedIn?: /**
             * example:
             * etr_30ad79,etr_d00c97
             */
            Parameters.MentionedIn;
            watcherIds?: /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            Parameters.WatcherIds;
            executionTypes?: /**
             * example:
             * ENTRY,DIRECT
             */
            Parameters.ExecutionTypes;
            responsibleTeamIds?: /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            Parameters.ResponsibleTeamIds;
            "statusIds.anyOf"?: /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            Parameters.StatusIdsAnyOf;
            "statusIds.noneOf"?: /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            Parameters.StatusIdsNoneOf;
            "statusIds.only"?: /**
             * example:
             * wfts_VFvwv7JV,wfts_wQzUCsW0
             */
            Parameters.StatusIdsOnly;
            name?: /**
             * example:
             * Plasmid Transformation
             */
            Parameters.Name;
            nameIncludes?: /**
             * example:
             * Plasmid
             */
            Parameters.NameIncludes;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            modifiedAt?: Parameters.ModifiedAt;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            displayIds?: /**
             * example:
             * VPR001,VPR002
             */
            Parameters.DisplayIds;
            archiveReason?: Parameters.ArchiveReason;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTaskGroupsPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListWorkflowTaskSchemas {
        namespace Parameters {
            export type ModifiedAt = string;
            export type NextToken = string;
            export type PageSize = number;
        }
        export interface QueryParameters {
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            modifiedAt?: Parameters.ModifiedAt;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTaskSchemasPaginatedList;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ListWorkflowTasks {
        namespace Parameters {
            export type ArchiveReason = string;
            /**
             * example:
             * ent_a0SApq3z,null
             */
            export type AssigneeIds = string;
            /**
             * example:
             * ent_a0SApq3z
             */
            export type CreatorIds = string;
            /**
             * example:
             * ANG1-T1,ANG1-T2
             */
            export type DisplayIds = string;
            /**
             * example:
             * etr_d00c97,etr_30ad79
             */
            export type ExecutionOriginIds = string;
            /**
             * example:
             * ENTRY,DIRECT
             */
            export type ExecutionTypes = string;
            /**
             * example:
             * wftask_OnnsW08k,wftask_4ejSW7en
             */
            export type Ids = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsAllOf = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsAnyOf = string;
            /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            export type LinkedItemIdsNoneOf = string;
            export type ModifiedAt = string;
            /**
             * example:
             * PR-1
             */
            export type Name = string;
            /**
             * example:
             * PR
             */
            export type NameIncludes = string;
            export type NextToken = string;
            export type PageSize = number;
            /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            export type ResponsibleTeamIds = string;
            export type ScheduledOn = ("null") | string /* date */;
            /**
             * example:
             * 2020-01-01
             */
            export type ScheduledOnGt = string; // date
            /**
             * example:
             * 2020-01-01
             */
            export type ScheduledOnGte = string; // date
            /**
             * example:
             * 2020-01-01
             */
            export type ScheduledOnLt = string; // date
            /**
             * example:
             * 2020-01-01
             */
            export type ScheduledOnLte = string; // date
            export type SchemaFields = /**
             * example:
             * {
             *   "schemaField.Cell Count": ">= 10 AND <= 50",
             *   "schemaField.Experiment": "MyExperiment",
             *   "schemaField.Started On": "<= 2023-05-23T00:00:00Z"
             * }
             */
            Components.Schemas.SchemaFieldsQueryParam;
            /**
             * example:
             * prstsch_KnR9iVum
             */
            export type SchemaId = string;
            /**
             * example:
             * wfts_wQzUCsW0,wfts_VFvwv7JV
             */
            export type StatusIds = string;
            /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            export type WatcherIds = string;
            /**
             * example:
             * prs_giVNQcTL,prs_t6m99v1
             */
            export type WorkflowTaskGroupIds = string;
        }
        export interface QueryParameters {
            ids?: /**
             * example:
             * wftask_OnnsW08k,wftask_4ejSW7en
             */
            Parameters.Ids;
            workflowTaskGroupIds?: /**
             * example:
             * prs_giVNQcTL,prs_t6m99v1
             */
            Parameters.WorkflowTaskGroupIds;
            schemaId?: /**
             * example:
             * prstsch_KnR9iVum
             */
            Parameters.SchemaId;
            statusIds?: /**
             * example:
             * wfts_wQzUCsW0,wfts_VFvwv7JV
             */
            Parameters.StatusIds;
            assigneeIds?: /**
             * example:
             * ent_a0SApq3z,null
             */
            Parameters.AssigneeIds;
            watcherIds?: /**
             * example:
             * ent_a0SApq3z,ent_asdf72354,null
             */
            Parameters.WatcherIds;
            responsibleTeamIds?: /**
             * example:
             * team_Thepp2c7,team_QqHMbfqK,null
             */
            Parameters.ResponsibleTeamIds;
            executionOriginIds?: /**
             * example:
             * etr_d00c97,etr_30ad79
             */
            Parameters.ExecutionOriginIds;
            executionTypes?: /**
             * example:
             * ENTRY,DIRECT
             */
            Parameters.ExecutionTypes;
            "linkedItemIds.anyOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsAnyOf;
            "linkedItemIds.allOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsAllOf;
            "linkedItemIds.noneOf"?: /**
             * example:
             * bfi_ed1ef7,con_1c76c9
             */
            Parameters.LinkedItemIdsNoneOf;
            schemaFields?: Parameters.SchemaFields;
            name?: /**
             * example:
             * PR-1
             */
            Parameters.Name;
            nameIncludes?: /**
             * example:
             * PR
             */
            Parameters.NameIncludes;
            creatorIds?: /**
             * example:
             * ent_a0SApq3z
             */
            Parameters.CreatorIds;
            scheduledOn?: Parameters.ScheduledOn;
            "scheduledOn.lt"?: /**
             * example:
             * 2020-01-01
             */
            Parameters.ScheduledOnLt /* date */;
            "scheduledOn.lte"?: /**
             * example:
             * 2020-01-01
             */
            Parameters.ScheduledOnLte /* date */;
            "scheduledOn.gte"?: /**
             * example:
             * 2020-01-01
             */
            Parameters.ScheduledOnGte /* date */;
            "scheduledOn.gt"?: /**
             * example:
             * 2020-01-01
             */
            Parameters.ScheduledOnGt /* date */;
            modifiedAt?: Parameters.ModifiedAt;
            nextToken?: Parameters.NextToken;
            pageSize?: Parameters.PageSize;
            displayIds?: /**
             * example:
             * ANG1-T1,ANG1-T2
             */
            Parameters.DisplayIds;
            archiveReason?: Parameters.ArchiveReason;
        }
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTasksPaginatedList;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ListWorkflows {
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowList;
        }
    }
    namespace PatchBenchlingApp {
        namespace Parameters {
            export type AppId = string;
        }
        export interface PathParameters {
            app_id: Parameters.AppId;
        }
        export type RequestBody = Components.Schemas.BenchlingAppUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.BenchlingApp;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace PatchRequest {
        namespace Parameters {
            export type RequestId = string;
        }
        export interface PathParameters {
            request_id: Parameters.RequestId;
        }
        export type RequestBody = /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Components.Schemas.RequestUpdate;
        namespace Responses {
            export type $200 = /* A request is an ask to perform a service, e.g. produce a sample or perform assays on a sample. Requests are usually placed to another team or individual who specializes in performing the service. */ Components.Schemas.Request;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace PrintLabels {
        export type RequestBody = Components.Schemas.PrintLabels;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ProcessOutputWithAutomationOutputProcessor {
        namespace Parameters {
            export type OutputProcessorId = string;
        }
        export interface PathParameters {
            output_processor_id: Parameters.OutputProcessorId;
        }
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace RegisterEntities {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export type RequestBody = Components.Schemas.RegisterEntities;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace ReserveContainers {
        export type RequestBody = Components.Schemas.ContainersCheckout;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace TransferIntoContainer {
        namespace Parameters {
            export type DestinationContainerId = string;
        }
        export interface PathParameters {
            destination_container_id: Parameters.DestinationContainerId;
        }
        export type RequestBody = Components.Schemas.ContainerTransfer;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
        }
    }
    namespace TransferIntoContainers {
        export type RequestBody = Components.Schemas.MultipleContainersTransfersList;
        namespace Responses {
            export type $202 = Components.Schemas.AsyncTaskLink;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveAASequences {
        export type RequestBody = /**
         * The request body for unarchiving AA sequences.
         *
         */
        Components.Schemas.AaSequencesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.AaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveAppCanvases {
        export type RequestBody = Components.Schemas.AppCanvasesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived. This includes the IDs of canvases that were archived / unarchived.
             *
             */
            Components.Schemas.AppCanvasesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveAssayResults {
        export type RequestBody = Components.Schemas.AssayResultIdsRequest;
        namespace Responses {
            export type $200 = Components.Schemas.AssayResultIdsResponse;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveAssayRuns {
        export type RequestBody = /**
         * The request body for unarchiving Assay Runs.
         *
         */
        Components.Schemas.AssayRunsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all Assay Runs that were archived / unarchived.
             *
             */
            Components.Schemas.AssayRunsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveAutomationOutputProcessors {
        export type RequestBody = Components.Schemas.AutomationOutputProcessorsUnarchive;
        namespace Responses {
            export type $200 = /* IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of any linked Results that were archived / unarchived. */ Components.Schemas.AutomationOutputProcessorArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveBatches {
        export type RequestBody = /**
         * The request body for unarchiving Batches.
         *
         */
        Components.Schemas.BatchesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all batches that were archived / unarchived, grouped by resource type.
             *
             */
            Components.Schemas.BatchesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveBenchlingApps {
        export type RequestBody = Components.Schemas.BenchlingAppsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of apps that were archived / unarchived.
             *
             */
            Components.Schemas.BenchlingAppsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveBoxes {
        export type RequestBody = Components.Schemas.BoxesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of boxes along with any IDs of containers that were archived / unarchived.
             *
             */
            Components.Schemas.BoxesArchivalChange;
        }
    }
    namespace UnarchiveContainers {
        export type RequestBody = Components.Schemas.ContainersUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were unarchived, grouped by resource type. This includes the IDs of containers that were unarchived.
             *
             */
            Components.Schemas.ContainersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveCustomEntities {
        export type RequestBody = /**
         * The request body for unarchiving custom entities.
         *
         */
        Components.Schemas.CustomEntitiesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of custom entities along with any IDs of batches that were archived (or unarchived).
             *
             */
            Components.Schemas.CustomEntitiesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveDNAOligos {
        export type RequestBody = /**
         * The request body for unarchiving DNA Oligos.
         *
         */
        Components.Schemas.DnaOligosUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.DnaOligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveDNASequences {
        export type RequestBody = /**
         * The request body for unarchiving DNA sequences.
         *
         */
        Components.Schemas.DnaSequencesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA sequences along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.DnaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveDropdownOptions {
        namespace Parameters {
            export type DropdownId = string;
        }
        export interface PathParameters {
            dropdown_id: Parameters.DropdownId;
        }
        export type RequestBody = Components.Schemas.DropdownOptionsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived.
             *
             */
            Components.Schemas.DropdownOptionsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UnarchiveEntries {
        export type RequestBody = Components.Schemas.EntriesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of entries that changed..
             *
             */
            Components.Schemas.EntriesArchivalChange;
        }
    }
    namespace UnarchiveFolders {
        export type RequestBody = Components.Schemas.FoldersUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of folders along with any IDs of folder contents that were unarchived.
             *
             */
            Components.Schemas.FoldersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveLocations {
        export type RequestBody = Components.Schemas.LocationsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of locations along with any IDs of locations, boxes, plates, containers that were archived.
             *
             */
            Components.Schemas.LocationsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveMixtures {
        export type RequestBody = /**
         * The request body for unarchiving mixtures.
         *
         */
        Components.Schemas.MixturesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all mixtures that were archived or unarchived.
             *
             */
            Components.Schemas.MixturesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveMolecules {
        export type RequestBody = /**
         * The request body for unarchiving Molecules.
         *
         */
        Components.Schemas.MoleculesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Molecules along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.MoleculesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveMonomers {
        export type RequestBody = /**
         * The request body for unarchiving Monomers.
         *
         */
        Components.Schemas.MonomersUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type.
             *
             */
            Components.Schemas.MonomersArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveOligos {
        export type RequestBody = /**
         * The request body for unarchiving Oligos.
         *
         */
        Components.Schemas.OligosUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.OligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchivePlates {
        export type RequestBody = Components.Schemas.PlatesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of plates along with any IDs of containers that were archived / unarchived.
             *
             */
            Components.Schemas.PlatesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveProjects {
        export type RequestBody = Components.Schemas.ProjectsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of projects along with any IDs of project contents that were unarchived.
             *
             */
            Components.Schemas.ProjectsArchivalChange;
        }
    }
    namespace UnarchiveRNAOligos {
        export type RequestBody = /**
         * The request body for unarchiving RNA Oligos.
         *
         */
        Components.Schemas.RnaOligosUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of RNA Oligos along with any IDs of batches that were archived / unarchived.
             *
             */
            Components.Schemas.RnaOligosArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveRNASequences {
        export type RequestBody = /**
         * The request body for unarchiving RNA sequences.
         *
         */
        Components.Schemas.RnaSequencesUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all RNA Sequences that were archived or unarchived, grouped by resource type.
             *
             */
            Components.Schemas.RnaSequencesArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveWorkflowOutputs {
        export type RequestBody = Components.Schemas.WorkflowOutputsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowOutputsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveWorkflowTaskGroups {
        export type RequestBody = Components.Schemas.WorkflowTaskGroupsUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowTaskGroupsArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnarchiveWorkflowTasks {
        export type RequestBody = Components.Schemas.WorkflowTasksUnarchive;
        namespace Responses {
            export type $200 = /**
             * IDs of all items that were archived or unarchived, grouped by resource type
             *
             */
            Components.Schemas.WorkflowTasksArchivalChange;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UnregisterEntities {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export type RequestBody = Components.Schemas.UnregisterEntities;
        namespace Responses {
            export type $200 = Components.Schemas.EmptyObject;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateAASequence {
        namespace Parameters {
            export type AaSequenceId = string;
        }
        export interface PathParameters {
            aa_sequence_id: Parameters.AaSequenceId;
        }
        export type RequestBody = Components.Schemas.AaSequenceUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateAppCanvas {
        namespace Parameters {
            export type CanvasId = string;
        }
        export interface PathParameters {
            canvas_id: Parameters.CanvasId;
        }
        export type RequestBody = Components.Schemas.AppCanvasUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AppCanvas;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateAppConfigurationItem {
        namespace Parameters {
            export type ItemId = string;
        }
        export interface PathParameters {
            item_id: Parameters.ItemId;
        }
        export type RequestBody = Components.Schemas.AppConfigItemUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AppConfigItem;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateAppSession {
        namespace Parameters {
            export type Id = string;
        }
        export interface PathParameters {
            id: Parameters.Id;
        }
        export type RequestBody = /* Update a session's messages or increase timeoutSeconds. */ Components.Schemas.AppSessionUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AppSession;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateAssayRun {
        namespace Parameters {
            export type AssayRunId = string;
        }
        export interface PathParameters {
            assay_run_id: Parameters.AssayRunId;
        }
        export type RequestBody = Components.Schemas.AssayRunUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AssayRun;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateAutomationInputGenerator {
        namespace Parameters {
            export type InputGeneratorId = string;
        }
        export interface PathParameters {
            input_generator_id: Parameters.InputGeneratorId;
        }
        export type RequestBody = Components.Schemas.AutomationInputGeneratorUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AutomationInputGenerator;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateAutomationOutputProcessor {
        namespace Parameters {
            export type OutputProcessorId = string;
        }
        export interface PathParameters {
            output_processor_id: Parameters.OutputProcessorId;
        }
        export type RequestBody = Components.Schemas.AutomationOutputProcessorUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.AutomationOutputProcessor;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateBatch {
        namespace Parameters {
            export type BatchId = string;
        }
        export interface PathParameters {
            batch_id: Parameters.BatchId;
        }
        export type RequestBody = Components.Schemas.BatchUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Batch;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateBox {
        namespace Parameters {
            export type BoxId = string;
        }
        export interface PathParameters {
            box_id: Parameters.BoxId;
        }
        export type RequestBody = Components.Schemas.BoxUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Box;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateContainer {
        namespace Parameters {
            export type ContainerId = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
        }
        export type RequestBody = Components.Schemas.ContainerUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Container;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateContainerContent {
        namespace Parameters {
            export type ContainableId = string;
            export type ContainerId = string;
        }
        export interface PathParameters {
            container_id: Parameters.ContainerId;
            containable_id: Parameters.ContainableId;
        }
        export type RequestBody = Components.Schemas.ContainerContentUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.ContainerContent;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenRestrictedSampleError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateCustomEntity {
        namespace Parameters {
            export type CustomEntityId = string;
        }
        export interface PathParameters {
            custom_entity_id: Parameters.CustomEntityId;
        }
        export type RequestBody = Components.Schemas.CustomEntityUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.CustomEntity;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateDNAOligo {
        namespace Parameters {
            export type OligoId = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export type RequestBody = Components.Schemas.DnaOligoUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateDNASequence {
        namespace Parameters {
            export type DnaSequenceId = string;
        }
        export interface PathParameters {
            dna_sequence_id: Parameters.DnaSequenceId;
        }
        export type RequestBody = Components.Schemas.DnaSequenceUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.DnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateDropdown {
        namespace Parameters {
            export type DropdownId = string;
        }
        export interface PathParameters {
            dropdown_id: Parameters.DropdownId;
        }
        export type RequestBody = Components.Schemas.DropdownUpdate;
        namespace Responses {
            export type $200 = /* Dropdowns are registry-wide enums. Use dropdowns to standardize on spelling and naming conventions, especially for important metadata like resistance markers. */ Components.Schemas.Dropdown;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateEntry {
        namespace Parameters {
            export type EntryId = string;
            /**
             * example:
             * id, name, modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            entry_id: Parameters.EntryId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id, name, modifiedAt
             */
            Parameters.Returning;
        }
        export type RequestBody = Components.Schemas.EntryUpdate;
        namespace Responses {
            export type $200 = /**
             * Entries are notes that users can take. They're organized by "days" (which are user-configurable) and modeled within each day as a list of "notes." Each note has a type - the simplest is a "text" type, but lists, tables, and external files are also supported.
             *
             * *Note:* the current Entry resource has a few limitations:
             * - Formatting information is not yet supported. Header formatting, bolding, and other stylistic information is not presented.
             * - Data in tables is presented as text always - numeric values will need to be parsed into floats or integers, as appropriate.
             *
             * Note: Data in Results tables are not accessible through this API call. Results table data can be called through the Results API calls.
             *
             */
            Components.Schemas.Entry;
        }
    }
    namespace UpdateFeature {
        namespace Parameters {
            export type FeatureId = string;
        }
        export interface PathParameters {
            feature_id: Parameters.FeatureId;
        }
        export type RequestBody = /* Inputs for updating a feature */ Components.Schemas.FeatureUpdate;
        namespace Responses {
            export type $200 = /* A feature from a feature library */ Components.Schemas.Feature;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateFeatureLibrary {
        namespace Parameters {
            export type FeatureLibraryId = string;
        }
        export interface PathParameters {
            feature_library_id: Parameters.FeatureLibraryId;
        }
        export type RequestBody = /* Inputs for updating a feature library */ Components.Schemas.FeatureLibraryUpdate;
        namespace Responses {
            export type $200 = /* A feature library */ Components.Schemas.FeatureLibrary;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateLabAutomationTransform {
        namespace Parameters {
            export type TransformId = string;
        }
        export interface PathParameters {
            transform_id: Parameters.TransformId;
        }
        export type RequestBody = Components.Schemas.LabAutomationTransformUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.LabAutomationTransform;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateLegacyWorkflowMetadata {
        namespace Parameters {
            export type LegacyWorkflowId = string;
        }
        export interface PathParameters {
            legacy_workflow_id: Parameters.LegacyWorkflowId;
        }
        export type RequestBody = Components.Schemas.LegacyWorkflowPatch;
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflow;
        }
    }
    namespace UpdateLocation {
        namespace Parameters {
            export type LocationId = string;
        }
        export interface PathParameters {
            location_id: Parameters.LocationId;
        }
        export type RequestBody = Components.Schemas.LocationUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Location;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateMixture {
        namespace Parameters {
            export type MixtureId = string;
        }
        export interface PathParameters {
            mixture_id: Parameters.MixtureId;
        }
        export type RequestBody = Components.Schemas.MixtureUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Mixture;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateMolecule {
        namespace Parameters {
            export type MoleculeId = string;
        }
        export interface PathParameters {
            molecule_id: Parameters.MoleculeId;
        }
        export type RequestBody = Components.Schemas.MoleculeUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Molecule;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateMonomer {
        namespace Parameters {
            export type MonomerId = string;
            /**
             * example:
             * id, modifiedAt
             */
            export type Returning = string;
        }
        export interface PathParameters {
            monomer_id: Parameters.MonomerId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id, modifiedAt
             */
            Parameters.Returning;
        }
        export type RequestBody = Components.Schemas.MonomerUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Monomer;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateOligo {
        namespace Parameters {
            export type OligoId = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export type RequestBody = Components.Schemas.OligoUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.DnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdatePlate {
        namespace Parameters {
            export type PlateId = string;
            /**
             * example:
             * id,webURL
             */
            export type Returning = string;
        }
        export interface PathParameters {
            plate_id: Parameters.PlateId;
        }
        export interface QueryParameters {
            returning?: /**
             * example:
             * id,webURL
             */
            Parameters.Returning;
        }
        export type RequestBody = Components.Schemas.PlateUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.Plate;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateRNAOligo {
        namespace Parameters {
            export type OligoId = string;
        }
        export interface PathParameters {
            oligo_id: Parameters.OligoId;
        }
        export type RequestBody = Components.Schemas.RnaOligoUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.RnaOligo;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateRNASequence {
        namespace Parameters {
            export type RnaSequenceId = string;
        }
        export interface PathParameters {
            rna_sequence_id: Parameters.RnaSequenceId;
        }
        export type RequestBody = Components.Schemas.RnaSequenceUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.RnaSequence;
            export type $400 = Components.Schemas.BadRequestError;
        }
    }
    namespace UpdateUser {
        namespace Parameters {
            export type UserId = string;
        }
        export interface PathParameters {
            user_id: Parameters.UserId;
        }
        export type RequestBody = Components.Schemas.UserUpdate;
        namespace Responses {
            export type $200 = /**
             * example:
             * {
             *   "handle": "lpasteur",
             *   "id": "ent_a0SApq3z",
             *   "name": "Louis Pasteur",
             *   "email": "lpasteur@benchling.com",
             *   "isSuspended": false
             * }
             */
            Components.Schemas.User;
            export type $400 = Components.Schemas.BadRequestError;
            export type $403 = Components.Schemas.ForbiddenError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateWorkflowMetadata {
        namespace Parameters {
            export type WorkflowId = string;
        }
        export interface PathParameters {
            workflow_id: Parameters.WorkflowId;
        }
        export type RequestBody = Components.Schemas.WorkflowPatch;
        namespace Responses {
            export type $200 = Components.Schemas.LegacyWorkflow;
        }
    }
    namespace UpdateWorkflowOutput {
        namespace Parameters {
            /**
             * example:
             * wfout_5cJLQKVF
             */
            export type WorkflowOutputId = string;
        }
        export interface PathParameters {
            workflow_output_id: /**
             * example:
             * wfout_5cJLQKVF
             */
            Parameters.WorkflowOutputId;
        }
        export type RequestBody = Components.Schemas.WorkflowOutputUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowOutput;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateWorkflowTask {
        namespace Parameters {
            /**
             * example:
             * wftask_OnnsW08k
             */
            export type WorkflowTaskId = string;
        }
        export interface PathParameters {
            workflow_task_id: /**
             * example:
             * wftask_OnnsW08k
             */
            Parameters.WorkflowTaskId;
        }
        export type RequestBody = Components.Schemas.WorkflowTaskUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTask;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace UpdateWorkflowTaskGroup {
        namespace Parameters {
            /**
             * example:
             * prs_giVNQcTL
             */
            export type WorkflowTaskGroupId = string;
        }
        export interface PathParameters {
            workflow_task_group_id: /**
             * example:
             * prs_giVNQcTL
             */
            Parameters.WorkflowTaskGroupId;
        }
        export type RequestBody = Components.Schemas.WorkflowTaskGroupUpdate;
        namespace Responses {
            export type $200 = Components.Schemas.WorkflowTaskGroup;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
    namespace ValidateBarcodes {
        namespace Parameters {
            export type RegistryId = string;
        }
        export interface PathParameters {
            registry_id: Parameters.RegistryId;
        }
        export type RequestBody = Components.Schemas.BarcodesList;
        namespace Responses {
            export type $200 = Components.Schemas.BarcodeValidationResults;
            export type $400 = Components.Schemas.BadRequestError;
            export type $404 = Components.Schemas.NotFoundError;
        }
    }
}

export interface OperationMethods {
  /**
   * listAASequences - List AA sequences
   *
   * List AA sequences
   */
  'listAASequences'(
    parameters?: Parameters<Paths.ListAASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAASequences.Responses.$200>
  /**
   * createAASequence - Create an AA sequence
   *
   * Create an AA sequence
   */
  'createAASequence'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAASequence.Responses.$201>
  /**
   * getAASequence - Get an AA sequence
   *
   * Get an AA sequence
   */
  'getAASequence'(
    parameters?: Parameters<Paths.GetAASequence.PathParameters & Paths.GetAASequence.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAASequence.Responses.$200>
  /**
   * updateAASequence - Update an AA sequence
   *
   * Update an AA sequence
   */
  'updateAASequence'(
    parameters?: Parameters<Paths.UpdateAASequence.PathParameters> | null,
    data?: Paths.UpdateAASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAASequence.Responses.$200>
  /**
   * archiveAASequences - Archive AA sequences
   *
   * Archive AA sequences
   */
  'archiveAASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveAASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveAASequences.Responses.$200>
  /**
   * autoAnnotateAaSequences - Auto-annotate AA sequences with matching features from specified Feature Libraries
   *
   * Auto-annotate AA sequences with matching features from specified Feature Libraries
   */
  'autoAnnotateAaSequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutoAnnotateAaSequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutoAnnotateAaSequences.Responses.$202>
  /**
   * bulkCreateAASequences - Bulk Create AA sequences
   *
   * Bulk Create AA sequences. Limit of 1000 AA Sequences per request.
   */
  'bulkCreateAASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateAASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateAASequences.Responses.$202>
  /**
   * bulkGetAASequences - Bulk get AA sequences by ID
   *
   * Bulk get AA sequences by ID
   */
  'bulkGetAASequences'(
    parameters?: Parameters<Paths.BulkGetAASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetAASequences.Responses.$200>
  /**
   * bulkUpdateAASequences - Bulk Update AA sequences
   *
   * Bulk Update AA sequences
   */
  'bulkUpdateAASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateAASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateAASequences.Responses.$202>
  /**
   * unarchiveAASequences - Unarchive AA sequences
   *
   * Unarchive AA sequences
   */
  'unarchiveAASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveAASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveAASequences.Responses.$200>
  /**
   * createAppCanvas - Create an App Canvas
   *
   * Create an App Canvas that a Benchling App can write to and read user interaction from.
   *
   */
  'createAppCanvas'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAppCanvas.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAppCanvas.Responses.$201>
  /**
   * getAppCanvas - Get App Canvas
   *
   * Get the current state of the App Canvas, including user input elements.
   */
  'getAppCanvas'(
    parameters?: Parameters<Paths.GetAppCanvas.PathParameters & Paths.GetAppCanvas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAppCanvas.Responses.$200>
  /**
   * updateAppCanvas - Update App Canvas
   *
   * Update App Canvas
   */
  'updateAppCanvas'(
    parameters?: Parameters<Paths.UpdateAppCanvas.PathParameters> | null,
    data?: Paths.UpdateAppCanvas.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAppCanvas.Responses.$200>
  /**
   * archiveAppCanvases - Archive app canvases
   *
   * Archive app canvases
   */
  'archiveAppCanvases'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveAppCanvases.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveAppCanvases.Responses.$200>
  /**
   * unarchiveAppCanvases - Unarchive app canvases
   *
   * Unarchive app canvases
   */
  'unarchiveAppCanvases'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveAppCanvases.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveAppCanvases.Responses.$200>
  /**
   * listAppConfigurationItems - Get app configuration items
   *
   * Get app configuration items
   */
  'listAppConfigurationItems'(
    parameters?: Parameters<Paths.ListAppConfigurationItems.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAppConfigurationItems.Responses.$200>
  /**
   * createAppConfigurationItem - Create app configuration item
   *
   * Create app configuration item
   */
  'createAppConfigurationItem'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAppConfigurationItem.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAppConfigurationItem.Responses.$201>
  /**
   * getAppConfigurationItemById - Get app configuration item
   *
   * Get app configuration item
   */
  'getAppConfigurationItemById'(
    parameters?: Parameters<Paths.GetAppConfigurationItemById.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAppConfigurationItemById.Responses.$200>
  /**
   * updateAppConfigurationItem - Update app configuration item
   *
   * Update app configuration item
   */
  'updateAppConfigurationItem'(
    parameters?: Parameters<Paths.UpdateAppConfigurationItem.PathParameters> | null,
    data?: Paths.UpdateAppConfigurationItem.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAppConfigurationItem.Responses.$200>
  /**
   * bulkCreateAppConfigurationItems - Bulk Create app configuration items. Limit of 1000 App Config Items per request.
   *
   * Bulk Create app configuration items
   */
  'bulkCreateAppConfigurationItems'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateAppConfigurationItems.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateAppConfigurationItems.Responses.$202>
  /**
   * bulkUpdateAppConfigurationItems - Bulk Update app configuration items. Limit of 1000 App Config Items per request.
   *
   * Bulk Update app configuration items
   */
  'bulkUpdateAppConfigurationItems'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateAppConfigurationItems.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateAppConfigurationItems.Responses.$202>
  /**
   * createAppSession - Create a new app session
   *
   * Create a new app session. Sessions cannot be archived once created.
   *
   */
  'createAppSession'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAppSession.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAppSession.Responses.$201>
  /**
   * getAppSessionById - Get an app session
   *
   * Get an app session
   */
  'getAppSessionById'(
    parameters?: Parameters<Paths.GetAppSessionById.PathParameters & Paths.GetAppSessionById.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAppSessionById.Responses.$200>
  /**
   * updateAppSession - Update app session
   *
   * Update app session
   */
  'updateAppSession'(
    parameters?: Parameters<Paths.UpdateAppSession.PathParameters> | null,
    data?: Paths.UpdateAppSession.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAppSession.Responses.$200>
  /**
   * listBenchlingApps - List apps
   *
   * List apps
   */
  'listBenchlingApps'(
    parameters?: Parameters<Paths.ListBenchlingApps.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBenchlingApps.Responses.$200>
  /**
   * createBenchlingApp - Create an app
   *
   * Create an app
   */
  'createBenchlingApp'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateBenchlingApp.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateBenchlingApp.Responses.$201>
  /**
   * getBenchlingAppByID - Get an app by ID
   *
   * Get an app by ID
   */
  'getBenchlingAppByID'(
    parameters?: Parameters<Paths.GetBenchlingAppByID.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBenchlingAppByID.Responses.$200>
  /**
   * patchBenchlingApp - Update an app
   *
   * Update an app
   */
  'patchBenchlingApp'(
    parameters?: Parameters<Paths.PatchBenchlingApp.PathParameters> | null,
    data?: Paths.PatchBenchlingApp.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.PatchBenchlingApp.Responses.$200>
  /**
   * archiveBenchlingApps - Archive apps
   *
   * Archive apps
   */
  'archiveBenchlingApps'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveBenchlingApps.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveBenchlingApps.Responses.$200>
  /**
   * unarchiveBenchlingApps - Unarchive apps
   *
   * Unarchive apps
   */
  'unarchiveBenchlingApps'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveBenchlingApps.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveBenchlingApps.Responses.$200>
  /**
   * listAssayResultSchemas - List assay result schemas
   *
   * List assay result schemas
   */
  'listAssayResultSchemas'(
    parameters?: Parameters<Paths.ListAssayResultSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAssayResultSchemas.Responses.$200>
  /**
   * getResultSchema - Get a Result schema by ID
   *
   * Get a Result schema by ID
   */
  'getResultSchema'(
    parameters?: Parameters<Paths.GetResultSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetResultSchema.Responses.$200>
  /**
   * listAssayResults - List results
   *
   * List results
   */
  'listAssayResults'(
    parameters?: Parameters<Paths.ListAssayResults.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAssayResults.Responses.$200>
  /**
   * createAssayResults - Create 1 or more results.
   *
   * Create 1 or more results.
   * If you are looking to add results to a specific table in a notebook entry, please use the  [assay-results bulk-create](#/Assay%20Results/bulkCreateAssayResults) endpoint instead.
   *
   */
  'createAssayResults'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAssayResults.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAssayResults.Responses.$200>
  /**
   * getAssayResult - Get a result
   *
   * Get a result
   */
  'getAssayResult'(
    parameters?: Parameters<Paths.GetAssayResult.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAssayResult.Responses.$200>
  /**
   * archiveAssayResults - Archive 1 or more results.
   *
   * Results that have been added to a Legacy Result or Legacy Run table in a Notebook Entry **cannot** be Archived.
   *
   */
  'archiveAssayResults'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveAssayResults.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveAssayResults.Responses.$200>
  /**
   * bulkCreateAssayResults - Bulk create results
   *
   * Bulk create results. Limit of 4000 results per request.
   */
  'bulkCreateAssayResults'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateAssayResults.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateAssayResults.Responses.$202>
  /**
   * bulkGetAssayResults - Gets multiple results specified by a list of IDs.
   *
   * Up to 200 IDs can be specified at once.
   */
  'bulkGetAssayResults'(
    parameters?: Parameters<Paths.BulkGetAssayResults.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetAssayResults.Responses.$200>
  /**
   * unarchiveAssayResults - Unarchive 1 or more results.
   *
   * Unarchive 1 or more results.
   */
  'unarchiveAssayResults'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveAssayResults.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveAssayResults.Responses.$200>
  /**
   * listAssayRunSchemas - List assay run schemas
   *
   * List assay run schemas
   */
  'listAssayRunSchemas'(
    parameters?: Parameters<Paths.ListAssayRunSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAssayRunSchemas.Responses.$200>
  /**
   * getRunSchema - Get a Run schema by ID
   *
   * Get a Run schema by ID
   */
  'getRunSchema'(
    parameters?: Parameters<Paths.GetRunSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRunSchema.Responses.$200>
  /**
   * listAssayRuns - List runs
   *
   * List runs
   */
  'listAssayRuns'(
    parameters?: Parameters<Paths.ListAssayRuns.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAssayRuns.Responses.$200>
  /**
   * createAssayRuns - Create 1 or more runs.
   *
   * Create 1 or more runs.
   */
  'createAssayRuns'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAssayRuns.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAssayRuns.Responses.$200>
  /**
   * getAssayRun - Get a run
   *
   * Get a run
   */
  'getAssayRun'(
    parameters?: Parameters<Paths.GetAssayRun.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAssayRun.Responses.$200>
  /**
   * updateAssayRun - Update a run
   *
   * Update a run
   */
  'updateAssayRun'(
    parameters?: Parameters<Paths.UpdateAssayRun.PathParameters> | null,
    data?: Paths.UpdateAssayRun.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAssayRun.Responses.$200>
  /**
   * listAutomationInputGenerators - list AutomationInputGenerators by Run
   *
   * list AutomationInputGenerators by Run
   */
  'listAutomationInputGenerators'(
    parameters?: Parameters<Paths.ListAutomationInputGenerators.PathParameters & Paths.ListAutomationInputGenerators.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAutomationInputGenerators.Responses.$200>
  /**
   * listAutomationOutputProcessorsDeprecated - list AutomationOutputProcessors by Run
   *
   * Deprecated in favor of '/automation-output-processors'. For each output config in the run config, will create an empty automationOutputProcessor for the run if one doesn't exist.
   */
  'listAutomationOutputProcessorsDeprecated'(
    parameters?: Parameters<Paths.ListAutomationOutputProcessorsDeprecated.PathParameters & Paths.ListAutomationOutputProcessorsDeprecated.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAutomationOutputProcessorsDeprecated.Responses.$200>
  /**
   * archiveAssayRuns - Archive Assay Runs
   *
   * Archive assay runs that are not embedded in a notebook entry
   */
  'archiveAssayRuns'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveAssayRuns.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveAssayRuns.Responses.$200>
  /**
   * bulkGetAssayRuns - Bulk get runs by ID
   *
   * Bulk get runs by ID
   */
  'bulkGetAssayRuns'(
    parameters?: Parameters<Paths.BulkGetAssayRuns.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetAssayRuns.Responses.$200>
  /**
   * unarchiveAssayRuns - Unarchive Assay Runs
   *
   * Unarchive assay runs
   */
  'unarchiveAssayRuns'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveAssayRuns.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveAssayRuns.Responses.$200>
  /**
   * getLabAutomationTransform - Get a Lab Automation Transform step
   *
   * Get a Lab Automation Transform step
   */
  'getLabAutomationTransform'(
    parameters?: Parameters<Paths.GetLabAutomationTransform.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetLabAutomationTransform.Responses.$200>
  /**
   * updateLabAutomationTransform - Update a Lab Automation Transform step
   *
   * Update a Lab Automation Transform step
   */
  'updateLabAutomationTransform'(
    parameters?: Parameters<Paths.UpdateLabAutomationTransform.PathParameters> | null,
    data?: Paths.UpdateLabAutomationTransform.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateLabAutomationTransform.Responses.$200>
  /**
   * getAutomationInputGenerator - Get an Automation Input Generator
   *
   * Get an Automation Input Generator
   */
  'getAutomationInputGenerator'(
    parameters?: Parameters<Paths.GetAutomationInputGenerator.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAutomationInputGenerator.Responses.$200>
  /**
   * updateAutomationInputGenerator - Update an Automation Input Generator
   *
   * Update an Automation Input Generator
   */
  'updateAutomationInputGenerator'(
    parameters?: Parameters<Paths.UpdateAutomationInputGenerator.PathParameters> | null,
    data?: Paths.UpdateAutomationInputGenerator.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAutomationInputGenerator.Responses.$200>
  /**
   * generateInputWithAutomationInputGenerator - Generate Input with an Automation Input Generator
   *
   * Generate Input with an Automation Input Generator
   */
  'generateInputWithAutomationInputGenerator'(
    parameters?: Parameters<Paths.GenerateInputWithAutomationInputGenerator.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GenerateInputWithAutomationInputGenerator.Responses.$202>
  /**
   * listAutomationOutputProcessors - List non-empty Automation Output Processors
   *
   * List Automation Output Processors which have an attached file
   */
  'listAutomationOutputProcessors'(
    parameters?: Parameters<Paths.ListAutomationOutputProcessors.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListAutomationOutputProcessors.Responses.$200>
  /**
   * createAutomationOutputProcessor - Create Automation Output Processor
   *
   * Create Automation Output Processor
   */
  'createAutomationOutputProcessor'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateAutomationOutputProcessor.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAutomationOutputProcessor.Responses.$201>
  /**
   * getAutomationOutputProcessor - Get an Automation Output Processor
   *
   * Get an Automation Output Processor
   */
  'getAutomationOutputProcessor'(
    parameters?: Parameters<Paths.GetAutomationOutputProcessor.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetAutomationOutputProcessor.Responses.$200>
  /**
   * updateAutomationOutputProcessor - Update an Automation Output Processor
   *
   * Update an Automation Output Processor
   */
  'updateAutomationOutputProcessor'(
    parameters?: Parameters<Paths.UpdateAutomationOutputProcessor.PathParameters> | null,
    data?: Paths.UpdateAutomationOutputProcessor.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateAutomationOutputProcessor.Responses.$200>
  /**
   * processOutputWithAutomationOutputProcessor - Process Output with an Automation Output Processor
   *
   * Process Output with an Automation Output Processor
   */
  'processOutputWithAutomationOutputProcessor'(
    parameters?: Parameters<Paths.ProcessOutputWithAutomationOutputProcessor.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ProcessOutputWithAutomationOutputProcessor.Responses.$202>
  /**
   * archiveAutomationOutputProcessors - Archive Automation Output Processors and linked Results
   *
   * Archive Automation Output Processors and linked Results
   */
  'archiveAutomationOutputProcessors'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveAutomationOutputProcessors.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveAutomationOutputProcessors.Responses.$200>
  /**
   * unarchiveAutomationOutputProcessors - Unarchive Automation Output Processors and linked Results
   *
   * Unarchive Automation Output Processors and linked Results
   */
  'unarchiveAutomationOutputProcessors'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveAutomationOutputProcessors.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveAutomationOutputProcessors.Responses.$200>
  /**
   * listBatchSchemas - List batch schemas
   *
   * List batch schemas
   */
  'listBatchSchemas'(
    parameters?: Parameters<Paths.ListBatchSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBatchSchemas.Responses.$200>
  /**
   * getBatchSchema - Get a batch schema by ID
   *
   * Get a batch schema by ID
   */
  'getBatchSchema'(
    parameters?: Parameters<Paths.GetBatchSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBatchSchema.Responses.$200>
  /**
   * listBatches - List batches
   *
   * List batches
   */
  'listBatches'(
    parameters?: Parameters<Paths.ListBatches.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBatches.Responses.$200>
  /**
   * createBatch - Create a batch
   *
   * Create a batch
   */
  'createBatch'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateBatch.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateBatch.Responses.$201>
  /**
   * getBatch - Get a batch
   *
   * Get a batch
   */
  'getBatch'(
    parameters?: Parameters<Paths.GetBatch.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBatch.Responses.$200>
  /**
   * updateBatch - Update a batch
   *
   * Update a batch
   */
  'updateBatch'(
    parameters?: Parameters<Paths.UpdateBatch.PathParameters> | null,
    data?: Paths.UpdateBatch.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateBatch.Responses.$200>
  /**
   * archiveBatches - Archive Batches
   *
   * Archive Batches
   */
  'archiveBatches'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveBatches.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveBatches.Responses.$200>
  /**
   * bulkGetBatches - Bulk get batches
   *
   * Batches can be queried by their IDs or their names. Querying by name requires specifying a registryId since batch names are not necessarily unique across registries. Batches must be registered to query by name.
   *
   */
  'bulkGetBatches'(
    parameters?: Parameters<Paths.BulkGetBatches.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetBatches.Responses.$200>
  /**
   * unarchiveBatches - Unarchive Batches
   *
   * Unarchive Batches
   */
  'unarchiveBatches'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveBatches.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveBatches.Responses.$200>
  /**
   * createBlob - Upload single-part blob
   *
   *
   * This endpoint uploads a blob in a single API call.
   *
   * Blobs larger than 10MB should be uploaded in [multiple parts](#/Blobs/createMultipartBlob). The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.
   *
   */
  'createBlob'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateBlob.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateBlob.Responses.$200>
  /**
   * getBlob - Get a Blob
   *
   * Get a Blob
   */
  'getBlob'(
    parameters?: Parameters<Paths.GetBlob.PathParameters & Paths.GetBlob.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBlob.Responses.$200>
  /**
   * getBlobFile - Download a blob
   *
   * Download a blob.
   *
   * This endpoint issues a 302 redirect to a pre-signed download link.
   * It does not consume from the standard rate-limit.
   *
   * Example `wget` usage with a User API Key:
   * ```bash
   * export BLOB_ID="ffe43fd5-b928-4996-9b7f-40222cd33d8e"
   * wget "https://tenant.benchling.com/api/v2/blobs/$BLOB_ID/download" \
   *     --user $API_TOKEN \      # Your API Key
   *     --password '' \          # Leave password empty
   *     --content-disposition    # Save file with original filename
   * ```
   *
   * **Note: Calling this endpoint from a browser is not supported.**
   *
   */
  'getBlobFile'(
    parameters?: Parameters<Paths.GetBlobFile.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBlobFile.Responses.$200>
  /**
   * getBlobUrl - Get a Blob's download url
   *
   * Get a Blob's download url
   */
  'getBlobUrl'(
    parameters?: Parameters<Paths.GetBlobUrl.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBlobUrl.Responses.$200>
  /**
   * createBlobPart - Upload a part of a multi-part blob
   *
   *
   * Upload a part of the blob. This part must be at least 5MB, unless it's the last or only part. It's recommended to keep the part size around 10MB.
   *
   * The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.
   *
   * ## Multipart Upload
   *
   * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
   * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
   * - [Upload a blob part](#/Blobs/createBlobPart)
   * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
   *
   * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
   *
   */
  'createBlobPart'(
    parameters?: Parameters<Paths.CreateBlobPart.PathParameters> | null,
    data?: Paths.CreateBlobPart.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateBlobPart.Responses.$200>
  /**
   * abortMultipartBlob - Abort multi-part blob upload
   *
   * Abort multi-part blob upload
   */
  'abortMultipartBlob'(
    parameters?: Parameters<Paths.AbortMultipartBlob.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AbortMultipartBlob.Responses.$200>
  /**
   * completeMultipartBlob - Complete multi-part blob upload
   *
   *
   * Combine blob parts into a single blob.
   *
   * ## Multipart Upload
   *
   * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
   * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
   * - [Upload a blob part](#/Blobs/createBlobPart)
   * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
   *
   * Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.
   *
   * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
   *
   */
  'completeMultipartBlob'(
    parameters?: Parameters<Paths.CompleteMultipartBlob.PathParameters> | null,
    data?: Paths.CompleteMultipartBlob.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CompleteMultipartBlob.Responses.$200>
  /**
   * bulkGetBlobs - Bulk get Blobs by UUID
   *
   * Bulk get Blobs by UUID
   */
  'bulkGetBlobs'(
    parameters?: Parameters<Paths.BulkGetBlobs.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetBlobs.Responses.$200>
  /**
   * createMultipartBlob - Initiate multi-part blob upload
   *
   *
   * Blobs may be uploaded using multi-part upload. This endpoint initiates the upload process - blob parts can then be uploaded in multiple blob parts.
   *
   * ## Multipart Upload
   *
   * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
   * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
   * - [Upload a blob part](#/Blobs/createBlobPart)
   * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
   *
   * Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.
   *
   * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
   *
   */
  'createMultipartBlob'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateMultipartBlob.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateMultipartBlob.Responses.$200>
  /**
   * listBoxSchemas - List box schemas
   *
   * List box schemas
   */
  'listBoxSchemas'(
    parameters?: Parameters<Paths.ListBoxSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBoxSchemas.Responses.$200>
  /**
   * getBoxSchema - Get a box schema by ID
   *
   * Get a box schema by ID
   */
  'getBoxSchema'(
    parameters?: Parameters<Paths.GetBoxSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBoxSchema.Responses.$200>
  /**
   * listBoxes - List boxes
   *
   * List boxes
   */
  'listBoxes'(
    parameters?: Parameters<Paths.ListBoxes.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBoxes.Responses.$200>
  /**
   * createBox - Create a box
   *
   * Create a box
   */
  'createBox'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateBox.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateBox.Responses.$201>
  /**
   * getBox - Get a box
   *
   * Get a box
   */
  'getBox'(
    parameters?: Parameters<Paths.GetBox.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetBox.Responses.$200>
  /**
   * updateBox - Update a box
   *
   * Update a box
   */
  'updateBox'(
    parameters?: Parameters<Paths.UpdateBox.PathParameters> | null,
    data?: Paths.UpdateBox.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateBox.Responses.$200>
  /**
   * listBoxContents - List a box's contents
   *
   * List a box's contents
   */
  'listBoxContents'(
    parameters?: Parameters<Paths.ListBoxContents.PathParameters & Paths.ListBoxContents.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBoxContents.Responses.$200>
  /**
   * archiveBoxes - Archive boxes
   *
   * Archive boxes and any containers of the boxes
   */
  'archiveBoxes'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveBoxes.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveBoxes.Responses.$200>
  /**
   * bulkGetBoxes - BulkGet boxes
   *
   * BulkGet boxes
   */
  'bulkGetBoxes'(
    parameters?: Parameters<Paths.BulkGetBoxes.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetBoxes.Responses.$200>
  /**
   * unarchiveBoxes - Unarchive boxes
   *
   * Unarchive boxes and the containers that were archived along with them
   */
  'unarchiveBoxes'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveBoxes.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveBoxes.Responses.$200>
  /**
   * listContainerSchemas - List container schemas
   *
   * List container schemas
   */
  'listContainerSchemas'(
    parameters?: Parameters<Paths.ListContainerSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListContainerSchemas.Responses.$200>
  /**
   * getContainerSchema - Get a container schema by ID
   *
   * Get a container schema by ID
   */
  'getContainerSchema'(
    parameters?: Parameters<Paths.GetContainerSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetContainerSchema.Responses.$200>
  /**
   * listContainers - List containers
   *
   * List containers
   */
  'listContainers'(
    parameters?: Parameters<Paths.ListContainers.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListContainers.Responses.$200>
  /**
   * createContainer - Create a new container
   *
   * Create a new container
   */
  'createContainer'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateContainer.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateContainer.Responses.$201>
  /**
   * getContainer - get a container by id
   *
   * get a container by id
   */
  'getContainer'(
    parameters?: Parameters<Paths.GetContainer.PathParameters & Paths.GetContainer.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetContainer.Responses.$200>
  /**
   * updateContainer - update a container
   *
   * update a container
   */
  'updateContainer'(
    parameters?: Parameters<Paths.UpdateContainer.PathParameters> | null,
    data?: Paths.UpdateContainer.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateContainer.Responses.$200>
  /**
   * listContainerContents - List a container's contents
   *
   * List a container's contents
   */
  'listContainerContents'(
    parameters?: Parameters<Paths.ListContainerContents.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListContainerContents.Responses.$200>
  /**
   * getContainerContent - Get a container content
   *
   * Get a container content
   */
  'getContainerContent'(
    parameters?: Parameters<Paths.GetContainerContent.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetContainerContent.Responses.$200>
  /**
   * updateContainerContent - Update a container content
   *
   * Update a container content
   */
  'updateContainerContent'(
    parameters?: Parameters<Paths.UpdateContainerContent.PathParameters> | null,
    data?: Paths.UpdateContainerContent.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateContainerContent.Responses.$200>
  /**
   * deleteContainerContent - Delete a container content
   *
   * Delete a container content
   */
  'deleteContainerContent'(
    parameters?: Parameters<Paths.DeleteContainerContent.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.DeleteContainerContent.Responses.$204>
  /**
   * transferIntoContainer - Transfer into container
   *
   * Transfers a volume of an entity, batch, or container into a destination container.
   * Transfering a volume is cumulative with the existing destination container's contents. To transfer an entire container's contents, the sourceContainerId should be specified. To otherwise transfer multiple entities within a container, you can make multiple calls to this endpoint, specifying a single entity with each call.
   *
   */
  'transferIntoContainer'(
    parameters?: Parameters<Paths.TransferIntoContainer.PathParameters> | null,
    data?: Paths.TransferIntoContainer.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.TransferIntoContainer.Responses.$200>
  /**
   * archiveContainers - Archive containers
   *
   * Archive containers
   */
  'archiveContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveContainers.Responses.$200>
  /**
   * bulkCreateContainers - Bulk create containers. Limit of 1000 containers per request.
   *
   * Bulk create containers
   */
  'bulkCreateContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateContainers.Responses.$202>
  /**
   * bulkGetContainers - Bulk get a set of containers
   *
   * Bulk get a set of containers. Provide either containerIds or barcodes, not both.
   */
  'bulkGetContainers'(
    parameters?: Parameters<Paths.BulkGetContainers.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetContainers.Responses.$200>
  /**
   * bulkUpdateContainers - Bulk update containers
   *
   * Bulk update containers
   */
  'bulkUpdateContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateContainers.Responses.$202>
  /**
   * checkinContainers - Check in containers
   *
   * Check in containers to signify that they are available for use.
   */
  'checkinContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CheckinContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CheckinContainers.Responses.$200>
  /**
   * checkoutContainers - Check out containers
   *
   * Check out containers to signify that they are in use.
   */
  'checkoutContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CheckoutContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CheckoutContainers.Responses.$200>
  /**
   * printLabels - Print labels
   *
   * Print labels. Supported print methods are "REMOTE_PRINT_SERVER", "LEGACY_HTTP", and "LEGACY_TCP".
   */
  'printLabels'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.PrintLabels.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.PrintLabels.Responses.$200>
  /**
   * reserveContainers - Reserve containers
   *
   * Reserve containers to signify that someone plans to use the containers.
   */
  'reserveContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ReserveContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ReserveContainers.Responses.$200>
  /**
   * unarchiveContainers - Unarchive containers
   *
   * Unarchive containers
   */
  'unarchiveContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveContainers.Responses.$200>
  /**
   * listCustomEntities - List custom entities
   *
   * List custom entities
   */
  'listCustomEntities'(
    parameters?: Parameters<Paths.ListCustomEntities.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListCustomEntities.Responses.$200>
  /**
   * createCustomEntity - Create a custom entity
   *
   * Create a custom entity
   */
  'createCustomEntity'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateCustomEntity.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateCustomEntity.Responses.$201>
  /**
   * getCustomEntity - Get a custom entity
   *
   * Get a custom entity
   */
  'getCustomEntity'(
    parameters?: Parameters<Paths.GetCustomEntity.PathParameters & Paths.GetCustomEntity.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetCustomEntity.Responses.$200>
  /**
   * updateCustomEntity - Update a custom entity
   *
   * Update a custom entity
   */
  'updateCustomEntity'(
    parameters?: Parameters<Paths.UpdateCustomEntity.PathParameters> | null,
    data?: Paths.UpdateCustomEntity.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateCustomEntity.Responses.$200>
  /**
   * archiveCustomEntities - Archive custom entities
   *
   * Archive custom entities
   */
  'archiveCustomEntities'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveCustomEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveCustomEntities.Responses.$200>
  /**
   * bulkCreateCustomEntities - Bulk Create custom entities
   *
   * Bulk Create custom entities. Limit of 2500 custom entities per request.
   */
  'bulkCreateCustomEntities'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateCustomEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateCustomEntities.Responses.$202>
  /**
   * bulkGetCustomEntities - Bulk get custom entities by ID
   *
   * Bulk get custom entities by ID
   */
  'bulkGetCustomEntities'(
    parameters?: Parameters<Paths.BulkGetCustomEntities.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetCustomEntities.Responses.$200>
  /**
   * bulkUpdateCustomEntities - Bulk Update custom entities
   *
   * Bulk Update custom entities
   */
  'bulkUpdateCustomEntities'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateCustomEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateCustomEntities.Responses.$202>
  /**
   * unarchiveCustomEntities - Unarchive custom entities
   *
   * Unarchive custom entities
   */
  'unarchiveCustomEntities'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveCustomEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveCustomEntities.Responses.$200>
  /**
   * listCustomNotations - List custom notations
   *
   * List all available custom notations for specifying modified nucleotide sequences
   */
  'listCustomNotations'(
    parameters?: Parameters<Paths.ListCustomNotations.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListCustomNotations.Responses.$200>
  /**
   * listDNAAlignments - List DNA Alignments
   *
   * List DNA Alignments
   */
  'listDNAAlignments'(
    parameters?: Parameters<Paths.ListDNAAlignments.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListDNAAlignments.Responses.$200>
  /**
   * getDNAAlignment - Get a DNA Alignment
   *
   * Get a DNA Alignment
   */
  'getDNAAlignment'(
    parameters?: Parameters<Paths.GetDNAAlignment.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetDNAAlignment.Responses.$200>
  /**
   * deleteDNAAlignment - Delete a DNA Alignment
   *
   * Delete a DNA Alignment
   */
  'deleteDNAAlignment'(
    parameters?: Parameters<Paths.DeleteDNAAlignment.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.DeleteDNAAlignment.Responses.$200>
  /**
   * createDnaConsensusAlignment - Create a consensus DNA alignment
   *
   * Create a consensus DNA alignment
   */
  'createDnaConsensusAlignment'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateDnaConsensusAlignment.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateDnaConsensusAlignment.Responses.$202>
  /**
   * createDnaTemplateAlignment - Create a template DNA alignment
   *
   * Create a template DNA alignment
   */
  'createDnaTemplateAlignment'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateDnaTemplateAlignment.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateDnaTemplateAlignment.Responses.$202>
  /**
   * listDNAOligos - List DNA Oligos
   *
   * List DNA Oligos
   */
  'listDNAOligos'(
    parameters?: Parameters<Paths.ListDNAOligos.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListDNAOligos.Responses.$200>
  /**
   * createDNAOligo - Create a DNA Oligo
   *
   * Create a DNA Oligo
   */
  'createDNAOligo'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateDNAOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateDNAOligo.Responses.$201>
  /**
   * getDNAOligo - Get a DNA Oligo
   *
   * Get a DNA Oligo
   */
  'getDNAOligo'(
    parameters?: Parameters<Paths.GetDNAOligo.PathParameters & Paths.GetDNAOligo.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetDNAOligo.Responses.$200>
  /**
   * updateDNAOligo - Update a DNA Oligo
   *
   * Update a DNA Oligo
   */
  'updateDNAOligo'(
    parameters?: Parameters<Paths.UpdateDNAOligo.PathParameters> | null,
    data?: Paths.UpdateDNAOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateDNAOligo.Responses.$200>
  /**
   * archiveDNAOligos - Archive DNA Oligos
   *
   * Archive DNA Oligos
   */
  'archiveDNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveDNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveDNAOligos.Responses.$200>
  /**
   * bulkCreateDNAOligos - Bulk Create DNA Oligos
   *
   * Bulk Create DNA Oligos. Limit of 1000 DNA Oligos per request.
   */
  'bulkCreateDNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateDNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateDNAOligos.Responses.$202>
  /**
   * bulkUpdateDNAOligos - Bulk Update DNA Oligos
   *
   * Bulk Update DNA Oligos
   */
  'bulkUpdateDNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateDNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateDNAOligos.Responses.$202>
  /**
   * unarchiveDNAOligos - Unarchive DNA Oligos
   *
   * Unarchive DNA Oligos
   */
  'unarchiveDNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveDNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveDNAOligos.Responses.$200>
  /**
   * listDNASequences - List DNA sequences
   *
   * List DNA sequences
   */
  'listDNASequences'(
    parameters?: Parameters<Paths.ListDNASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListDNASequences.Responses.$200>
  /**
   * createDNASequence - Create a DNA sequence
   *
   * Create a DNA sequence
   */
  'createDNASequence'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateDNASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateDNASequence.Responses.$201>
  /**
   * getDNASequence - Get a DNA sequence
   *
   * Get a DNA sequence
   */
  'getDNASequence'(
    parameters?: Parameters<Paths.GetDNASequence.PathParameters & Paths.GetDNASequence.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetDNASequence.Responses.$200>
  /**
   * updateDNASequence - Update a DNA sequence
   *
   * Update a DNA sequence
   */
  'updateDNASequence'(
    parameters?: Parameters<Paths.UpdateDNASequence.PathParameters> | null,
    data?: Paths.UpdateDNASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateDNASequence.Responses.$200>
  /**
   * archiveDNASequences - Archive DNA sequences
   *
   * Archive DNA sequences
   */
  'archiveDNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveDNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveDNASequences.Responses.$200>
  /**
   * autoAnnotateDnaSequences - Auto-annotate DNA sequences with matching features from specified Feature Libraries
   *
   * Auto-annotate DNA sequences with matching features from specified Feature Libraries
   */
  'autoAnnotateDnaSequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutoAnnotateDnaSequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutoAnnotateDnaSequences.Responses.$202>
  /**
   * autofillDNASequenceParts - Autofill DNA sequence parts
   *
   * Autofill DNA sequence parts
   */
  'autofillDNASequenceParts'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutofillDNASequenceParts.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutofillDNASequenceParts.Responses.$202>
  /**
   * autofillDNASequenceTranslations - Autofill DNA sequence translations
   *
   * Autofill DNA sequence translations
   */
  'autofillDNASequenceTranslations'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutofillDNASequenceTranslations.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutofillDNASequenceTranslations.Responses.$202>
  /**
   * bulkCreateDNASequences - Bulk Create DNA sequences
   *
   * Bulk Create DNA sequences. Limit of 1000 DNA Sequences per request.
   */
  'bulkCreateDNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateDNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateDNASequences.Responses.$202>
  /**
   * bulkGetDNASequences - Bulk get DNA sequences by ID
   *
   * Bulk get DNA sequences by ID
   */
  'bulkGetDNASequences'(
    parameters?: Parameters<Paths.BulkGetDNASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetDNASequences.Responses.$200>
  /**
   * bulkUpdateDNASequences - Bulk Update DNA sequences
   *
   * Bulk Update DNA sequences
   */
  'bulkUpdateDNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateDNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateDNASequences.Responses.$202>
  /**
   * unarchiveDNASequences - Unarchive DNA sequences
   *
   * Unarchive DNA sequences
   */
  'unarchiveDNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveDNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveDNASequences.Responses.$200>
  /**
   * listDropdowns - List dropdowns
   *
   * List dropdowns
   */
  'listDropdowns'(
    parameters?: Parameters<Paths.ListDropdowns.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListDropdowns.Responses.$200>
  /**
   * createDropdown - Create a dropdown
   *
   * Create a dropdown
   */
  'createDropdown'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateDropdown.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateDropdown.Responses.$200>
  /**
   * getDropdown - Get a dropdown
   *
   * Get a dropdown
   */
  'getDropdown'(
    parameters?: Parameters<Paths.GetDropdown.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetDropdown.Responses.$200>
  /**
   * updateDropdown - Update a dropdown
   *
   * Update a dropdown
   */
  'updateDropdown'(
    parameters?: Parameters<Paths.UpdateDropdown.PathParameters> | null,
    data?: Paths.UpdateDropdown.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateDropdown.Responses.$200>
  /**
   * archiveDropdownOptions - Archive dropdown options
   *
   * Archive options belonging to a dropdown
   */
  'archiveDropdownOptions'(
    parameters?: Parameters<Paths.ArchiveDropdownOptions.PathParameters> | null,
    data?: Paths.ArchiveDropdownOptions.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveDropdownOptions.Responses.$200>
  /**
   * unarchiveDropdownOptions - Unarchive dropdown options
   *
   * Unarchive options belonging to a dropdown
   */
  'unarchiveDropdownOptions'(
    parameters?: Parameters<Paths.UnarchiveDropdownOptions.PathParameters> | null,
    data?: Paths.UnarchiveDropdownOptions.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveDropdownOptions.Responses.$200>
  /**
   * getEnitityBatches - Get an entity's batches
   *
   * Get an entity's batches
   */
  'getEnitityBatches'(
    parameters?: Parameters<Paths.GetEnitityBatches.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetEnitityBatches.Responses.$200>
  /**
   * listEntitySchemas - List entity schemas
   *
   * List entity schemas
   */
  'listEntitySchemas'(
    parameters?: Parameters<Paths.ListEntitySchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEntitySchemas.Responses.$200>
  /**
   * getEntitySchema - Get an entity schema by ID
   *
   * Get an entity schema by ID
   */
  'getEntitySchema'(
    parameters?: Parameters<Paths.GetEntitySchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetEntitySchema.Responses.$200>
  /**
   * listEntries - List entries
   *
   * List notebook entries
   */
  'listEntries'(
    parameters?: Parameters<Paths.ListEntries.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEntries.Responses.$200>
  /**
   * createEntry - Create a notebook entry
   *
   * Create a notebook entry
   */
  'createEntry'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateEntry.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateEntry.Responses.$201>
  /**
   * getEntry - Get a notebook entry by ID
   *
   * Get a notebook entry by ID
   */
  'getEntry'(
    parameters?: Parameters<Paths.GetEntry.PathParameters & Paths.GetEntry.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetEntry.Responses.$200>
  /**
   * updateEntry - Update a notebook entry's metadata
   *
   * Update a notebook entry's metadata
   */
  'updateEntry'(
    parameters?: Parameters<Paths.UpdateEntry.PathParameters & Paths.UpdateEntry.QueryParameters> | null,
    data?: Paths.UpdateEntry.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateEntry.Responses.$200>
  /**
   * getExternalFileMetadata - Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file.
   *
   *
   * Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file. (Expand the schema view for details)
   *
   */
  'getExternalFileMetadata'(
    parameters?: Parameters<Paths.GetExternalFileMetadata.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetExternalFileMetadata.Responses.$200>
  /**
   * archiveEntries - Archive notebook entries
   *
   * Archive notebook entries
   */
  'archiveEntries'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveEntries.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveEntries.Responses.$200>
  /**
   * bulkGetEntries - Get notebook entries using entry IDs or display IDs
   *
   * Get notebook entries using entry IDs or display IDs
   */
  'bulkGetEntries'(
    parameters?: Parameters<Paths.BulkGetEntries.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetEntries.Responses.$200>
  /**
   * unarchiveEntries - Unarchive notebook entries
   *
   * Unarchive notebook entries
   */
  'unarchiveEntries'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveEntries.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveEntries.Responses.$200>
  /**
   * listEntrySchemas - List entry schemas
   *
   * List entry schemas
   */
  'listEntrySchemas'(
    parameters?: Parameters<Paths.ListEntrySchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEntrySchemas.Responses.$200>
  /**
   * getEntrySchema - Get an Entry schema by ID
   *
   * Get an Entry schema by ID
   */
  'getEntrySchema'(
    parameters?: Parameters<Paths.GetEntrySchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetEntrySchema.Responses.$200>
  /**
   * listEntryTemplates - List entry templates
   *
   * List entry templates
   */
  'listEntryTemplates'(
    parameters?: Parameters<Paths.ListEntryTemplates.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEntryTemplates.Responses.$200>
  /**
   * getEntryTemplate - Get a notebook template entry by ID
   *
   * Get a notebook template entry by ID
   */
  'getEntryTemplate'(
    parameters?: Parameters<Paths.GetEntryTemplate.PathParameters & Paths.GetEntryTemplate.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetEntryTemplate.Responses.$200>
  /**
   * listEvents - List Events
   *
   * List Events
   *
   * ## Event Sort Order
   *
   * Events in Benchling are assigned a stable sort order that reflects when the event was processed (not created). The createdAt time is not the stable sorted order of events. For this reason event createdAt time may appear out of order.
   *
   */
  'listEvents'(
    parameters?: Parameters<Paths.ListEvents.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEvents.Responses.$200>
  /**
   * exportItem - Export Item
   *
   * This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
   * The task response contains a link to download the exported item from Amazon S3. The download is a ZIP file that contains the exported PDFs.
   *
   */
  'exportItem'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ExportItem.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ExportItem.Responses.$202>
  /**
   * listFeatureLibraries - List Feature Libraries
   *
   * List Feature Libraries
   */
  'listFeatureLibraries'(
    parameters?: Parameters<Paths.ListFeatureLibraries.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListFeatureLibraries.Responses.$200>
  /**
   * createFeatureLibrary - Create a Feature Library
   *
   * Create a Feature Library
   */
  'createFeatureLibrary'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateFeatureLibrary.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateFeatureLibrary.Responses.$201>
  /**
   * getFeatureLibrary - Get a feature library by ID
   *
   * Get a feature library by ID
   */
  'getFeatureLibrary'(
    parameters?: Parameters<Paths.GetFeatureLibrary.PathParameters & Paths.GetFeatureLibrary.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetFeatureLibrary.Responses.$200>
  /**
   * updateFeatureLibrary - Update a feature library
   *
   * Update a feature library. Note: Features cannot be updated from this endpoint.
   * Use the /features* endpoints to add or modify features.
   *
   */
  'updateFeatureLibrary'(
    parameters?: Parameters<Paths.UpdateFeatureLibrary.PathParameters> | null,
    data?: Paths.UpdateFeatureLibrary.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateFeatureLibrary.Responses.$200>
  /**
   * listFeatures - List Features
   *
   * List Features
   */
  'listFeatures'(
    parameters?: Parameters<Paths.ListFeatures.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListFeatures.Responses.$200>
  /**
   * createFeature - Create a Feature
   *
   * Create a Feature
   */
  'createFeature'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateFeature.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateFeature.Responses.$201>
  /**
   * getFeature - Get a feature by ID
   *
   * Get a feature by ID
   */
  'getFeature'(
    parameters?: Parameters<Paths.GetFeature.PathParameters & Paths.GetFeature.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetFeature.Responses.$200>
  /**
   * updateFeature - Update a feature
   *
   * Update a feature
   */
  'updateFeature'(
    parameters?: Parameters<Paths.UpdateFeature.PathParameters> | null,
    data?: Paths.UpdateFeature.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateFeature.Responses.$200>
  /**
   * bulkCreateFeatures - Bulk create Features
   *
   * Bulk create Features
   */
  'bulkCreateFeatures'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateFeatures.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateFeatures.Responses.$202>
  /**
   * listFolders - List folders
   *
   * List folders
   */
  'listFolders'(
    parameters?: Parameters<Paths.ListFolders.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListFolders.Responses.$200>
  /**
   * createFolder - Create folder
   *
   * Create folder
   */
  'createFolder'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateFolder.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateFolder.Responses.$201>
  /**
   * getFolder - Get a folder by ID
   *
   * Get a folder by ID
   */
  'getFolder'(
    parameters?: Parameters<Paths.GetFolder.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetFolder.Responses.$200>
  /**
   * archiveFolders - Archive folders
   *
   * Archives folders and their contents
   */
  'archiveFolders'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveFolders.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveFolders.Responses.$200>
  /**
   * unarchiveFolders - Unarchive folders
   *
   * Unarchives folders and the contents that were archived along with them
   */
  'unarchiveFolders'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveFolders.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveFolders.Responses.$200>
  /**
   * listLegacyWorkflowStageRunInputSamples - List legacy workflow stage run input samples
   *
   * List legacy workflow stage run input samples
   */
  'listLegacyWorkflowStageRunInputSamples'(
    parameters?: Parameters<Paths.ListLegacyWorkflowStageRunInputSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflowStageRunInputSamples.Responses.$200>
  /**
   * listLegacyWorkflowStageRunOutputSamples - List legacy workflow stage run output samples
   *
   * List legacy workflow stage run output samples
   */
  'listLegacyWorkflowStageRunOutputSamples'(
    parameters?: Parameters<Paths.ListLegacyWorkflowStageRunOutputSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflowStageRunOutputSamples.Responses.$200>
  /**
   * listLegacyWorkflowStageRunRegisteredSamples - List legacy workflow stage run registered samples
   *
   * List legacy workflow stage run registered samples
   */
  'listLegacyWorkflowStageRunRegisteredSamples'(
    parameters?: Parameters<Paths.ListLegacyWorkflowStageRunRegisteredSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflowStageRunRegisteredSamples.Responses.$200>
  /**
   * listLegacyWorkflowStageRuns - List legacy workflow stage runs
   *
   * List legacy workflow stage runs
   */
  'listLegacyWorkflowStageRuns'(
    parameters?: Parameters<Paths.ListLegacyWorkflowStageRuns.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflowStageRuns.Responses.$200>
  /**
   * listLegacyWorkflows - List legacy workflows
   *
   * List legacy workflows
   */
  'listLegacyWorkflows'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflows.Responses.$200>
  /**
   * UpdateLegacyWorkflowMetadata - Update legacy workflow
   *
   * Update workflow metadata
   */
  'UpdateLegacyWorkflowMetadata'(
    parameters?: Parameters<Paths.UpdateLegacyWorkflowMetadata.PathParameters> | null,
    data?: Paths.UpdateLegacyWorkflowMetadata.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateLegacyWorkflowMetadata.Responses.$200>
  /**
   * listLegacyWorkflowStages - List legacy workflow stages
   *
   * List legacy workflow stages
   */
  'listLegacyWorkflowStages'(
    parameters?: Parameters<Paths.ListLegacyWorkflowStages.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLegacyWorkflowStages.Responses.$200>
  /**
   * listLocationSchemas - List location schemas
   *
   * List location schemas
   */
  'listLocationSchemas'(
    parameters?: Parameters<Paths.ListLocationSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLocationSchemas.Responses.$200>
  /**
   * getLocationSchema - Get a location schema by ID
   *
   * Get a location schema by ID
   */
  'getLocationSchema'(
    parameters?: Parameters<Paths.GetLocationSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetLocationSchema.Responses.$200>
  /**
   * listLocations - List locations
   *
   * List locations
   */
  'listLocations'(
    parameters?: Parameters<Paths.ListLocations.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLocations.Responses.$200>
  /**
   * createLocation - Create a location
   *
   * Create a location
   */
  'createLocation'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateLocation.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateLocation.Responses.$201>
  /**
   * getLocation - Get a location by ID
   *
   * Get a location by ID
   */
  'getLocation'(
    parameters?: Parameters<Paths.GetLocation.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetLocation.Responses.$200>
  /**
   * updateLocation - Update a location
   *
   * Update a location
   */
  'updateLocation'(
    parameters?: Parameters<Paths.UpdateLocation.PathParameters> | null,
    data?: Paths.UpdateLocation.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateLocation.Responses.$200>
  /**
   * archiveLocations - Archive locations
   *
   * Archive locations
   */
  'archiveLocations'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveLocations.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveLocations.Responses.$200>
  /**
   * bulkGetLocations - BulkGet locations
   *
   * BulkGet locations
   */
  'bulkGetLocations'(
    parameters?: Parameters<Paths.BulkGetLocations.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetLocations.Responses.$200>
  /**
   * unarchiveLocations - Unarchive locations
   *
   * Unarchive locations
   */
  'unarchiveLocations'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveLocations.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveLocations.Responses.$200>
  /**
   * listMixtures - List mixtures
   *
   * List mixtures
   */
  'listMixtures'(
    parameters?: Parameters<Paths.ListMixtures.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListMixtures.Responses.$200>
  /**
   * createMixture - Create a mixture
   *
   * Create a mixture.
   * To create a new child mixture (eg. a prep) from a parent mixture (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
   * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
   *
   */
  'createMixture'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateMixture.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateMixture.Responses.$201>
  /**
   * getMixture - Get a mixture
   *
   * Get a mixture
   */
  'getMixture'(
    parameters?: Parameters<Paths.GetMixture.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetMixture.Responses.$200>
  /**
   * updateMixture - Update a mixture
   *
   * Update a mixture.
   * To change the parent mixture, set the parent mixture field and specify the desired final state for your ingredients.
   * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
   *
   */
  'updateMixture'(
    parameters?: Parameters<Paths.UpdateMixture.PathParameters> | null,
    data?: Paths.UpdateMixture.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateMixture.Responses.$200>
  /**
   * archiveMixtures - Archive mixtures
   *
   * Archive mixtures
   */
  'archiveMixtures'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveMixtures.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveMixtures.Responses.$200>
  /**
   * bulkCreateMixtures - Bulk Create mixtures
   *
   * Create multiple mixtures. Limit of 1000 mixtures per request.
   * To create new child mixtures (eg. a prep) from parent mixtures (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
   * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
   *
   */
  'bulkCreateMixtures'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateMixtures.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateMixtures.Responses.$202>
  /**
   * bulkUpdateMixtures - Bulk Update mixtures
   *
   * Update multiple mixtures.
   * To change the parent mixture on your specified mixtures, set the parent mixture field and specify the desired final state for your ingredients.
   * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
   *
   */
  'bulkUpdateMixtures'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateMixtures.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateMixtures.Responses.$202>
  /**
   * unarchiveMixtures - Unarchive mixtures
   *
   * Unarchive mixtures
   */
  'unarchiveMixtures'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveMixtures.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveMixtures.Responses.$200>
  /**
   * listMolecules - List Molecules
   *
   * List molecules
   */
  'listMolecules'(
    parameters?: Parameters<Paths.ListMolecules.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListMolecules.Responses.$200>
  /**
   * createMolecule - Create a Molecule
   *
   * Create a Molecule
   */
  'createMolecule'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateMolecule.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateMolecule.Responses.$201>
  /**
   * getMolecule - Get a Molecule
   *
   * Get a Molecule
   */
  'getMolecule'(
    parameters?: Parameters<Paths.GetMolecule.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetMolecule.Responses.$200>
  /**
   * updateMolecule - Update a Molecule
   *
   * Update a Molecule
   */
  'updateMolecule'(
    parameters?: Parameters<Paths.UpdateMolecule.PathParameters> | null,
    data?: Paths.UpdateMolecule.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateMolecule.Responses.$200>
  /**
   * archiveMolecules - Archive Molecules
   *
   * Archive Molecules
   */
  'archiveMolecules'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveMolecules.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveMolecules.Responses.$200>
  /**
   * bulkCreateMolecules - Bulk Create Molecules
   *
   * Bulk Create Molecules
   */
  'bulkCreateMolecules'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateMolecules.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateMolecules.Responses.$202>
  /**
   * bulkUpdateMolecules - Bulk Update Molecules
   *
   * Bulk Update Molecules
   */
  'bulkUpdateMolecules'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateMolecules.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateMolecules.Responses.$202>
  /**
   * unarchiveMolecules - Unarchive Molecules
   *
   * Unarchive Molecules
   */
  'unarchiveMolecules'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveMolecules.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveMolecules.Responses.$200>
  /**
   * listMonomers - List Monomers
   *
   * List all available monomers
   */
  'listMonomers'(
    parameters?: Parameters<Paths.ListMonomers.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListMonomers.Responses.$200>
  /**
   * createMonomer - Create a monomer
   *
   * Create a monomer. Not usable by Benchling apps.
   */
  'createMonomer'(
    parameters?: Parameters<Paths.CreateMonomer.QueryParameters> | null,
    data?: Paths.CreateMonomer.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateMonomer.Responses.$201>
  /**
   * updateMonomer - Update a Monomer
   *
   * Update a Monomer. Not usable by Benchling apps.
   */
  'updateMonomer'(
    parameters?: Parameters<Paths.UpdateMonomer.PathParameters & Paths.UpdateMonomer.QueryParameters> | null,
    data?: Paths.UpdateMonomer.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateMonomer.Responses.$200>
  /**
   * archiveMonomers - Archive Monomers
   *
   * Archive Monomers. Not usable by Benchling apps.
   */
  'archiveMonomers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveMonomers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveMonomers.Responses.$200>
  /**
   * unarchiveMonomers - Unarchive Monomers
   *
   * Unarchive Monomers. Not usable by Benchling apps.
   */
  'unarchiveMonomers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveMonomers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveMonomers.Responses.$200>
  /**
   * listNucleotideAlignments - List Nucleotide Alignments
   *
   * List Nucleotide Alignments
   */
  'listNucleotideAlignments'(
    parameters?: Parameters<Paths.ListNucleotideAlignments.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListNucleotideAlignments.Responses.$200>
  /**
   * getNucleotideAlignment - Get a Nucleotide Alignment
   *
   * Get a Nucleotide Alignment
   */
  'getNucleotideAlignment'(
    parameters?: Parameters<Paths.GetNucleotideAlignment.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetNucleotideAlignment.Responses.$200>
  /**
   * deleteNucleotideAlignment - Delete a Nucleotide Alignment
   *
   * Delete a Nucleotide Alignment
   */
  'deleteNucleotideAlignment'(
    parameters?: Parameters<Paths.DeleteNucleotideAlignment.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.DeleteNucleotideAlignment.Responses.$200>
  /**
   * createConsensusNucleotideAlignment - Create a consensus Nucleotide Alignment
   *
   * Create a consensus Nucleotide Alignment
   */
  'createConsensusNucleotideAlignment'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateConsensusNucleotideAlignment.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateConsensusNucleotideAlignment.Responses.$202>
  /**
   * createTemplateNucleotideAlignment - Create a template Nucleotide Alignment
   *
   * Create a template Nucleotide Alignment
   */
  'createTemplateNucleotideAlignment'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateTemplateNucleotideAlignment.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateTemplateNucleotideAlignment.Responses.$202>
  /**
   * listOligos - List Oligos
   *
   * List Oligos
   */
  'listOligos'(
    parameters?: Parameters<Paths.ListOligos.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListOligos.Responses.$200>
  /**
   * createOligo - Create an Oligo
   *
   * Create an Oligo
   */
  'createOligo'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateOligo.Responses.$201>
  /**
   * getOligo - Get an Oligo
   *
   * Get an Oligo
   */
  'getOligo'(
    parameters?: Parameters<Paths.GetOligo.PathParameters & Paths.GetOligo.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetOligo.Responses.$200>
  /**
   * updateOligo - Update an Oligo
   *
   * Update an Oligo
   */
  'updateOligo'(
    parameters?: Parameters<Paths.UpdateOligo.PathParameters> | null,
    data?: Paths.UpdateOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateOligo.Responses.$200>
  /**
   * archiveOligos - Archive Oligos
   *
   * Archive Oligos
   */
  'archiveOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveOligos.Responses.$200>
  /**
   * bulkCreateOligos - Bulk Create DNA Oligos
   *
   * Bulk Create DNA Oligos
   * Please migrate to [Bulk Create DNA Oligos](#/DNA%20Oligos/bulkCreateDNAOligos) so that we can support RNA Oligos.
   *
   */
  'bulkCreateOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateOligos.Responses.$202>
  /**
   * bulkGetOligos - Bulk get Oligos by ID
   *
   * Bulk get Oligos by ID
   */
  'bulkGetOligos'(
    parameters?: Parameters<Paths.BulkGetOligos.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetOligos.Responses.$200>
  /**
   * unarchiveOligos - Unarchive Oligos
   *
   * Unarchive Oligos
   */
  'unarchiveOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveOligos.Responses.$200>
  /**
   * listOrganizations - List organizations
   *
   * Returns all organizations that the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of the organization
   *
   */
  'listOrganizations'(
    parameters?: Parameters<Paths.ListOrganizations.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListOrganizations.Responses.$200>
  /**
   * getOrganization - Get an organization by ID
   *
   * Returns an organization by ID if the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of the organization
   *
   */
  'getOrganization'(
    parameters?: Parameters<Paths.GetOrganization.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetOrganization.Responses.$200>
  /**
   * listPlateSchemas - List plate schemas
   *
   * List plate schemas
   */
  'listPlateSchemas'(
    parameters?: Parameters<Paths.ListPlateSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListPlateSchemas.Responses.$200>
  /**
   * getPlateSchema - Get a plate schema by ID
   *
   * Get a plate schema by ID
   */
  'getPlateSchema'(
    parameters?: Parameters<Paths.GetPlateSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetPlateSchema.Responses.$200>
  /**
   * listPlates - List plates
   *
   * List plates
   */
  'listPlates'(
    parameters?: Parameters<Paths.ListPlates.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListPlates.Responses.$200>
  /**
   * createPlate - Create a plate
   *
   * Create a plate
   */
  'createPlate'(
    parameters?: Parameters<Paths.CreatePlate.QueryParameters> | null,
    data?: Paths.CreatePlate.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreatePlate.Responses.$201>
  /**
   * getPlate - Get a plate
   *
   * Get a plate
   */
  'getPlate'(
    parameters?: Parameters<Paths.GetPlate.PathParameters & Paths.GetPlate.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetPlate.Responses.$200>
  /**
   * updatePlate - Update a plate
   *
   * Update a plate
   */
  'updatePlate'(
    parameters?: Parameters<Paths.UpdatePlate.PathParameters & Paths.UpdatePlate.QueryParameters> | null,
    data?: Paths.UpdatePlate.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdatePlate.Responses.$200>
  /**
   * archivePlates - Archive plates
   *
   * Archive plates and any containers of the plates
   */
  'archivePlates'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchivePlates.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchivePlates.Responses.$200>
  /**
   * bulkGetPlates - BulkGet plates
   *
   * BulkGet plates
   */
  'bulkGetPlates'(
    parameters?: Parameters<Paths.BulkGetPlates.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetPlates.Responses.$200>
  /**
   * unarchivePlates - Unarchive plates
   *
   * Unarchive plates and the containers that were archived along with them
   */
  'unarchivePlates'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchivePlates.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchivePlates.Responses.$200>
  /**
   * listProjects - List projects
   *
   * List projects
   */
  'listProjects'(
    parameters?: Parameters<Paths.ListProjects.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListProjects.Responses.$200>
  /**
   * getProject - Get a project by ID
   *
   * Get a project by ID
   */
  'getProject'(
    parameters?: Parameters<Paths.GetProject.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetProject.Responses.$200>
  /**
   * archiveProjects - Archive projects
   *
   * Archives projects and their contents
   */
  'archiveProjects'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveProjects.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveProjects.Responses.$200>
  /**
   * unarchiveProjects - Unarchive projects
   *
   * Unarchives projects and the contents that were archived along with them
   */
  'unarchiveProjects'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveProjects.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveProjects.Responses.$200>
  /**
   * listRegistries - List registries
   *
   * List registries
   */
  'listRegistries'(
    parameters?: Parameters<Paths.ListRegistries.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRegistries.Responses.$200>
  /**
   * getRegistry - Get registry
   *
   * Get registry
   */
  'getRegistry'(
    parameters?: Parameters<Paths.GetRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRegistry.Responses.$200>
  /**
   * listBatchSchemasByRegistry - List batch schemas by registry
   *
   * List batch schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listBatchSchemasByRegistry'(
    parameters?: Parameters<Paths.ListBatchSchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBatchSchemasByRegistry.Responses.$200>
  /**
   * listBoxSchemasByRegistry - List box schemas by registry
   *
   * List box schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listBoxSchemasByRegistry'(
    parameters?: Parameters<Paths.ListBoxSchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListBoxSchemasByRegistry.Responses.$200>
  /**
   * listContainerSchemasByRegistry - List container schemas by registry
   *
   * List container schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listContainerSchemasByRegistry'(
    parameters?: Parameters<Paths.ListContainerSchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListContainerSchemasByRegistry.Responses.$200>
  /**
   * listDropdownsByRegistry - List dropdowns for a given registry
   *
   * List dropdowns by registry
   */
  'listDropdownsByRegistry'(
    parameters?: Parameters<Paths.ListDropdownsByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListDropdownsByRegistry.Responses.$200>
  /**
   * listEntitySchemasByRegistry - List entity schemas by registry
   *
   * List entity schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listEntitySchemasByRegistry'(
    parameters?: Parameters<Paths.ListEntitySchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListEntitySchemasByRegistry.Responses.$200>
  /**
   * listPrinters - List printers
   *
   * List printers
   */
  'listPrinters'(
    parameters?: Parameters<Paths.ListPrinters.PathParameters & Paths.ListPrinters.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListPrinters.Responses.$200>
  /**
   * listLabelTemplates - List label templates
   *
   * List label templates
   */
  'listLabelTemplates'(
    parameters?: Parameters<Paths.ListLabelTemplates.PathParameters & Paths.ListLabelTemplates.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLabelTemplates.Responses.$200>
  /**
   * listLocationSchemasByRegistry - List location schemas by registry
   *
   * List location schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listLocationSchemasByRegistry'(
    parameters?: Parameters<Paths.ListLocationSchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListLocationSchemasByRegistry.Responses.$200>
  /**
   * listPlateSchemasByRegistry - List plate schemas by registry
   *
   * List plate schemas by registry. Deprecated - use Schemas endpoints instead.
   */
  'listPlateSchemasByRegistry'(
    parameters?: Parameters<Paths.ListPlateSchemasByRegistry.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListPlateSchemasByRegistry.Responses.$200>
  /**
   * bulkGetRegisteredEntities - Bulk get registered entities
   *
   * Bulk get registered entities
   */
  'bulkGetRegisteredEntities'(
    parameters?: Parameters<Paths.BulkGetRegisteredEntities.PathParameters & Paths.BulkGetRegisteredEntities.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetRegisteredEntities.Responses.$200>
  /**
   * registerEntities - Register entities
   *
   * Attempts to move entities into the registry. Limit of 2500 entities per request. This endpoint will first check that the entities are all valid to be moved into the registry, given the namingStrategy. If any entities fail validation, no files will be moved and errors describing invalid entities is returned. If all entities pass validation, the entities are moved into the registry.
   *
   */
  'registerEntities'(
    parameters?: Parameters<Paths.RegisterEntities.PathParameters> | null,
    data?: Paths.RegisterEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.RegisterEntities.Responses.$202>
  /**
   * unregisterEntities - Unregister entities
   *
   * Unregisters entities and moves them to a folder
   */
  'unregisterEntities'(
    parameters?: Parameters<Paths.UnregisterEntities.PathParameters> | null,
    data?: Paths.UnregisterEntities.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnregisterEntities.Responses.$200>
  /**
   * validateBarcodes - Validate barcodes
   *
   * Validate barcodes on inventory objects.
   */
  'validateBarcodes'(
    parameters?: Parameters<Paths.ValidateBarcodes.PathParameters> | null,
    data?: Paths.ValidateBarcodes.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ValidateBarcodes.Responses.$200>
  /**
   * listRequestFulfillments - List Request Fulfillments
   *
   * List Request Fulfillments
   */
  'listRequestFulfillments'(
    parameters?: Parameters<Paths.ListRequestFulfillments.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRequestFulfillments.Responses.$200>
  /**
   * getRequestFulfillment - Get a request's fulfillment
   *
   * Get a request's fulfillment
   */
  'getRequestFulfillment'(
    parameters?: Parameters<Paths.GetRequestFulfillment.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRequestFulfillment.Responses.$200>
  /**
   * listRequestSchemas - List request schemas
   *
   * List request schemas
   */
  'listRequestSchemas'(
    parameters?: Parameters<Paths.ListRequestSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRequestSchemas.Responses.$200>
  /**
   * getRequestSchema - Get a Request schema by ID
   *
   * Get a Request schema by ID
   */
  'getRequestSchema'(
    parameters?: Parameters<Paths.GetRequestSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRequestSchema.Responses.$200>
  /**
   * listRequestTaskSchemas - List request task schemas
   *
   * List request task schemas
   */
  'listRequestTaskSchemas'(
    parameters?: Parameters<Paths.ListRequestTaskSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRequestTaskSchemas.Responses.$200>
  /**
   * getRequestTaskSchema - Get a Request Task schema by ID
   *
   * Get a Request Task schema by ID
   */
  'getRequestTaskSchema'(
    parameters?: Parameters<Paths.GetRequestTaskSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRequestTaskSchema.Responses.$200>
  /**
   * listRequests - List requests
   *
   * List requests
   */
  'listRequests'(
    parameters?: Parameters<Paths.ListRequests.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRequests.Responses.$200>
  /**
   * createRequest - Create a request
   *
   * Create a request
   */
  'createRequest'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateRequest.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateRequest.Responses.$201>
  /**
   * getRequest - Get a request by ID
   *
   * Get a request by ID
   */
  'getRequest'(
    parameters?: Parameters<Paths.GetRequest.PathParameters & Paths.GetRequest.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRequest.Responses.$200>
  /**
   * patchRequest - Update a request
   *
   * Update a request
   */
  'patchRequest'(
    parameters?: Parameters<Paths.PatchRequest.PathParameters> | null,
    data?: Paths.PatchRequest.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.PatchRequest.Responses.$200>
  /**
   * getRequestResponse - Get a request's response
   *
   * Get a request's response
   */
  'getRequestResponse'(
    parameters?: Parameters<Paths.GetRequestResponse.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRequestResponse.Responses.$200>
  /**
   * bulkCreateRequestTasks - Create tasks for a request
   *
   * Create tasks for a request
   */
  'bulkCreateRequestTasks'(
    parameters?: Parameters<Paths.BulkCreateRequestTasks.PathParameters> | null,
    data?: Paths.BulkCreateRequestTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateRequestTasks.Responses.$200>
  /**
   * bulkUpdateRequestTasks - Bulk update tasks for a request
   *
   * Bulk update tasks for a request
   */
  'bulkUpdateRequestTasks'(
    parameters?: Parameters<Paths.BulkUpdateRequestTasks.PathParameters> | null,
    data?: Paths.BulkUpdateRequestTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateRequestTasks.Responses.$200>
  /**
   * executeRequestsSampleGroups - Update the status of sample groups in a request
   *
   * Update the status of sample groups in a request
   */
  'executeRequestsSampleGroups'(
    parameters?: Parameters<Paths.ExecuteRequestsSampleGroups.PathParameters> | null,
    data?: Paths.ExecuteRequestsSampleGroups.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ExecuteRequestsSampleGroups.Responses.$200>
  /**
   * bulkGetRequests - Bulk get requests
   *
   * Bulk get requests by API ID or display ID
   */
  'bulkGetRequests'(
    parameters?: Parameters<Paths.BulkGetRequests.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetRequests.Responses.$200>
  /**
   * createAssayResultsTransaction - Create a transaction
   *
   * Transactions allow results to be upload in multiple requests. This endpoint lets you create a transaction. You can then upload results to the transaction, abort the transaction, or commit the transaction.
   *
   */
  'createAssayResultsTransaction'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAssayResultsTransaction.Responses.$200>
  /**
   * createAssayResultsInTransaction - Create results in a transaction
   *
   * Create results in a transaction
   */
  'createAssayResultsInTransaction'(
    parameters?: Parameters<Paths.CreateAssayResultsInTransaction.PathParameters> | null,
    data?: Paths.CreateAssayResultsInTransaction.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateAssayResultsInTransaction.Responses.$200>
  /**
   * abortAssayResultsTransaction - Abort a transaction
   *
   * Aborting a transaction will discard all uploaded results.
   */
  'abortAssayResultsTransaction'(
    parameters?: Parameters<Paths.AbortAssayResultsTransaction.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AbortAssayResultsTransaction.Responses.$200>
  /**
   * commitAssayResultsTransaction - Commit a transaction
   *
   * Committing a transaction will cause all results that have been uploaded to be saved and visible to others.
   */
  'commitAssayResultsTransaction'(
    parameters?: Parameters<Paths.CommitAssayResultsTransaction.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CommitAssayResultsTransaction.Responses.$200>
  /**
   * listRNAOligos - List RNA Oligos
   *
   * List RNA Oligos
   */
  'listRNAOligos'(
    parameters?: Parameters<Paths.ListRNAOligos.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRNAOligos.Responses.$200>
  /**
   * createRNAOligo - Create an RNA Oligo
   *
   * Create an RNA Oligo
   */
  'createRNAOligo'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateRNAOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateRNAOligo.Responses.$201>
  /**
   * getRNAOligo - Get an RNA Oligo
   *
   * Get an RNA Oligo
   */
  'getRNAOligo'(
    parameters?: Parameters<Paths.GetRNAOligo.PathParameters & Paths.GetRNAOligo.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRNAOligo.Responses.$200>
  /**
   * updateRNAOligo - Update an RNA Oligo
   *
   * Update an RNA Oligo
   */
  'updateRNAOligo'(
    parameters?: Parameters<Paths.UpdateRNAOligo.PathParameters> | null,
    data?: Paths.UpdateRNAOligo.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateRNAOligo.Responses.$200>
  /**
   * archiveRNAOligos - Archive RNA Oligos
   *
   * Archive RNA Oligos
   */
  'archiveRNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveRNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveRNAOligos.Responses.$200>
  /**
   * bulkCreateRNAOligos - Bulk Create RNA Oligos
   *
   * Bulk Create RNA Oligos. Limit of 1000 RNA Oligos per request.
   */
  'bulkCreateRNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateRNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateRNAOligos.Responses.$202>
  /**
   * bulkUpdateRNAOligos - Bulk Update RNA Oligos
   *
   * Bulk Update RNA Oligos
   */
  'bulkUpdateRNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateRNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateRNAOligos.Responses.$202>
  /**
   * unarchiveRNAOligos - Unarchive RNA Oligos
   *
   * Unarchive RNA Oligos
   */
  'unarchiveRNAOligos'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveRNAOligos.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveRNAOligos.Responses.$200>
  /**
   * listRNASequences - List RNA sequences
   *
   * List RNA sequences
   */
  'listRNASequences'(
    parameters?: Parameters<Paths.ListRNASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListRNASequences.Responses.$200>
  /**
   * createRNASequence - Create an RNA sequence
   *
   * Create an RNA sequence
   */
  'createRNASequence'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateRNASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateRNASequence.Responses.$201>
  /**
   * getRNASequence - Get an RNA sequence
   *
   * Get an RNA sequence
   */
  'getRNASequence'(
    parameters?: Parameters<Paths.GetRNASequence.PathParameters & Paths.GetRNASequence.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetRNASequence.Responses.$200>
  /**
   * updateRNASequence - Update an RNA sequence
   *
   * Update an RNA sequence
   */
  'updateRNASequence'(
    parameters?: Parameters<Paths.UpdateRNASequence.PathParameters> | null,
    data?: Paths.UpdateRNASequence.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateRNASequence.Responses.$200>
  /**
   * archiveRNASequences - Archive RNA Sequences
   *
   * Archive RNA Sequences. RNA sequences that are already registered will not be removed from the registry.
   */
  'archiveRNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveRNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveRNASequences.Responses.$200>
  /**
   * autoAnnotateRnaSequences - Auto-annotate RNA sequences with matching features from specified Feature Libraries
   *
   * Auto-annotate RNA sequences with matching features from specified Feature Libraries. U/T bases are treated as interchangeable in both features and sequences.
   */
  'autoAnnotateRnaSequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutoAnnotateRnaSequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutoAnnotateRnaSequences.Responses.$202>
  /**
   * autofillRNASequenceParts - Autofill RNA sequence parts
   *
   * Autofill parts from matching RNA Sequences with linked schemas.
   */
  'autofillRNASequenceParts'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutofillRNASequenceParts.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutofillRNASequenceParts.Responses.$202>
  /**
   * autofillRNASequenceTranslations - Autofill RNA sequence translations from Amino Acid sequences with matching schemas
   *
   * Autofill RNA sequence translations
   */
  'autofillRNASequenceTranslations'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.AutofillRNASequenceTranslations.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.AutofillRNASequenceTranslations.Responses.$202>
  /**
   * bulkCreateRNASequences - Bulk Create RNA sequences
   *
   * Bulk Create RNA sequences. Limit of 1000 RNA Sequences per request.
   */
  'bulkCreateRNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateRNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateRNASequences.Responses.$202>
  /**
   * bulkGetRNASequences - Bulk get RNA sequences by ID
   *
   * Bulk get RNA sequences by ID
   */
  'bulkGetRNASequences'(
    parameters?: Parameters<Paths.BulkGetRNASequences.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkGetRNASequences.Responses.$200>
  /**
   * bulkUpdateRNASequences - Bulk Update RNA sequences
   *
   * Bulk Update RNA sequences
   */
  'bulkUpdateRNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateRNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateRNASequences.Responses.$202>
  /**
   * unarchiveRNASequences - Unarchive RNA sequences
   *
   * Unarchive RNA sequences
   */
  'unarchiveRNASequences'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveRNASequences.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveRNASequences.Responses.$200>
  /**
   * getTask - Get a task by id
   *
   * Get a task by id
   */
  'getTask'(
    parameters?: Parameters<Paths.GetTask.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetTask.Responses.$200>
  /**
   * listTeams - List teams
   *
   * Returns all teams that the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of the team's organization
   *
   */
  'listTeams'(
    parameters?: Parameters<Paths.ListTeams.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListTeams.Responses.$200>
  /**
   * getTeam - Get a team by ID
   *
   * Returns a team by ID if the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of the team's organization
   *
   */
  'getTeam'(
    parameters?: Parameters<Paths.GetTeam.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetTeam.Responses.$200>
  /**
   * generateToken - Generate a token for usage with authenticating via OAuth2 in subsequent API calls.
   *
   * Generate a token
   */
  'generateToken'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.GenerateToken.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GenerateToken.Responses.$200>
  /**
   * transferIntoContainers - Transfers into containers
   *
   * Transfers a volume of an entity, batch, or container into a destination container. Limit of 5000 transfers per request. Concentration of all contents in the destination container will be automatically updated based on the previous volume & concentrations of the contents in that container, the concentration of the contents being transferred in, the volume of the contents being transferred in, and the final volume of the container. If no concentration is specified, the concentration will not be tracked.
   *
   */
  'transferIntoContainers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.TransferIntoContainers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.TransferIntoContainers.Responses.$202>
  /**
   * listUsers - List users
   *
   * Returns all users that the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of the user's organizations
   *
   */
  'listUsers'(
    parameters?: Parameters<Paths.ListUsers.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListUsers.Responses.$200>
  /**
   * createUser - Create a user
   *
   * Creates a single user.
   */
  'createUser'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateUser.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateUser.Responses.$201>
  /**
   * getUser - Get a user by ID
   *
   * Returns a user by ID if the caller has permission to view. The following roles have view permission:
   *   - tenant admins
   *   - members of any of the user's organizations
   *
   */
  'getUser'(
    parameters?: Parameters<Paths.GetUser.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetUser.Responses.$200>
  /**
   * updateUser - Update a user by ID
   *
   * Update a single user.
   */
  'updateUser'(
    parameters?: Parameters<Paths.UpdateUser.PathParameters> | null,
    data?: Paths.UpdateUser.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateUser.Responses.$200>
  /**
   * getUserActivity - Last user activity
   *
   * Returns activity metadata for a specific user by ID. This currently includes lastSeen data.
   *
   */
  'getUserActivity'(
    parameters?: Parameters<Paths.GetUserActivity.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetUserActivity.Responses.$200>
  /**
   * bulkCreateUsers - Bulk Create Users
   *
   * Bulk Create Users.
   */
  'bulkCreateUsers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateUsers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateUsers.Responses.$202>
  /**
   * bulkUpdateUsers - Bulk Update Users.
   *
   * There is currently **no support** for swapping emails or handles between existing users in the same request.
   *
   */
  'bulkUpdateUsers'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateUsers.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateUsers.Responses.$202>
  /**
   * createWarehouseCredentials - Create Benchling Warehouse credentials
   *
   * Allows for programmatically generating credentials to connect to the Benchling warehouse. You must have a warehouse configured to access this endpoint.
   * The credentials will authenticate as the same user calling the API.
   * Note that expiresIn is required - only temporary credentials are currently allowed.
   *
   */
  'createWarehouseCredentials'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateWarehouseCredentials.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateWarehouseCredentials.Responses.$200>
  /**
   * listWorkflowOutputs - List workflow outputs
   *
   * List workflow outputs
   */
  'listWorkflowOutputs'(
    parameters?: Parameters<Paths.ListWorkflowOutputs.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowOutputs.Responses.$200>
  /**
   * createWorkflowOutput - Create a new workflow output
   *
   * Create a new workflow output
   */
  'createWorkflowOutput'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateWorkflowOutput.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateWorkflowOutput.Responses.$201>
  /**
   * getWorkflowOutput - Get a workflow output
   *
   * Get a workflow output
   */
  'getWorkflowOutput'(
    parameters?: Parameters<Paths.GetWorkflowOutput.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetWorkflowOutput.Responses.$200>
  /**
   * updateWorkflowOutput - Update a workflow output
   *
   * Update a workflow output
   */
  'updateWorkflowOutput'(
    parameters?: Parameters<Paths.UpdateWorkflowOutput.PathParameters> | null,
    data?: Paths.UpdateWorkflowOutput.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateWorkflowOutput.Responses.$200>
  /**
   * archiveWorkflowOutputs - Archive one or more workflow outputs
   *
   * Archive one or more workflow outputs
   */
  'archiveWorkflowOutputs'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveWorkflowOutputs.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveWorkflowOutputs.Responses.$200>
  /**
   * bulkCreateWorkflowOutputs - Bulk create new workflow outputs
   *
   * Bulk create new workflow outputs
   */
  'bulkCreateWorkflowOutputs'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateWorkflowOutputs.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateWorkflowOutputs.Responses.$202>
  /**
   * bulkUpdateWorkflowOutputs - Bulk update workflow outputs
   *
   * Bulk update workflow outputs
   */
  'bulkUpdateWorkflowOutputs'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateWorkflowOutputs.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateWorkflowOutputs.Responses.$202>
  /**
   * unarchiveWorkflowOutputs - Unarchive one or more workflow outputs
   *
   * Unarchive one or more workflow outputs
   */
  'unarchiveWorkflowOutputs'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveWorkflowOutputs.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveWorkflowOutputs.Responses.$200>
  /**
   * listStageRunInputSamples - List stage run input samples
   *
   * List stage run input samples
   */
  'listStageRunInputSamples'(
    parameters?: Parameters<Paths.ListStageRunInputSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListStageRunInputSamples.Responses.$200>
  /**
   * listStageRunOutputSamples - List stage run output samples
   *
   * List stage run output samples
   */
  'listStageRunOutputSamples'(
    parameters?: Parameters<Paths.ListStageRunOutputSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListStageRunOutputSamples.Responses.$200>
  /**
   * listStageRunRegisteredSamples - List stage run registered samples
   *
   * List stage run registered samples
   */
  'listStageRunRegisteredSamples'(
    parameters?: Parameters<Paths.ListStageRunRegisteredSamples.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListStageRunRegisteredSamples.Responses.$200>
  /**
   * listWorkflowStageRuns - List workflow stage runs
   *
   * List workflow stage runs
   */
  'listWorkflowStageRuns'(
    parameters?: Parameters<Paths.ListWorkflowStageRuns.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowStageRuns.Responses.$200>
  /**
   * listWorkflowTaskGroups - List workflow task groups
   *
   * List workflow task groups
   */
  'listWorkflowTaskGroups'(
    parameters?: Parameters<Paths.ListWorkflowTaskGroups.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowTaskGroups.Responses.$200>
  /**
   * createWorkflowTaskGroup - Create a new workflow task group
   *
   * Create a new workflow task group. If no name is specified, uses the workflow schema name and a unique incrementor separated by a single whitespace.
   */
  'createWorkflowTaskGroup'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateWorkflowTaskGroup.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateWorkflowTaskGroup.Responses.$201>
  /**
   * getWorkflowTaskGroup - Get a workflow task group
   *
   * Get a workflow task group
   */
  'getWorkflowTaskGroup'(
    parameters?: Parameters<Paths.GetWorkflowTaskGroup.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetWorkflowTaskGroup.Responses.$200>
  /**
   * updateWorkflowTaskGroup - Update a workflow task group
   *
   * Update a workflow task group
   */
  'updateWorkflowTaskGroup'(
    parameters?: Parameters<Paths.UpdateWorkflowTaskGroup.PathParameters> | null,
    data?: Paths.UpdateWorkflowTaskGroup.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateWorkflowTaskGroup.Responses.$200>
  /**
   * archiveWorkflowTaskGroups - Archive one or more workflows
   *
   * Archive one or more workflows
   */
  'archiveWorkflowTaskGroups'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveWorkflowTaskGroups.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveWorkflowTaskGroups.Responses.$200>
  /**
   * unarchiveWorkflowTaskGroups - Unarchive one or more workflows
   *
   * Unarchive one or more workflows
   */
  'unarchiveWorkflowTaskGroups'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveWorkflowTaskGroups.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveWorkflowTaskGroups.Responses.$200>
  /**
   * listWorkflowTaskSchemas - List workflow task schemas
   *
   * List workflow task schemas
   */
  'listWorkflowTaskSchemas'(
    parameters?: Parameters<Paths.ListWorkflowTaskSchemas.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowTaskSchemas.Responses.$200>
  /**
   * getWorkflowTaskSchema - Get a workflow task schema
   *
   * Get a workflow task schema
   */
  'getWorkflowTaskSchema'(
    parameters?: Parameters<Paths.GetWorkflowTaskSchema.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetWorkflowTaskSchema.Responses.$200>
  /**
   * listWorkflowTasks - List workflow tasks
   *
   * List workflow tasks
   */
  'listWorkflowTasks'(
    parameters?: Parameters<Paths.ListWorkflowTasks.QueryParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowTasks.Responses.$200>
  /**
   * createWorkflowTask - Create a new workflow task
   *
   * Create a new workflow task
   */
  'createWorkflowTask'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.CreateWorkflowTask.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CreateWorkflowTask.Responses.$201>
  /**
   * getWorkflowTask - Get a workflow task
   *
   * Get a workflow task
   */
  'getWorkflowTask'(
    parameters?: Parameters<Paths.GetWorkflowTask.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.GetWorkflowTask.Responses.$200>
  /**
   * updateWorkflowTask - Update a workflow task
   *
   * Update a workflow task
   */
  'updateWorkflowTask'(
    parameters?: Parameters<Paths.UpdateWorkflowTask.PathParameters> | null,
    data?: Paths.UpdateWorkflowTask.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateWorkflowTask.Responses.$200>
  /**
   * copyWorkflowTask - Creates a new workflow task with the same fields and assignee as the provided task and creates a relationship between the two tasks
   *
   *
   * Creates a new workflow task based on the provided task
   */
  'copyWorkflowTask'(
    parameters?: Parameters<Paths.CopyWorkflowTask.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.CopyWorkflowTask.Responses.$201>
  /**
   * archiveWorkflowTasks - Archive one or more workflow tasks
   *
   * Archive one or more workflow tasks
   */
  'archiveWorkflowTasks'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.ArchiveWorkflowTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ArchiveWorkflowTasks.Responses.$200>
  /**
   * bulkCopyWorkflowTasks - Bulk creates new workflow tasks where each new task has the same fields and assignee as one of the provided tasks and creates a relationship between the provided task and its copy
   *
   *
   * Bulk creates new workflow tasks based on the provided tasks
   */
  'bulkCopyWorkflowTasks'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCopyWorkflowTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCopyWorkflowTasks.Responses.$202>
  /**
   * bulkCreateWorkflowTasks - Create one or more workflow tasks
   *
   * Create one or more workflow tasks
   */
  'bulkCreateWorkflowTasks'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkCreateWorkflowTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkCreateWorkflowTasks.Responses.$202>
  /**
   * bulkUpdateWorkflowTasks - Update one or more workflow task
   *
   * Update one or more workflow tasks
   */
  'bulkUpdateWorkflowTasks'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.BulkUpdateWorkflowTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.BulkUpdateWorkflowTasks.Responses.$202>
  /**
   * unarchiveWorkflowTasks - Unarchive one or more workflow tasks
   *
   * Unarchive one or more workflow tasks
   */
  'unarchiveWorkflowTasks'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: Paths.UnarchiveWorkflowTasks.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UnarchiveWorkflowTasks.Responses.$200>
  /**
   * listWorkflows - List workflows
   *
   * List workflows
   */
  'listWorkflows'(
    parameters?: Parameters<UnknownParamsObject> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflows.Responses.$200>
  /**
   * UpdateWorkflowMetadata - Update workflow
   *
   * Update workflow metadata
   */
  'UpdateWorkflowMetadata'(
    parameters?: Parameters<Paths.UpdateWorkflowMetadata.PathParameters> | null,
    data?: Paths.UpdateWorkflowMetadata.RequestBody,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.UpdateWorkflowMetadata.Responses.$200>
  /**
   * listWorkflowStages - List workflow stages
   *
   * List workflow stages
   */
  'listWorkflowStages'(
    parameters?: Parameters<Paths.ListWorkflowStages.PathParameters> | null,
    data?: any,
    config?: AxiosRequestConfig
  ): OperationResponse<Paths.ListWorkflowStages.Responses.$200>
}

export interface PathsDictionary {
  ['/aa-sequences']: {
    /**
     * listAASequences - List AA sequences
     *
     * List AA sequences
     */
    'get'(
      parameters?: Parameters<Paths.ListAASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAASequences.Responses.$200>
    /**
     * createAASequence - Create an AA sequence
     *
     * Create an AA sequence
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAASequence.Responses.$201>
  }
  ['/aa-sequences/{aa_sequence_id}']: {
    /**
     * getAASequence - Get an AA sequence
     *
     * Get an AA sequence
     */
    'get'(
      parameters?: Parameters<Paths.GetAASequence.PathParameters & Paths.GetAASequence.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAASequence.Responses.$200>
    /**
     * updateAASequence - Update an AA sequence
     *
     * Update an AA sequence
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAASequence.PathParameters> | null,
      data?: Paths.UpdateAASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAASequence.Responses.$200>
  }
  ['/aa-sequences:archive']: {
    /**
     * archiveAASequences - Archive AA sequences
     *
     * Archive AA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveAASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveAASequences.Responses.$200>
  }
  ['/aa-sequences:auto-annotate']: {
    /**
     * autoAnnotateAaSequences - Auto-annotate AA sequences with matching features from specified Feature Libraries
     *
     * Auto-annotate AA sequences with matching features from specified Feature Libraries
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutoAnnotateAaSequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutoAnnotateAaSequences.Responses.$202>
  }
  ['/aa-sequences:bulk-create']: {
    /**
     * bulkCreateAASequences - Bulk Create AA sequences
     *
     * Bulk Create AA sequences. Limit of 1000 AA Sequences per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateAASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateAASequences.Responses.$202>
  }
  ['/aa-sequences:bulk-get']: {
    /**
     * bulkGetAASequences - Bulk get AA sequences by ID
     *
     * Bulk get AA sequences by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetAASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetAASequences.Responses.$200>
  }
  ['/aa-sequences:bulk-update']: {
    /**
     * bulkUpdateAASequences - Bulk Update AA sequences
     *
     * Bulk Update AA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateAASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateAASequences.Responses.$202>
  }
  ['/aa-sequences:unarchive']: {
    /**
     * unarchiveAASequences - Unarchive AA sequences
     *
     * Unarchive AA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveAASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveAASequences.Responses.$200>
  }
  ['/app-canvases']: {
    /**
     * createAppCanvas - Create an App Canvas
     *
     * Create an App Canvas that a Benchling App can write to and read user interaction from.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAppCanvas.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAppCanvas.Responses.$201>
  }
  ['/app-canvases/{canvas_id}']: {
    /**
     * getAppCanvas - Get App Canvas
     *
     * Get the current state of the App Canvas, including user input elements.
     */
    'get'(
      parameters?: Parameters<Paths.GetAppCanvas.PathParameters & Paths.GetAppCanvas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAppCanvas.Responses.$200>
    /**
     * updateAppCanvas - Update App Canvas
     *
     * Update App Canvas
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAppCanvas.PathParameters> | null,
      data?: Paths.UpdateAppCanvas.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAppCanvas.Responses.$200>
  }
  ['/app-canvases:archive']: {
    /**
     * archiveAppCanvases - Archive app canvases
     *
     * Archive app canvases
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveAppCanvases.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveAppCanvases.Responses.$200>
  }
  ['/app-canvases:unarchive']: {
    /**
     * unarchiveAppCanvases - Unarchive app canvases
     *
     * Unarchive app canvases
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveAppCanvases.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveAppCanvases.Responses.$200>
  }
  ['/app-configuration-items']: {
    /**
     * listAppConfigurationItems - Get app configuration items
     *
     * Get app configuration items
     */
    'get'(
      parameters?: Parameters<Paths.ListAppConfigurationItems.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAppConfigurationItems.Responses.$200>
    /**
     * createAppConfigurationItem - Create app configuration item
     *
     * Create app configuration item
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAppConfigurationItem.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAppConfigurationItem.Responses.$201>
  }
  ['/app-configuration-items/{item_id}']: {
    /**
     * getAppConfigurationItemById - Get app configuration item
     *
     * Get app configuration item
     */
    'get'(
      parameters?: Parameters<Paths.GetAppConfigurationItemById.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAppConfigurationItemById.Responses.$200>
    /**
     * updateAppConfigurationItem - Update app configuration item
     *
     * Update app configuration item
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAppConfigurationItem.PathParameters> | null,
      data?: Paths.UpdateAppConfigurationItem.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAppConfigurationItem.Responses.$200>
  }
  ['/app-configuration-items:bulk-create']: {
    /**
     * bulkCreateAppConfigurationItems - Bulk Create app configuration items. Limit of 1000 App Config Items per request.
     *
     * Bulk Create app configuration items
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateAppConfigurationItems.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateAppConfigurationItems.Responses.$202>
  }
  ['/app-configuration-items:bulk-update']: {
    /**
     * bulkUpdateAppConfigurationItems - Bulk Update app configuration items. Limit of 1000 App Config Items per request.
     *
     * Bulk Update app configuration items
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateAppConfigurationItems.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateAppConfigurationItems.Responses.$202>
  }
  ['/app-sessions']: {
    /**
     * createAppSession - Create a new app session
     *
     * Create a new app session. Sessions cannot be archived once created.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAppSession.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAppSession.Responses.$201>
  }
  ['/app-sessions/{id}']: {
    /**
     * getAppSessionById - Get an app session
     *
     * Get an app session
     */
    'get'(
      parameters?: Parameters<Paths.GetAppSessionById.PathParameters & Paths.GetAppSessionById.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAppSessionById.Responses.$200>
    /**
     * updateAppSession - Update app session
     *
     * Update app session
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAppSession.PathParameters> | null,
      data?: Paths.UpdateAppSession.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAppSession.Responses.$200>
  }
  ['/apps']: {
    /**
     * listBenchlingApps - List apps
     *
     * List apps
     */
    'get'(
      parameters?: Parameters<Paths.ListBenchlingApps.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBenchlingApps.Responses.$200>
    /**
     * createBenchlingApp - Create an app
     *
     * Create an app
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateBenchlingApp.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateBenchlingApp.Responses.$201>
  }
  ['/apps/{app_id}']: {
    /**
     * getBenchlingAppByID - Get an app by ID
     *
     * Get an app by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetBenchlingAppByID.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBenchlingAppByID.Responses.$200>
    /**
     * patchBenchlingApp - Update an app
     *
     * Update an app
     */
    'patch'(
      parameters?: Parameters<Paths.PatchBenchlingApp.PathParameters> | null,
      data?: Paths.PatchBenchlingApp.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.PatchBenchlingApp.Responses.$200>
  }
  ['/apps:archive']: {
    /**
     * archiveBenchlingApps - Archive apps
     *
     * Archive apps
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveBenchlingApps.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveBenchlingApps.Responses.$200>
  }
  ['/apps:unarchive']: {
    /**
     * unarchiveBenchlingApps - Unarchive apps
     *
     * Unarchive apps
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveBenchlingApps.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveBenchlingApps.Responses.$200>
  }
  ['/assay-result-schemas']: {
    /**
     * listAssayResultSchemas - List assay result schemas
     *
     * List assay result schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListAssayResultSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAssayResultSchemas.Responses.$200>
  }
  ['/assay-result-schemas/{schema_id}']: {
    /**
     * getResultSchema - Get a Result schema by ID
     *
     * Get a Result schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetResultSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetResultSchema.Responses.$200>
  }
  ['/assay-results']: {
    /**
     * listAssayResults - List results
     *
     * List results
     */
    'get'(
      parameters?: Parameters<Paths.ListAssayResults.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAssayResults.Responses.$200>
    /**
     * createAssayResults - Create 1 or more results.
     *
     * Create 1 or more results.
     * If you are looking to add results to a specific table in a notebook entry, please use the  [assay-results bulk-create](#/Assay%20Results/bulkCreateAssayResults) endpoint instead.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAssayResults.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAssayResults.Responses.$200>
  }
  ['/assay-results/{assay_result_id}']: {
    /**
     * getAssayResult - Get a result
     *
     * Get a result
     */
    'get'(
      parameters?: Parameters<Paths.GetAssayResult.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAssayResult.Responses.$200>
  }
  ['/assay-results:archive']: {
    /**
     * archiveAssayResults - Archive 1 or more results.
     *
     * Results that have been added to a Legacy Result or Legacy Run table in a Notebook Entry **cannot** be Archived.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveAssayResults.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveAssayResults.Responses.$200>
  }
  ['/assay-results:bulk-create']: {
    /**
     * bulkCreateAssayResults - Bulk create results
     *
     * Bulk create results. Limit of 4000 results per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateAssayResults.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateAssayResults.Responses.$202>
  }
  ['/assay-results:bulk-get']: {
    /**
     * bulkGetAssayResults - Gets multiple results specified by a list of IDs.
     *
     * Up to 200 IDs can be specified at once.
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetAssayResults.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetAssayResults.Responses.$200>
  }
  ['/assay-results:unarchive']: {
    /**
     * unarchiveAssayResults - Unarchive 1 or more results.
     *
     * Unarchive 1 or more results.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveAssayResults.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveAssayResults.Responses.$200>
  }
  ['/assay-run-schemas']: {
    /**
     * listAssayRunSchemas - List assay run schemas
     *
     * List assay run schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListAssayRunSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAssayRunSchemas.Responses.$200>
  }
  ['/assay-run-schemas/{schema_id}']: {
    /**
     * getRunSchema - Get a Run schema by ID
     *
     * Get a Run schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetRunSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRunSchema.Responses.$200>
  }
  ['/assay-runs']: {
    /**
     * listAssayRuns - List runs
     *
     * List runs
     */
    'get'(
      parameters?: Parameters<Paths.ListAssayRuns.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAssayRuns.Responses.$200>
    /**
     * createAssayRuns - Create 1 or more runs.
     *
     * Create 1 or more runs.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAssayRuns.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAssayRuns.Responses.$200>
  }
  ['/assay-runs/{assay_run_id}']: {
    /**
     * getAssayRun - Get a run
     *
     * Get a run
     */
    'get'(
      parameters?: Parameters<Paths.GetAssayRun.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAssayRun.Responses.$200>
    /**
     * updateAssayRun - Update a run
     *
     * Update a run
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAssayRun.PathParameters> | null,
      data?: Paths.UpdateAssayRun.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAssayRun.Responses.$200>
  }
  ['/assay-runs/{assay_run_id}/automation-input-generators']: {
    /**
     * listAutomationInputGenerators - list AutomationInputGenerators by Run
     *
     * list AutomationInputGenerators by Run
     */
    'get'(
      parameters?: Parameters<Paths.ListAutomationInputGenerators.PathParameters & Paths.ListAutomationInputGenerators.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAutomationInputGenerators.Responses.$200>
  }
  ['/assay-runs/{assay_run_id}/automation-output-processors']: {
    /**
     * listAutomationOutputProcessorsDeprecated - list AutomationOutputProcessors by Run
     *
     * Deprecated in favor of '/automation-output-processors'. For each output config in the run config, will create an empty automationOutputProcessor for the run if one doesn't exist.
     */
    'get'(
      parameters?: Parameters<Paths.ListAutomationOutputProcessorsDeprecated.PathParameters & Paths.ListAutomationOutputProcessorsDeprecated.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAutomationOutputProcessorsDeprecated.Responses.$200>
  }
  ['/assay-runs:archive']: {
    /**
     * archiveAssayRuns - Archive Assay Runs
     *
     * Archive assay runs that are not embedded in a notebook entry
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveAssayRuns.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveAssayRuns.Responses.$200>
  }
  ['/assay-runs:bulk-get']: {
    /**
     * bulkGetAssayRuns - Bulk get runs by ID
     *
     * Bulk get runs by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetAssayRuns.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetAssayRuns.Responses.$200>
  }
  ['/assay-runs:unarchive']: {
    /**
     * unarchiveAssayRuns - Unarchive Assay Runs
     *
     * Unarchive assay runs
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveAssayRuns.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveAssayRuns.Responses.$200>
  }
  ['/automation-file-transforms/{transform_id}']: {
    /**
     * getLabAutomationTransform - Get a Lab Automation Transform step
     *
     * Get a Lab Automation Transform step
     */
    'get'(
      parameters?: Parameters<Paths.GetLabAutomationTransform.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetLabAutomationTransform.Responses.$200>
    /**
     * updateLabAutomationTransform - Update a Lab Automation Transform step
     *
     * Update a Lab Automation Transform step
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateLabAutomationTransform.PathParameters> | null,
      data?: Paths.UpdateLabAutomationTransform.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateLabAutomationTransform.Responses.$200>
  }
  ['/automation-input-generators/{input_generator_id}']: {
    /**
     * getAutomationInputGenerator - Get an Automation Input Generator
     *
     * Get an Automation Input Generator
     */
    'get'(
      parameters?: Parameters<Paths.GetAutomationInputGenerator.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAutomationInputGenerator.Responses.$200>
    /**
     * updateAutomationInputGenerator - Update an Automation Input Generator
     *
     * Update an Automation Input Generator
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAutomationInputGenerator.PathParameters> | null,
      data?: Paths.UpdateAutomationInputGenerator.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAutomationInputGenerator.Responses.$200>
  }
  ['/automation-input-generators/{input_generator_id}:generate-input']: {
    /**
     * generateInputWithAutomationInputGenerator - Generate Input with an Automation Input Generator
     *
     * Generate Input with an Automation Input Generator
     */
    'post'(
      parameters?: Parameters<Paths.GenerateInputWithAutomationInputGenerator.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GenerateInputWithAutomationInputGenerator.Responses.$202>
  }
  ['/automation-output-processors']: {
    /**
     * listAutomationOutputProcessors - List non-empty Automation Output Processors
     *
     * List Automation Output Processors which have an attached file
     */
    'get'(
      parameters?: Parameters<Paths.ListAutomationOutputProcessors.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListAutomationOutputProcessors.Responses.$200>
    /**
     * createAutomationOutputProcessor - Create Automation Output Processor
     *
     * Create Automation Output Processor
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateAutomationOutputProcessor.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAutomationOutputProcessor.Responses.$201>
  }
  ['/automation-output-processors/{output_processor_id}']: {
    /**
     * getAutomationOutputProcessor - Get an Automation Output Processor
     *
     * Get an Automation Output Processor
     */
    'get'(
      parameters?: Parameters<Paths.GetAutomationOutputProcessor.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetAutomationOutputProcessor.Responses.$200>
    /**
     * updateAutomationOutputProcessor - Update an Automation Output Processor
     *
     * Update an Automation Output Processor
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateAutomationOutputProcessor.PathParameters> | null,
      data?: Paths.UpdateAutomationOutputProcessor.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateAutomationOutputProcessor.Responses.$200>
  }
  ['/automation-output-processors/{output_processor_id}:process-output']: {
    /**
     * processOutputWithAutomationOutputProcessor - Process Output with an Automation Output Processor
     *
     * Process Output with an Automation Output Processor
     */
    'post'(
      parameters?: Parameters<Paths.ProcessOutputWithAutomationOutputProcessor.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ProcessOutputWithAutomationOutputProcessor.Responses.$202>
  }
  ['/automation-output-processors:archive']: {
    /**
     * archiveAutomationOutputProcessors - Archive Automation Output Processors and linked Results
     *
     * Archive Automation Output Processors and linked Results
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveAutomationOutputProcessors.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveAutomationOutputProcessors.Responses.$200>
  }
  ['/automation-output-processors:unarchive']: {
    /**
     * unarchiveAutomationOutputProcessors - Unarchive Automation Output Processors and linked Results
     *
     * Unarchive Automation Output Processors and linked Results
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveAutomationOutputProcessors.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveAutomationOutputProcessors.Responses.$200>
  }
  ['/batch-schemas']: {
    /**
     * listBatchSchemas - List batch schemas
     *
     * List batch schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListBatchSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBatchSchemas.Responses.$200>
  }
  ['/batch-schemas/{schema_id}']: {
    /**
     * getBatchSchema - Get a batch schema by ID
     *
     * Get a batch schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetBatchSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBatchSchema.Responses.$200>
  }
  ['/batches']: {
    /**
     * listBatches - List batches
     *
     * List batches
     */
    'get'(
      parameters?: Parameters<Paths.ListBatches.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBatches.Responses.$200>
    /**
     * createBatch - Create a batch
     *
     * Create a batch
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateBatch.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateBatch.Responses.$201>
  }
  ['/batches/{batch_id}']: {
    /**
     * getBatch - Get a batch
     *
     * Get a batch
     */
    'get'(
      parameters?: Parameters<Paths.GetBatch.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBatch.Responses.$200>
    /**
     * updateBatch - Update a batch
     *
     * Update a batch
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateBatch.PathParameters> | null,
      data?: Paths.UpdateBatch.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateBatch.Responses.$200>
  }
  ['/batches:archive']: {
    /**
     * archiveBatches - Archive Batches
     *
     * Archive Batches
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveBatches.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveBatches.Responses.$200>
  }
  ['/batches:bulk-get']: {
    /**
     * bulkGetBatches - Bulk get batches
     *
     * Batches can be queried by their IDs or their names. Querying by name requires specifying a registryId since batch names are not necessarily unique across registries. Batches must be registered to query by name.
     *
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetBatches.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetBatches.Responses.$200>
  }
  ['/batches:unarchive']: {
    /**
     * unarchiveBatches - Unarchive Batches
     *
     * Unarchive Batches
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveBatches.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveBatches.Responses.$200>
  }
  ['/blobs']: {
    /**
     * createBlob - Upload single-part blob
     *
     *
     * This endpoint uploads a blob in a single API call.
     *
     * Blobs larger than 10MB should be uploaded in [multiple parts](#/Blobs/createMultipartBlob). The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateBlob.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateBlob.Responses.$200>
  }
  ['/blobs/{blob_id}']: {
    /**
     * getBlob - Get a Blob
     *
     * Get a Blob
     */
    'get'(
      parameters?: Parameters<Paths.GetBlob.PathParameters & Paths.GetBlob.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBlob.Responses.$200>
  }
  ['/blobs/{blob_id}/download']: {
    /**
     * getBlobFile - Download a blob
     *
     * Download a blob.
     *
     * This endpoint issues a 302 redirect to a pre-signed download link.
     * It does not consume from the standard rate-limit.
     *
     * Example `wget` usage with a User API Key:
     * ```bash
     * export BLOB_ID="ffe43fd5-b928-4996-9b7f-40222cd33d8e"
     * wget "https://tenant.benchling.com/api/v2/blobs/$BLOB_ID/download" \
     *     --user $API_TOKEN \      # Your API Key
     *     --password '' \          # Leave password empty
     *     --content-disposition    # Save file with original filename
     * ```
     *
     * **Note: Calling this endpoint from a browser is not supported.**
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetBlobFile.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBlobFile.Responses.$200>
  }
  ['/blobs/{blob_id}/download-url']: {
    /**
     * getBlobUrl - Get a Blob's download url
     *
     * Get a Blob's download url
     */
    'get'(
      parameters?: Parameters<Paths.GetBlobUrl.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBlobUrl.Responses.$200>
  }
  ['/blobs/{blob_id}/parts']: {
    /**
     * createBlobPart - Upload a part of a multi-part blob
     *
     *
     * Upload a part of the blob. This part must be at least 5MB, unless it's the last or only part. It's recommended to keep the part size around 10MB.
     *
     * The data64 parameter is the base64-encoded part contents, and the md5 parameter is the hex-encoded MD5 hash of the part contents. For example, given the string hello, data64 is aGVsbG8= and md5 is 5d41402abc4b2a76b9719d911017c592.
     *
     * ## Multipart Upload
     *
     * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
     * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
     * - [Upload a blob part](#/Blobs/createBlobPart)
     * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
     *
     * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
     *
     */
    'post'(
      parameters?: Parameters<Paths.CreateBlobPart.PathParameters> | null,
      data?: Paths.CreateBlobPart.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateBlobPart.Responses.$200>
  }
  ['/blobs/{blob_id}:abort-upload']: {
    /**
     * abortMultipartBlob - Abort multi-part blob upload
     *
     * Abort multi-part blob upload
     */
    'post'(
      parameters?: Parameters<Paths.AbortMultipartBlob.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AbortMultipartBlob.Responses.$200>
  }
  ['/blobs/{blob_id}:complete-upload']: {
    /**
     * completeMultipartBlob - Complete multi-part blob upload
     *
     *
     * Combine blob parts into a single blob.
     *
     * ## Multipart Upload
     *
     * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
     * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
     * - [Upload a blob part](#/Blobs/createBlobPart)
     * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
     *
     * Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.
     *
     * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
     *
     */
    'post'(
      parameters?: Parameters<Paths.CompleteMultipartBlob.PathParameters> | null,
      data?: Paths.CompleteMultipartBlob.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CompleteMultipartBlob.Responses.$200>
  }
  ['/blobs:bulk-get']: {
    /**
     * bulkGetBlobs - Bulk get Blobs by UUID
     *
     * Bulk get Blobs by UUID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetBlobs.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetBlobs.Responses.$200>
  }
  ['/blobs:start-multipart-upload']: {
    /**
     * createMultipartBlob - Initiate multi-part blob upload
     *
     *
     * Blobs may be uploaded using multi-part upload. This endpoint initiates the upload process - blob parts can then be uploaded in multiple blob parts.
     *
     * ## Multipart Upload
     *
     * If a blob is larger than 10MB, it should be uploaded in multiple parts using the following endpoints:
     * - [Start a multi-part blob upload](#/Blobs/createMultipartBlob)
     * - [Upload a blob part](#/Blobs/createBlobPart)
     * - [Complete a blob upload](#/Blobs/completeMultipartBlob)
     *
     * Each part must be at least 5MB in size, except for the last part. We recommend keeping each part to under 10MB when uploading.
     *
     * Each part has a *partNumber* and an *eTag*. The part number can be any number between 1 to 10,000, inclusive - this number should be unique and identifies the order of the part in the final blob. The eTag of a part is returned in the API response - this eTag must be specified when completing the upload in order to ensure the server has received all the expected parts.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateMultipartBlob.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateMultipartBlob.Responses.$200>
  }
  ['/box-schemas']: {
    /**
     * listBoxSchemas - List box schemas
     *
     * List box schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListBoxSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBoxSchemas.Responses.$200>
  }
  ['/box-schemas/{schema_id}']: {
    /**
     * getBoxSchema - Get a box schema by ID
     *
     * Get a box schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetBoxSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBoxSchema.Responses.$200>
  }
  ['/boxes']: {
    /**
     * listBoxes - List boxes
     *
     * List boxes
     */
    'get'(
      parameters?: Parameters<Paths.ListBoxes.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBoxes.Responses.$200>
    /**
     * createBox - Create a box
     *
     * Create a box
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateBox.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateBox.Responses.$201>
  }
  ['/boxes/{box_id}']: {
    /**
     * getBox - Get a box
     *
     * Get a box
     */
    'get'(
      parameters?: Parameters<Paths.GetBox.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetBox.Responses.$200>
    /**
     * updateBox - Update a box
     *
     * Update a box
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateBox.PathParameters> | null,
      data?: Paths.UpdateBox.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateBox.Responses.$200>
  }
  ['/boxes/{box_id}/contents']: {
    /**
     * listBoxContents - List a box's contents
     *
     * List a box's contents
     */
    'get'(
      parameters?: Parameters<Paths.ListBoxContents.PathParameters & Paths.ListBoxContents.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBoxContents.Responses.$200>
  }
  ['/boxes:archive']: {
    /**
     * archiveBoxes - Archive boxes
     *
     * Archive boxes and any containers of the boxes
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveBoxes.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveBoxes.Responses.$200>
  }
  ['/boxes:bulk-get']: {
    /**
     * bulkGetBoxes - BulkGet boxes
     *
     * BulkGet boxes
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetBoxes.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetBoxes.Responses.$200>
  }
  ['/boxes:unarchive']: {
    /**
     * unarchiveBoxes - Unarchive boxes
     *
     * Unarchive boxes and the containers that were archived along with them
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveBoxes.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveBoxes.Responses.$200>
  }
  ['/container-schemas']: {
    /**
     * listContainerSchemas - List container schemas
     *
     * List container schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListContainerSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListContainerSchemas.Responses.$200>
  }
  ['/container-schemas/{schema_id}']: {
    /**
     * getContainerSchema - Get a container schema by ID
     *
     * Get a container schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetContainerSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetContainerSchema.Responses.$200>
  }
  ['/containers']: {
    /**
     * listContainers - List containers
     *
     * List containers
     */
    'get'(
      parameters?: Parameters<Paths.ListContainers.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListContainers.Responses.$200>
    /**
     * createContainer - Create a new container
     *
     * Create a new container
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateContainer.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateContainer.Responses.$201>
  }
  ['/containers/{container_id}']: {
    /**
     * getContainer - get a container by id
     *
     * get a container by id
     */
    'get'(
      parameters?: Parameters<Paths.GetContainer.PathParameters & Paths.GetContainer.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetContainer.Responses.$200>
    /**
     * updateContainer - update a container
     *
     * update a container
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateContainer.PathParameters> | null,
      data?: Paths.UpdateContainer.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateContainer.Responses.$200>
  }
  ['/containers/{container_id}/contents']: {
    /**
     * listContainerContents - List a container's contents
     *
     * List a container's contents
     */
    'get'(
      parameters?: Parameters<Paths.ListContainerContents.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListContainerContents.Responses.$200>
  }
  ['/containers/{container_id}/contents/{containable_id}']: {
    /**
     * deleteContainerContent - Delete a container content
     *
     * Delete a container content
     */
    'delete'(
      parameters?: Parameters<Paths.DeleteContainerContent.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.DeleteContainerContent.Responses.$204>
    /**
     * getContainerContent - Get a container content
     *
     * Get a container content
     */
    'get'(
      parameters?: Parameters<Paths.GetContainerContent.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetContainerContent.Responses.$200>
    /**
     * updateContainerContent - Update a container content
     *
     * Update a container content
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateContainerContent.PathParameters> | null,
      data?: Paths.UpdateContainerContent.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateContainerContent.Responses.$200>
  }
  ['/containers/{destination_container_id}:transfer']: {
    /**
     * transferIntoContainer - Transfer into container
     *
     * Transfers a volume of an entity, batch, or container into a destination container.
     * Transfering a volume is cumulative with the existing destination container's contents. To transfer an entire container's contents, the sourceContainerId should be specified. To otherwise transfer multiple entities within a container, you can make multiple calls to this endpoint, specifying a single entity with each call.
     *
     */
    'post'(
      parameters?: Parameters<Paths.TransferIntoContainer.PathParameters> | null,
      data?: Paths.TransferIntoContainer.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.TransferIntoContainer.Responses.$200>
  }
  ['/containers:archive']: {
    /**
     * archiveContainers - Archive containers
     *
     * Archive containers
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveContainers.Responses.$200>
  }
  ['/containers:bulk-create']: {
    /**
     * bulkCreateContainers - Bulk create containers. Limit of 1000 containers per request.
     *
     * Bulk create containers
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateContainers.Responses.$202>
  }
  ['/containers:bulk-get']: {
    /**
     * bulkGetContainers - Bulk get a set of containers
     *
     * Bulk get a set of containers. Provide either containerIds or barcodes, not both.
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetContainers.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetContainers.Responses.$200>
  }
  ['/containers:bulk-update']: {
    /**
     * bulkUpdateContainers - Bulk update containers
     *
     * Bulk update containers
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateContainers.Responses.$202>
  }
  ['/containers:check-in']: {
    /**
     * checkinContainers - Check in containers
     *
     * Check in containers to signify that they are available for use.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CheckinContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CheckinContainers.Responses.$200>
  }
  ['/containers:check-out']: {
    /**
     * checkoutContainers - Check out containers
     *
     * Check out containers to signify that they are in use.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CheckoutContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CheckoutContainers.Responses.$200>
  }
  ['/containers:print-labels']: {
    /**
     * printLabels - Print labels
     *
     * Print labels. Supported print methods are "REMOTE_PRINT_SERVER", "LEGACY_HTTP", and "LEGACY_TCP".
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.PrintLabels.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.PrintLabels.Responses.$200>
  }
  ['/containers:reserve']: {
    /**
     * reserveContainers - Reserve containers
     *
     * Reserve containers to signify that someone plans to use the containers.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ReserveContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ReserveContainers.Responses.$200>
  }
  ['/containers:unarchive']: {
    /**
     * unarchiveContainers - Unarchive containers
     *
     * Unarchive containers
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveContainers.Responses.$200>
  }
  ['/custom-entities']: {
    /**
     * listCustomEntities - List custom entities
     *
     * List custom entities
     */
    'get'(
      parameters?: Parameters<Paths.ListCustomEntities.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListCustomEntities.Responses.$200>
    /**
     * createCustomEntity - Create a custom entity
     *
     * Create a custom entity
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateCustomEntity.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateCustomEntity.Responses.$201>
  }
  ['/custom-entities/{custom_entity_id}']: {
    /**
     * getCustomEntity - Get a custom entity
     *
     * Get a custom entity
     */
    'get'(
      parameters?: Parameters<Paths.GetCustomEntity.PathParameters & Paths.GetCustomEntity.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetCustomEntity.Responses.$200>
    /**
     * updateCustomEntity - Update a custom entity
     *
     * Update a custom entity
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateCustomEntity.PathParameters> | null,
      data?: Paths.UpdateCustomEntity.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateCustomEntity.Responses.$200>
  }
  ['/custom-entities:archive']: {
    /**
     * archiveCustomEntities - Archive custom entities
     *
     * Archive custom entities
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveCustomEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveCustomEntities.Responses.$200>
  }
  ['/custom-entities:bulk-create']: {
    /**
     * bulkCreateCustomEntities - Bulk Create custom entities
     *
     * Bulk Create custom entities. Limit of 2500 custom entities per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateCustomEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateCustomEntities.Responses.$202>
  }
  ['/custom-entities:bulk-get']: {
    /**
     * bulkGetCustomEntities - Bulk get custom entities by ID
     *
     * Bulk get custom entities by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetCustomEntities.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetCustomEntities.Responses.$200>
  }
  ['/custom-entities:bulk-update']: {
    /**
     * bulkUpdateCustomEntities - Bulk Update custom entities
     *
     * Bulk Update custom entities
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateCustomEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateCustomEntities.Responses.$202>
  }
  ['/custom-entities:unarchive']: {
    /**
     * unarchiveCustomEntities - Unarchive custom entities
     *
     * Unarchive custom entities
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveCustomEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveCustomEntities.Responses.$200>
  }
  ['/custom-notations']: {
    /**
     * listCustomNotations - List custom notations
     *
     * List all available custom notations for specifying modified nucleotide sequences
     */
    'get'(
      parameters?: Parameters<Paths.ListCustomNotations.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListCustomNotations.Responses.$200>
  }
  ['/dna-alignments']: {
    /**
     * listDNAAlignments - List DNA Alignments
     *
     * List DNA Alignments
     */
    'get'(
      parameters?: Parameters<Paths.ListDNAAlignments.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListDNAAlignments.Responses.$200>
  }
  ['/dna-alignments/{dna_alignment_id}']: {
    /**
     * deleteDNAAlignment - Delete a DNA Alignment
     *
     * Delete a DNA Alignment
     */
    'delete'(
      parameters?: Parameters<Paths.DeleteDNAAlignment.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.DeleteDNAAlignment.Responses.$200>
    /**
     * getDNAAlignment - Get a DNA Alignment
     *
     * Get a DNA Alignment
     */
    'get'(
      parameters?: Parameters<Paths.GetDNAAlignment.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetDNAAlignment.Responses.$200>
  }
  ['/dna-alignments:create-consensus-alignment']: {
    /**
     * createDnaConsensusAlignment - Create a consensus DNA alignment
     *
     * Create a consensus DNA alignment
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateDnaConsensusAlignment.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateDnaConsensusAlignment.Responses.$202>
  }
  ['/dna-alignments:create-template-alignment']: {
    /**
     * createDnaTemplateAlignment - Create a template DNA alignment
     *
     * Create a template DNA alignment
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateDnaTemplateAlignment.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateDnaTemplateAlignment.Responses.$202>
  }
  ['/dna-oligos']: {
    /**
     * listDNAOligos - List DNA Oligos
     *
     * List DNA Oligos
     */
    'get'(
      parameters?: Parameters<Paths.ListDNAOligos.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListDNAOligos.Responses.$200>
    /**
     * createDNAOligo - Create a DNA Oligo
     *
     * Create a DNA Oligo
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateDNAOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateDNAOligo.Responses.$201>
  }
  ['/dna-oligos/{oligo_id}']: {
    /**
     * getDNAOligo - Get a DNA Oligo
     *
     * Get a DNA Oligo
     */
    'get'(
      parameters?: Parameters<Paths.GetDNAOligo.PathParameters & Paths.GetDNAOligo.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetDNAOligo.Responses.$200>
    /**
     * updateDNAOligo - Update a DNA Oligo
     *
     * Update a DNA Oligo
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateDNAOligo.PathParameters> | null,
      data?: Paths.UpdateDNAOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateDNAOligo.Responses.$200>
  }
  ['/dna-oligos:archive']: {
    /**
     * archiveDNAOligos - Archive DNA Oligos
     *
     * Archive DNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveDNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveDNAOligos.Responses.$200>
  }
  ['/dna-oligos:bulk-create']: {
    /**
     * bulkCreateDNAOligos - Bulk Create DNA Oligos
     *
     * Bulk Create DNA Oligos. Limit of 1000 DNA Oligos per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateDNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateDNAOligos.Responses.$202>
  }
  ['/dna-oligos:bulk-update']: {
    /**
     * bulkUpdateDNAOligos - Bulk Update DNA Oligos
     *
     * Bulk Update DNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateDNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateDNAOligos.Responses.$202>
  }
  ['/dna-oligos:unarchive']: {
    /**
     * unarchiveDNAOligos - Unarchive DNA Oligos
     *
     * Unarchive DNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveDNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveDNAOligos.Responses.$200>
  }
  ['/dna-sequences']: {
    /**
     * listDNASequences - List DNA sequences
     *
     * List DNA sequences
     */
    'get'(
      parameters?: Parameters<Paths.ListDNASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListDNASequences.Responses.$200>
    /**
     * createDNASequence - Create a DNA sequence
     *
     * Create a DNA sequence
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateDNASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateDNASequence.Responses.$201>
  }
  ['/dna-sequences/{dna_sequence_id}']: {
    /**
     * getDNASequence - Get a DNA sequence
     *
     * Get a DNA sequence
     */
    'get'(
      parameters?: Parameters<Paths.GetDNASequence.PathParameters & Paths.GetDNASequence.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetDNASequence.Responses.$200>
    /**
     * updateDNASequence - Update a DNA sequence
     *
     * Update a DNA sequence
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateDNASequence.PathParameters> | null,
      data?: Paths.UpdateDNASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateDNASequence.Responses.$200>
  }
  ['/dna-sequences:archive']: {
    /**
     * archiveDNASequences - Archive DNA sequences
     *
     * Archive DNA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveDNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveDNASequences.Responses.$200>
  }
  ['/dna-sequences:auto-annotate']: {
    /**
     * autoAnnotateDnaSequences - Auto-annotate DNA sequences with matching features from specified Feature Libraries
     *
     * Auto-annotate DNA sequences with matching features from specified Feature Libraries
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutoAnnotateDnaSequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutoAnnotateDnaSequences.Responses.$202>
  }
  ['/dna-sequences:autofill-parts']: {
    /**
     * autofillDNASequenceParts - Autofill DNA sequence parts
     *
     * Autofill DNA sequence parts
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutofillDNASequenceParts.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutofillDNASequenceParts.Responses.$202>
  }
  ['/dna-sequences:autofill-translations']: {
    /**
     * autofillDNASequenceTranslations - Autofill DNA sequence translations
     *
     * Autofill DNA sequence translations
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutofillDNASequenceTranslations.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutofillDNASequenceTranslations.Responses.$202>
  }
  ['/dna-sequences:bulk-create']: {
    /**
     * bulkCreateDNASequences - Bulk Create DNA sequences
     *
     * Bulk Create DNA sequences. Limit of 1000 DNA Sequences per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateDNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateDNASequences.Responses.$202>
  }
  ['/dna-sequences:bulk-get']: {
    /**
     * bulkGetDNASequences - Bulk get DNA sequences by ID
     *
     * Bulk get DNA sequences by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetDNASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetDNASequences.Responses.$200>
  }
  ['/dna-sequences:bulk-update']: {
    /**
     * bulkUpdateDNASequences - Bulk Update DNA sequences
     *
     * Bulk Update DNA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateDNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateDNASequences.Responses.$202>
  }
  ['/dna-sequences:unarchive']: {
    /**
     * unarchiveDNASequences - Unarchive DNA sequences
     *
     * Unarchive DNA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveDNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveDNASequences.Responses.$200>
  }
  ['/dropdowns']: {
    /**
     * listDropdowns - List dropdowns
     *
     * List dropdowns
     */
    'get'(
      parameters?: Parameters<Paths.ListDropdowns.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListDropdowns.Responses.$200>
    /**
     * createDropdown - Create a dropdown
     *
     * Create a dropdown
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateDropdown.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateDropdown.Responses.$200>
  }
  ['/dropdowns/{dropdown_id}']: {
    /**
     * getDropdown - Get a dropdown
     *
     * Get a dropdown
     */
    'get'(
      parameters?: Parameters<Paths.GetDropdown.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetDropdown.Responses.$200>
    /**
     * updateDropdown - Update a dropdown
     *
     * Update a dropdown
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateDropdown.PathParameters> | null,
      data?: Paths.UpdateDropdown.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateDropdown.Responses.$200>
  }
  ['/dropdowns/{dropdown_id}/options:archive']: {
    /**
     * archiveDropdownOptions - Archive dropdown options
     *
     * Archive options belonging to a dropdown
     */
    'post'(
      parameters?: Parameters<Paths.ArchiveDropdownOptions.PathParameters> | null,
      data?: Paths.ArchiveDropdownOptions.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveDropdownOptions.Responses.$200>
  }
  ['/dropdowns/{dropdown_id}/options:unarchive']: {
    /**
     * unarchiveDropdownOptions - Unarchive dropdown options
     *
     * Unarchive options belonging to a dropdown
     */
    'post'(
      parameters?: Parameters<Paths.UnarchiveDropdownOptions.PathParameters> | null,
      data?: Paths.UnarchiveDropdownOptions.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveDropdownOptions.Responses.$200>
  }
  ['/entities/{entity_id}/batches']: {
    /**
     * getEnitityBatches - Get an entity's batches
     *
     * Get an entity's batches
     */
    'get'(
      parameters?: Parameters<Paths.GetEnitityBatches.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetEnitityBatches.Responses.$200>
  }
  ['/entity-schemas']: {
    /**
     * listEntitySchemas - List entity schemas
     *
     * List entity schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListEntitySchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEntitySchemas.Responses.$200>
  }
  ['/entity-schemas/{schema_id}']: {
    /**
     * getEntitySchema - Get an entity schema by ID
     *
     * Get an entity schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetEntitySchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetEntitySchema.Responses.$200>
  }
  ['/entries']: {
    /**
     * listEntries - List entries
     *
     * List notebook entries
     */
    'get'(
      parameters?: Parameters<Paths.ListEntries.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEntries.Responses.$200>
    /**
     * createEntry - Create a notebook entry
     *
     * Create a notebook entry
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateEntry.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateEntry.Responses.$201>
  }
  ['/entries/{entry_id}']: {
    /**
     * getEntry - Get a notebook entry by ID
     *
     * Get a notebook entry by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetEntry.PathParameters & Paths.GetEntry.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetEntry.Responses.$200>
    /**
     * updateEntry - Update a notebook entry's metadata
     *
     * Update a notebook entry's metadata
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateEntry.PathParameters & Paths.UpdateEntry.QueryParameters> | null,
      data?: Paths.UpdateEntry.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateEntry.Responses.$200>
  }
  ['/entries/{entry_id}/external-files/{external_file_id}']: {
    /**
     * getExternalFileMetadata - Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file.
     *
     *
     * Retrieves the metadata for an external file. Use the 'downloadURL' to download the actual file. (Expand the schema view for details)
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetExternalFileMetadata.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetExternalFileMetadata.Responses.$200>
  }
  ['/entries:archive']: {
    /**
     * archiveEntries - Archive notebook entries
     *
     * Archive notebook entries
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveEntries.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveEntries.Responses.$200>
  }
  ['/entries:bulk-get']: {
    /**
     * bulkGetEntries - Get notebook entries using entry IDs or display IDs
     *
     * Get notebook entries using entry IDs or display IDs
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetEntries.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetEntries.Responses.$200>
  }
  ['/entries:unarchive']: {
    /**
     * unarchiveEntries - Unarchive notebook entries
     *
     * Unarchive notebook entries
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveEntries.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveEntries.Responses.$200>
  }
  ['/entry-schemas']: {
    /**
     * listEntrySchemas - List entry schemas
     *
     * List entry schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListEntrySchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEntrySchemas.Responses.$200>
  }
  ['/entry-schemas/{schema_id}']: {
    /**
     * getEntrySchema - Get an Entry schema by ID
     *
     * Get an Entry schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetEntrySchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetEntrySchema.Responses.$200>
  }
  ['/entry-templates']: {
    /**
     * listEntryTemplates - List entry templates
     *
     * List entry templates
     */
    'get'(
      parameters?: Parameters<Paths.ListEntryTemplates.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEntryTemplates.Responses.$200>
  }
  ['/entry-templates/{entry_template_id}']: {
    /**
     * getEntryTemplate - Get a notebook template entry by ID
     *
     * Get a notebook template entry by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetEntryTemplate.PathParameters & Paths.GetEntryTemplate.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetEntryTemplate.Responses.$200>
  }
  ['/events']: {
    /**
     * listEvents - List Events
     *
     * List Events
     *
     * ## Event Sort Order
     *
     * Events in Benchling are assigned a stable sort order that reflects when the event was processed (not created). The createdAt time is not the stable sorted order of events. For this reason event createdAt time may appear out of order.
     *
     */
    'get'(
      parameters?: Parameters<Paths.ListEvents.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEvents.Responses.$200>
  }
  ['/exports']: {
    /**
     * exportItem - Export Item
     *
     * This endpoint launches a [long-running task](#/Tasks/getTask) and returns the Task ID of the launched task.
     * The task response contains a link to download the exported item from Amazon S3. The download is a ZIP file that contains the exported PDFs.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ExportItem.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ExportItem.Responses.$202>
  }
  ['/feature-libraries']: {
    /**
     * listFeatureLibraries - List Feature Libraries
     *
     * List Feature Libraries
     */
    'get'(
      parameters?: Parameters<Paths.ListFeatureLibraries.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListFeatureLibraries.Responses.$200>
    /**
     * createFeatureLibrary - Create a Feature Library
     *
     * Create a Feature Library
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateFeatureLibrary.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateFeatureLibrary.Responses.$201>
  }
  ['/feature-libraries/{feature_library_id}']: {
    /**
     * getFeatureLibrary - Get a feature library by ID
     *
     * Get a feature library by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetFeatureLibrary.PathParameters & Paths.GetFeatureLibrary.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetFeatureLibrary.Responses.$200>
    /**
     * updateFeatureLibrary - Update a feature library
     *
     * Update a feature library. Note: Features cannot be updated from this endpoint.
     * Use the /features* endpoints to add or modify features.
     *
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateFeatureLibrary.PathParameters> | null,
      data?: Paths.UpdateFeatureLibrary.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateFeatureLibrary.Responses.$200>
  }
  ['/features']: {
    /**
     * listFeatures - List Features
     *
     * List Features
     */
    'get'(
      parameters?: Parameters<Paths.ListFeatures.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListFeatures.Responses.$200>
    /**
     * createFeature - Create a Feature
     *
     * Create a Feature
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateFeature.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateFeature.Responses.$201>
  }
  ['/features/{feature_id}']: {
    /**
     * getFeature - Get a feature by ID
     *
     * Get a feature by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetFeature.PathParameters & Paths.GetFeature.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetFeature.Responses.$200>
    /**
     * updateFeature - Update a feature
     *
     * Update a feature
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateFeature.PathParameters> | null,
      data?: Paths.UpdateFeature.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateFeature.Responses.$200>
  }
  ['/features:bulk-create']: {
    /**
     * bulkCreateFeatures - Bulk create Features
     *
     * Bulk create Features
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateFeatures.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateFeatures.Responses.$202>
  }
  ['/folders']: {
    /**
     * listFolders - List folders
     *
     * List folders
     */
    'get'(
      parameters?: Parameters<Paths.ListFolders.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListFolders.Responses.$200>
    /**
     * createFolder - Create folder
     *
     * Create folder
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateFolder.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateFolder.Responses.$201>
  }
  ['/folders/{folder_id}']: {
    /**
     * getFolder - Get a folder by ID
     *
     * Get a folder by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetFolder.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetFolder.Responses.$200>
  }
  ['/folders:archive']: {
    /**
     * archiveFolders - Archive folders
     *
     * Archives folders and their contents
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveFolders.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveFolders.Responses.$200>
  }
  ['/folders:unarchive']: {
    /**
     * unarchiveFolders - Unarchive folders
     *
     * Unarchives folders and the contents that were archived along with them
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveFolders.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveFolders.Responses.$200>
  }
  ['/legacy-workflow-stage-runs/{stage_run_id}/input-samples']: {
    /**
     * listLegacyWorkflowStageRunInputSamples - List legacy workflow stage run input samples
     *
     * List legacy workflow stage run input samples
     */
    'get'(
      parameters?: Parameters<Paths.ListLegacyWorkflowStageRunInputSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflowStageRunInputSamples.Responses.$200>
  }
  ['/legacy-workflow-stage-runs/{stage_run_id}/output-samples']: {
    /**
     * listLegacyWorkflowStageRunOutputSamples - List legacy workflow stage run output samples
     *
     * List legacy workflow stage run output samples
     */
    'get'(
      parameters?: Parameters<Paths.ListLegacyWorkflowStageRunOutputSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflowStageRunOutputSamples.Responses.$200>
  }
  ['/legacy-workflow-stage-runs/{stage_run_id}/registered-samples']: {
    /**
     * listLegacyWorkflowStageRunRegisteredSamples - List legacy workflow stage run registered samples
     *
     * List legacy workflow stage run registered samples
     */
    'get'(
      parameters?: Parameters<Paths.ListLegacyWorkflowStageRunRegisteredSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflowStageRunRegisteredSamples.Responses.$200>
  }
  ['/legacy-workflow-stages/{stage_id}/workflow-stage-runs']: {
    /**
     * listLegacyWorkflowStageRuns - List legacy workflow stage runs
     *
     * List legacy workflow stage runs
     */
    'get'(
      parameters?: Parameters<Paths.ListLegacyWorkflowStageRuns.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflowStageRuns.Responses.$200>
  }
  ['/legacy-workflows']: {
    /**
     * listLegacyWorkflows - List legacy workflows
     *
     * List legacy workflows
     */
    'get'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflows.Responses.$200>
  }
  ['/legacy-workflows/{legacy_workflow_id}']: {
    /**
     * UpdateLegacyWorkflowMetadata - Update legacy workflow
     *
     * Update workflow metadata
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateLegacyWorkflowMetadata.PathParameters> | null,
      data?: Paths.UpdateLegacyWorkflowMetadata.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateLegacyWorkflowMetadata.Responses.$200>
  }
  ['/legacy-workflows/{legacy_workflow_id}/workflow-stages']: {
    /**
     * listLegacyWorkflowStages - List legacy workflow stages
     *
     * List legacy workflow stages
     */
    'get'(
      parameters?: Parameters<Paths.ListLegacyWorkflowStages.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLegacyWorkflowStages.Responses.$200>
  }
  ['/location-schemas']: {
    /**
     * listLocationSchemas - List location schemas
     *
     * List location schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListLocationSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLocationSchemas.Responses.$200>
  }
  ['/location-schemas/{schema_id}']: {
    /**
     * getLocationSchema - Get a location schema by ID
     *
     * Get a location schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetLocationSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetLocationSchema.Responses.$200>
  }
  ['/locations']: {
    /**
     * listLocations - List locations
     *
     * List locations
     */
    'get'(
      parameters?: Parameters<Paths.ListLocations.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLocations.Responses.$200>
    /**
     * createLocation - Create a location
     *
     * Create a location
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateLocation.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateLocation.Responses.$201>
  }
  ['/locations/{location_id}']: {
    /**
     * getLocation - Get a location by ID
     *
     * Get a location by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetLocation.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetLocation.Responses.$200>
    /**
     * updateLocation - Update a location
     *
     * Update a location
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateLocation.PathParameters> | null,
      data?: Paths.UpdateLocation.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateLocation.Responses.$200>
  }
  ['/locations:archive']: {
    /**
     * archiveLocations - Archive locations
     *
     * Archive locations
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveLocations.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveLocations.Responses.$200>
  }
  ['/locations:bulk-get']: {
    /**
     * bulkGetLocations - BulkGet locations
     *
     * BulkGet locations
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetLocations.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetLocations.Responses.$200>
  }
  ['/locations:unarchive']: {
    /**
     * unarchiveLocations - Unarchive locations
     *
     * Unarchive locations
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveLocations.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveLocations.Responses.$200>
  }
  ['/mixtures']: {
    /**
     * listMixtures - List mixtures
     *
     * List mixtures
     */
    'get'(
      parameters?: Parameters<Paths.ListMixtures.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListMixtures.Responses.$200>
    /**
     * createMixture - Create a mixture
     *
     * Create a mixture.
     * To create a new child mixture (eg. a prep) from a parent mixture (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
     * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateMixture.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateMixture.Responses.$201>
  }
  ['/mixtures/{mixture_id}']: {
    /**
     * getMixture - Get a mixture
     *
     * Get a mixture
     */
    'get'(
      parameters?: Parameters<Paths.GetMixture.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetMixture.Responses.$200>
    /**
     * updateMixture - Update a mixture
     *
     * Update a mixture.
     * To change the parent mixture, set the parent mixture field and specify the desired final state for your ingredients.
     * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixture (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
     *
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateMixture.PathParameters> | null,
      data?: Paths.UpdateMixture.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateMixture.Responses.$200>
  }
  ['/mixtures:archive']: {
    /**
     * archiveMixtures - Archive mixtures
     *
     * Archive mixtures
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveMixtures.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveMixtures.Responses.$200>
  }
  ['/mixtures:bulk-create']: {
    /**
     * bulkCreateMixtures - Bulk Create mixtures
     *
     * Create multiple mixtures. Limit of 1000 mixtures per request.
     * To create new child mixtures (eg. a prep) from parent mixtures (eg. a recipe), set the parent mixture field and specify the desired final state for your ingredients.
     * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateMixtures.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateMixtures.Responses.$202>
  }
  ['/mixtures:bulk-update']: {
    /**
     * bulkUpdateMixtures - Bulk Update mixtures
     *
     * Update multiple mixtures.
     * To change the parent mixture on your specified mixtures, set the parent mixture field and specify the desired final state for your ingredients.
     * Benchling will recognize that any ingredients you specify that match ingredients on the parent mixtures (based on component entity) are inherited. This can be seen on the returned `ingredients[i].hasParent` attribute.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateMixtures.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateMixtures.Responses.$202>
  }
  ['/mixtures:unarchive']: {
    /**
     * unarchiveMixtures - Unarchive mixtures
     *
     * Unarchive mixtures
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveMixtures.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveMixtures.Responses.$200>
  }
  ['/molecules']: {
    /**
     * listMolecules - List Molecules
     *
     * List molecules
     */
    'get'(
      parameters?: Parameters<Paths.ListMolecules.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListMolecules.Responses.$200>
    /**
     * createMolecule - Create a Molecule
     *
     * Create a Molecule
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateMolecule.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateMolecule.Responses.$201>
  }
  ['/molecules/{molecule_id}']: {
    /**
     * getMolecule - Get a Molecule
     *
     * Get a Molecule
     */
    'get'(
      parameters?: Parameters<Paths.GetMolecule.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetMolecule.Responses.$200>
    /**
     * updateMolecule - Update a Molecule
     *
     * Update a Molecule
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateMolecule.PathParameters> | null,
      data?: Paths.UpdateMolecule.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateMolecule.Responses.$200>
  }
  ['/molecules:archive']: {
    /**
     * archiveMolecules - Archive Molecules
     *
     * Archive Molecules
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveMolecules.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveMolecules.Responses.$200>
  }
  ['/molecules:bulk-create']: {
    /**
     * bulkCreateMolecules - Bulk Create Molecules
     *
     * Bulk Create Molecules
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateMolecules.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateMolecules.Responses.$202>
  }
  ['/molecules:bulk-update']: {
    /**
     * bulkUpdateMolecules - Bulk Update Molecules
     *
     * Bulk Update Molecules
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateMolecules.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateMolecules.Responses.$202>
  }
  ['/molecules:unarchive']: {
    /**
     * unarchiveMolecules - Unarchive Molecules
     *
     * Unarchive Molecules
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveMolecules.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveMolecules.Responses.$200>
  }
  ['/monomers']: {
    /**
     * listMonomers - List Monomers
     *
     * List all available monomers
     */
    'get'(
      parameters?: Parameters<Paths.ListMonomers.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListMonomers.Responses.$200>
    /**
     * createMonomer - Create a monomer
     *
     * Create a monomer. Not usable by Benchling apps.
     */
    'post'(
      parameters?: Parameters<Paths.CreateMonomer.QueryParameters> | null,
      data?: Paths.CreateMonomer.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateMonomer.Responses.$201>
  }
  ['/monomers/{monomer_id}']: {
    /**
     * updateMonomer - Update a Monomer
     *
     * Update a Monomer. Not usable by Benchling apps.
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateMonomer.PathParameters & Paths.UpdateMonomer.QueryParameters> | null,
      data?: Paths.UpdateMonomer.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateMonomer.Responses.$200>
  }
  ['/monomers:archive']: {
    /**
     * archiveMonomers - Archive Monomers
     *
     * Archive Monomers. Not usable by Benchling apps.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveMonomers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveMonomers.Responses.$200>
  }
  ['/monomers:unarchive']: {
    /**
     * unarchiveMonomers - Unarchive Monomers
     *
     * Unarchive Monomers. Not usable by Benchling apps.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveMonomers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveMonomers.Responses.$200>
  }
  ['/nucleotide-alignments']: {
    /**
     * listNucleotideAlignments - List Nucleotide Alignments
     *
     * List Nucleotide Alignments
     */
    'get'(
      parameters?: Parameters<Paths.ListNucleotideAlignments.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListNucleotideAlignments.Responses.$200>
  }
  ['/nucleotide-alignments/{alignment_id}']: {
    /**
     * deleteNucleotideAlignment - Delete a Nucleotide Alignment
     *
     * Delete a Nucleotide Alignment
     */
    'delete'(
      parameters?: Parameters<Paths.DeleteNucleotideAlignment.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.DeleteNucleotideAlignment.Responses.$200>
    /**
     * getNucleotideAlignment - Get a Nucleotide Alignment
     *
     * Get a Nucleotide Alignment
     */
    'get'(
      parameters?: Parameters<Paths.GetNucleotideAlignment.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetNucleotideAlignment.Responses.$200>
  }
  ['/nucleotide-alignments:create-consensus-alignment']: {
    /**
     * createConsensusNucleotideAlignment - Create a consensus Nucleotide Alignment
     *
     * Create a consensus Nucleotide Alignment
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateConsensusNucleotideAlignment.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateConsensusNucleotideAlignment.Responses.$202>
  }
  ['/nucleotide-alignments:create-template-alignment']: {
    /**
     * createTemplateNucleotideAlignment - Create a template Nucleotide Alignment
     *
     * Create a template Nucleotide Alignment
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateTemplateNucleotideAlignment.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateTemplateNucleotideAlignment.Responses.$202>
  }
  ['/oligos']: {
    /**
     * listOligos - List Oligos
     *
     * List Oligos
     */
    'get'(
      parameters?: Parameters<Paths.ListOligos.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListOligos.Responses.$200>
    /**
     * createOligo - Create an Oligo
     *
     * Create an Oligo
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateOligo.Responses.$201>
  }
  ['/oligos/{oligo_id}']: {
    /**
     * getOligo - Get an Oligo
     *
     * Get an Oligo
     */
    'get'(
      parameters?: Parameters<Paths.GetOligo.PathParameters & Paths.GetOligo.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetOligo.Responses.$200>
    /**
     * updateOligo - Update an Oligo
     *
     * Update an Oligo
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateOligo.PathParameters> | null,
      data?: Paths.UpdateOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateOligo.Responses.$200>
  }
  ['/oligos:archive']: {
    /**
     * archiveOligos - Archive Oligos
     *
     * Archive Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveOligos.Responses.$200>
  }
  ['/oligos:bulk-create']: {
    /**
     * bulkCreateOligos - Bulk Create DNA Oligos
     *
     * Bulk Create DNA Oligos
     * Please migrate to [Bulk Create DNA Oligos](#/DNA%20Oligos/bulkCreateDNAOligos) so that we can support RNA Oligos.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateOligos.Responses.$202>
  }
  ['/oligos:bulk-get']: {
    /**
     * bulkGetOligos - Bulk get Oligos by ID
     *
     * Bulk get Oligos by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetOligos.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetOligos.Responses.$200>
  }
  ['/oligos:unarchive']: {
    /**
     * unarchiveOligos - Unarchive Oligos
     *
     * Unarchive Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveOligos.Responses.$200>
  }
  ['/organizations']: {
    /**
     * listOrganizations - List organizations
     *
     * Returns all organizations that the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of the organization
     *
     */
    'get'(
      parameters?: Parameters<Paths.ListOrganizations.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListOrganizations.Responses.$200>
  }
  ['/organizations/{organization_id}']: {
    /**
     * getOrganization - Get an organization by ID
     *
     * Returns an organization by ID if the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of the organization
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetOrganization.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetOrganization.Responses.$200>
  }
  ['/plate-schemas']: {
    /**
     * listPlateSchemas - List plate schemas
     *
     * List plate schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListPlateSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListPlateSchemas.Responses.$200>
  }
  ['/plate-schemas/{schema_id}']: {
    /**
     * getPlateSchema - Get a plate schema by ID
     *
     * Get a plate schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetPlateSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetPlateSchema.Responses.$200>
  }
  ['/plates']: {
    /**
     * listPlates - List plates
     *
     * List plates
     */
    'get'(
      parameters?: Parameters<Paths.ListPlates.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListPlates.Responses.$200>
    /**
     * createPlate - Create a plate
     *
     * Create a plate
     */
    'post'(
      parameters?: Parameters<Paths.CreatePlate.QueryParameters> | null,
      data?: Paths.CreatePlate.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreatePlate.Responses.$201>
  }
  ['/plates/{plate_id}']: {
    /**
     * getPlate - Get a plate
     *
     * Get a plate
     */
    'get'(
      parameters?: Parameters<Paths.GetPlate.PathParameters & Paths.GetPlate.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetPlate.Responses.$200>
    /**
     * updatePlate - Update a plate
     *
     * Update a plate
     */
    'patch'(
      parameters?: Parameters<Paths.UpdatePlate.PathParameters & Paths.UpdatePlate.QueryParameters> | null,
      data?: Paths.UpdatePlate.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdatePlate.Responses.$200>
  }
  ['/plates:archive']: {
    /**
     * archivePlates - Archive plates
     *
     * Archive plates and any containers of the plates
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchivePlates.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchivePlates.Responses.$200>
  }
  ['/plates:bulk-get']: {
    /**
     * bulkGetPlates - BulkGet plates
     *
     * BulkGet plates
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetPlates.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetPlates.Responses.$200>
  }
  ['/plates:unarchive']: {
    /**
     * unarchivePlates - Unarchive plates
     *
     * Unarchive plates and the containers that were archived along with them
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchivePlates.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchivePlates.Responses.$200>
  }
  ['/projects']: {
    /**
     * listProjects - List projects
     *
     * List projects
     */
    'get'(
      parameters?: Parameters<Paths.ListProjects.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListProjects.Responses.$200>
  }
  ['/projects/{project_id}']: {
    /**
     * getProject - Get a project by ID
     *
     * Get a project by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetProject.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetProject.Responses.$200>
  }
  ['/projects:archive']: {
    /**
     * archiveProjects - Archive projects
     *
     * Archives projects and their contents
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveProjects.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveProjects.Responses.$200>
  }
  ['/projects:unarchive']: {
    /**
     * unarchiveProjects - Unarchive projects
     *
     * Unarchives projects and the contents that were archived along with them
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveProjects.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveProjects.Responses.$200>
  }
  ['/registries']: {
    /**
     * listRegistries - List registries
     *
     * List registries
     */
    'get'(
      parameters?: Parameters<Paths.ListRegistries.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRegistries.Responses.$200>
  }
  ['/registries/{registry_id}']: {
    /**
     * getRegistry - Get registry
     *
     * Get registry
     */
    'get'(
      parameters?: Parameters<Paths.GetRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/batch-schemas']: {
    /**
     * listBatchSchemasByRegistry - List batch schemas by registry
     *
     * List batch schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListBatchSchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBatchSchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/box-schemas']: {
    /**
     * listBoxSchemasByRegistry - List box schemas by registry
     *
     * List box schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListBoxSchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListBoxSchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/container-schemas']: {
    /**
     * listContainerSchemasByRegistry - List container schemas by registry
     *
     * List container schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListContainerSchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListContainerSchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/dropdowns']: {
    /**
     * listDropdownsByRegistry - List dropdowns for a given registry
     *
     * List dropdowns by registry
     */
    'get'(
      parameters?: Parameters<Paths.ListDropdownsByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListDropdownsByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/entity-schemas']: {
    /**
     * listEntitySchemasByRegistry - List entity schemas by registry
     *
     * List entity schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListEntitySchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListEntitySchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/label-printers']: {
    /**
     * listPrinters - List printers
     *
     * List printers
     */
    'get'(
      parameters?: Parameters<Paths.ListPrinters.PathParameters & Paths.ListPrinters.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListPrinters.Responses.$200>
  }
  ['/registries/{registry_id}/label-templates']: {
    /**
     * listLabelTemplates - List label templates
     *
     * List label templates
     */
    'get'(
      parameters?: Parameters<Paths.ListLabelTemplates.PathParameters & Paths.ListLabelTemplates.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLabelTemplates.Responses.$200>
  }
  ['/registries/{registry_id}/location-schemas']: {
    /**
     * listLocationSchemasByRegistry - List location schemas by registry
     *
     * List location schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListLocationSchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListLocationSchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/plate-schemas']: {
    /**
     * listPlateSchemasByRegistry - List plate schemas by registry
     *
     * List plate schemas by registry. Deprecated - use Schemas endpoints instead.
     */
    'get'(
      parameters?: Parameters<Paths.ListPlateSchemasByRegistry.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListPlateSchemasByRegistry.Responses.$200>
  }
  ['/registries/{registry_id}/registered-entities:bulk-get']: {
    /**
     * bulkGetRegisteredEntities - Bulk get registered entities
     *
     * Bulk get registered entities
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetRegisteredEntities.PathParameters & Paths.BulkGetRegisteredEntities.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetRegisteredEntities.Responses.$200>
  }
  ['/registries/{registry_id}:bulk-register-entities']: {
    /**
     * registerEntities - Register entities
     *
     * Attempts to move entities into the registry. Limit of 2500 entities per request. This endpoint will first check that the entities are all valid to be moved into the registry, given the namingStrategy. If any entities fail validation, no files will be moved and errors describing invalid entities is returned. If all entities pass validation, the entities are moved into the registry.
     *
     */
    'post'(
      parameters?: Parameters<Paths.RegisterEntities.PathParameters> | null,
      data?: Paths.RegisterEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.RegisterEntities.Responses.$202>
  }
  ['/registries/{registry_id}:unregister-entities']: {
    /**
     * unregisterEntities - Unregister entities
     *
     * Unregisters entities and moves them to a folder
     */
    'post'(
      parameters?: Parameters<Paths.UnregisterEntities.PathParameters> | null,
      data?: Paths.UnregisterEntities.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnregisterEntities.Responses.$200>
  }
  ['/registries/{registry_id}:validate-barcodes']: {
    /**
     * validateBarcodes - Validate barcodes
     *
     * Validate barcodes on inventory objects.
     */
    'post'(
      parameters?: Parameters<Paths.ValidateBarcodes.PathParameters> | null,
      data?: Paths.ValidateBarcodes.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ValidateBarcodes.Responses.$200>
  }
  ['/request-fulfillments']: {
    /**
     * listRequestFulfillments - List Request Fulfillments
     *
     * List Request Fulfillments
     */
    'get'(
      parameters?: Parameters<Paths.ListRequestFulfillments.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRequestFulfillments.Responses.$200>
  }
  ['/request-fulfillments/{request_fulfillment_id}']: {
    /**
     * getRequestFulfillment - Get a request's fulfillment
     *
     * Get a request's fulfillment
     */
    'get'(
      parameters?: Parameters<Paths.GetRequestFulfillment.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRequestFulfillment.Responses.$200>
  }
  ['/request-schemas']: {
    /**
     * listRequestSchemas - List request schemas
     *
     * List request schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListRequestSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRequestSchemas.Responses.$200>
  }
  ['/request-schemas/{schema_id}']: {
    /**
     * getRequestSchema - Get a Request schema by ID
     *
     * Get a Request schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetRequestSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRequestSchema.Responses.$200>
  }
  ['/request-task-schemas']: {
    /**
     * listRequestTaskSchemas - List request task schemas
     *
     * List request task schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListRequestTaskSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRequestTaskSchemas.Responses.$200>
  }
  ['/request-task-schemas/{schema_id}']: {
    /**
     * getRequestTaskSchema - Get a Request Task schema by ID
     *
     * Get a Request Task schema by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetRequestTaskSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRequestTaskSchema.Responses.$200>
  }
  ['/requests']: {
    /**
     * listRequests - List requests
     *
     * List requests
     */
    'get'(
      parameters?: Parameters<Paths.ListRequests.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRequests.Responses.$200>
    /**
     * createRequest - Create a request
     *
     * Create a request
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateRequest.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateRequest.Responses.$201>
  }
  ['/requests/{request_id}']: {
    /**
     * getRequest - Get a request by ID
     *
     * Get a request by ID
     */
    'get'(
      parameters?: Parameters<Paths.GetRequest.PathParameters & Paths.GetRequest.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRequest.Responses.$200>
    /**
     * patchRequest - Update a request
     *
     * Update a request
     */
    'patch'(
      parameters?: Parameters<Paths.PatchRequest.PathParameters> | null,
      data?: Paths.PatchRequest.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.PatchRequest.Responses.$200>
  }
  ['/requests/{request_id}/response']: {
    /**
     * getRequestResponse - Get a request's response
     *
     * Get a request's response
     */
    'get'(
      parameters?: Parameters<Paths.GetRequestResponse.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRequestResponse.Responses.$200>
  }
  ['/requests/{request_id}/tasks:bulk-create']: {
    /**
     * bulkCreateRequestTasks - Create tasks for a request
     *
     * Create tasks for a request
     */
    'post'(
      parameters?: Parameters<Paths.BulkCreateRequestTasks.PathParameters> | null,
      data?: Paths.BulkCreateRequestTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateRequestTasks.Responses.$200>
  }
  ['/requests/{request_id}/tasks:bulk-update']: {
    /**
     * bulkUpdateRequestTasks - Bulk update tasks for a request
     *
     * Bulk update tasks for a request
     */
    'post'(
      parameters?: Parameters<Paths.BulkUpdateRequestTasks.PathParameters> | null,
      data?: Paths.BulkUpdateRequestTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateRequestTasks.Responses.$200>
  }
  ['/requests/{request_id}:execute-sample-groups']: {
    /**
     * executeRequestsSampleGroups - Update the status of sample groups in a request
     *
     * Update the status of sample groups in a request
     */
    'post'(
      parameters?: Parameters<Paths.ExecuteRequestsSampleGroups.PathParameters> | null,
      data?: Paths.ExecuteRequestsSampleGroups.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ExecuteRequestsSampleGroups.Responses.$200>
  }
  ['/requests:bulk-get']: {
    /**
     * bulkGetRequests - Bulk get requests
     *
     * Bulk get requests by API ID or display ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetRequests.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetRequests.Responses.$200>
  }
  ['/result-transactions']: {
    /**
     * createAssayResultsTransaction - Create a transaction
     *
     * Transactions allow results to be upload in multiple requests. This endpoint lets you create a transaction. You can then upload results to the transaction, abort the transaction, or commit the transaction.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAssayResultsTransaction.Responses.$200>
  }
  ['/result-transactions/{transaction_id}/results']: {
    /**
     * createAssayResultsInTransaction - Create results in a transaction
     *
     * Create results in a transaction
     */
    'post'(
      parameters?: Parameters<Paths.CreateAssayResultsInTransaction.PathParameters> | null,
      data?: Paths.CreateAssayResultsInTransaction.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateAssayResultsInTransaction.Responses.$200>
  }
  ['/result-transactions/{transaction_id}:abort']: {
    /**
     * abortAssayResultsTransaction - Abort a transaction
     *
     * Aborting a transaction will discard all uploaded results.
     */
    'post'(
      parameters?: Parameters<Paths.AbortAssayResultsTransaction.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AbortAssayResultsTransaction.Responses.$200>
  }
  ['/result-transactions/{transaction_id}:commit']: {
    /**
     * commitAssayResultsTransaction - Commit a transaction
     *
     * Committing a transaction will cause all results that have been uploaded to be saved and visible to others.
     */
    'post'(
      parameters?: Parameters<Paths.CommitAssayResultsTransaction.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CommitAssayResultsTransaction.Responses.$200>
  }
  ['/rna-oligos']: {
    /**
     * listRNAOligos - List RNA Oligos
     *
     * List RNA Oligos
     */
    'get'(
      parameters?: Parameters<Paths.ListRNAOligos.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRNAOligos.Responses.$200>
    /**
     * createRNAOligo - Create an RNA Oligo
     *
     * Create an RNA Oligo
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateRNAOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateRNAOligo.Responses.$201>
  }
  ['/rna-oligos/{oligo_id}']: {
    /**
     * getRNAOligo - Get an RNA Oligo
     *
     * Get an RNA Oligo
     */
    'get'(
      parameters?: Parameters<Paths.GetRNAOligo.PathParameters & Paths.GetRNAOligo.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRNAOligo.Responses.$200>
    /**
     * updateRNAOligo - Update an RNA Oligo
     *
     * Update an RNA Oligo
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateRNAOligo.PathParameters> | null,
      data?: Paths.UpdateRNAOligo.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateRNAOligo.Responses.$200>
  }
  ['/rna-oligos:archive']: {
    /**
     * archiveRNAOligos - Archive RNA Oligos
     *
     * Archive RNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveRNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveRNAOligos.Responses.$200>
  }
  ['/rna-oligos:bulk-create']: {
    /**
     * bulkCreateRNAOligos - Bulk Create RNA Oligos
     *
     * Bulk Create RNA Oligos. Limit of 1000 RNA Oligos per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateRNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateRNAOligos.Responses.$202>
  }
  ['/rna-oligos:bulk-update']: {
    /**
     * bulkUpdateRNAOligos - Bulk Update RNA Oligos
     *
     * Bulk Update RNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateRNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateRNAOligos.Responses.$202>
  }
  ['/rna-oligos:unarchive']: {
    /**
     * unarchiveRNAOligos - Unarchive RNA Oligos
     *
     * Unarchive RNA Oligos
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveRNAOligos.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveRNAOligos.Responses.$200>
  }
  ['/rna-sequences']: {
    /**
     * listRNASequences - List RNA sequences
     *
     * List RNA sequences
     */
    'get'(
      parameters?: Parameters<Paths.ListRNASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListRNASequences.Responses.$200>
    /**
     * createRNASequence - Create an RNA sequence
     *
     * Create an RNA sequence
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateRNASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateRNASequence.Responses.$201>
  }
  ['/rna-sequences/{rna_sequence_id}']: {
    /**
     * getRNASequence - Get an RNA sequence
     *
     * Get an RNA sequence
     */
    'get'(
      parameters?: Parameters<Paths.GetRNASequence.PathParameters & Paths.GetRNASequence.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetRNASequence.Responses.$200>
    /**
     * updateRNASequence - Update an RNA sequence
     *
     * Update an RNA sequence
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateRNASequence.PathParameters> | null,
      data?: Paths.UpdateRNASequence.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateRNASequence.Responses.$200>
  }
  ['/rna-sequences:archive']: {
    /**
     * archiveRNASequences - Archive RNA Sequences
     *
     * Archive RNA Sequences. RNA sequences that are already registered will not be removed from the registry.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveRNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveRNASequences.Responses.$200>
  }
  ['/rna-sequences:auto-annotate']: {
    /**
     * autoAnnotateRnaSequences - Auto-annotate RNA sequences with matching features from specified Feature Libraries
     *
     * Auto-annotate RNA sequences with matching features from specified Feature Libraries. U/T bases are treated as interchangeable in both features and sequences.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutoAnnotateRnaSequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutoAnnotateRnaSequences.Responses.$202>
  }
  ['/rna-sequences:autofill-parts']: {
    /**
     * autofillRNASequenceParts - Autofill RNA sequence parts
     *
     * Autofill parts from matching RNA Sequences with linked schemas.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutofillRNASequenceParts.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutofillRNASequenceParts.Responses.$202>
  }
  ['/rna-sequences:autofill-translations']: {
    /**
     * autofillRNASequenceTranslations - Autofill RNA sequence translations from Amino Acid sequences with matching schemas
     *
     * Autofill RNA sequence translations
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.AutofillRNASequenceTranslations.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.AutofillRNASequenceTranslations.Responses.$202>
  }
  ['/rna-sequences:bulk-create']: {
    /**
     * bulkCreateRNASequences - Bulk Create RNA sequences
     *
     * Bulk Create RNA sequences. Limit of 1000 RNA Sequences per request.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateRNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateRNASequences.Responses.$202>
  }
  ['/rna-sequences:bulk-get']: {
    /**
     * bulkGetRNASequences - Bulk get RNA sequences by ID
     *
     * Bulk get RNA sequences by ID
     */
    'get'(
      parameters?: Parameters<Paths.BulkGetRNASequences.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkGetRNASequences.Responses.$200>
  }
  ['/rna-sequences:bulk-update']: {
    /**
     * bulkUpdateRNASequences - Bulk Update RNA sequences
     *
     * Bulk Update RNA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateRNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateRNASequences.Responses.$202>
  }
  ['/rna-sequences:unarchive']: {
    /**
     * unarchiveRNASequences - Unarchive RNA sequences
     *
     * Unarchive RNA sequences
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveRNASequences.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveRNASequences.Responses.$200>
  }
  ['/tasks/{task_id}']: {
    /**
     * getTask - Get a task by id
     *
     * Get a task by id
     */
    'get'(
      parameters?: Parameters<Paths.GetTask.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetTask.Responses.$200>
  }
  ['/teams']: {
    /**
     * listTeams - List teams
     *
     * Returns all teams that the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of the team's organization
     *
     */
    'get'(
      parameters?: Parameters<Paths.ListTeams.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListTeams.Responses.$200>
  }
  ['/teams/{team_id}']: {
    /**
     * getTeam - Get a team by ID
     *
     * Returns a team by ID if the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of the team's organization
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetTeam.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetTeam.Responses.$200>
  }
  ['/token']: {
    /**
     * generateToken - Generate a token for usage with authenticating via OAuth2 in subsequent API calls.
     *
     * Generate a token
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.GenerateToken.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GenerateToken.Responses.$200>
  }
  ['/transfers']: {
    /**
     * transferIntoContainers - Transfers into containers
     *
     * Transfers a volume of an entity, batch, or container into a destination container. Limit of 5000 transfers per request. Concentration of all contents in the destination container will be automatically updated based on the previous volume & concentrations of the contents in that container, the concentration of the contents being transferred in, the volume of the contents being transferred in, and the final volume of the container. If no concentration is specified, the concentration will not be tracked.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.TransferIntoContainers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.TransferIntoContainers.Responses.$202>
  }
  ['/users']: {
    /**
     * listUsers - List users
     *
     * Returns all users that the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of the user's organizations
     *
     */
    'get'(
      parameters?: Parameters<Paths.ListUsers.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListUsers.Responses.$200>
    /**
     * createUser - Create a user
     *
     * Creates a single user.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateUser.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateUser.Responses.$201>
  }
  ['/users/{user_id}']: {
    /**
     * getUser - Get a user by ID
     *
     * Returns a user by ID if the caller has permission to view. The following roles have view permission:
     *   - tenant admins
     *   - members of any of the user's organizations
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetUser.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetUser.Responses.$200>
    /**
     * updateUser - Update a user by ID
     *
     * Update a single user.
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateUser.PathParameters> | null,
      data?: Paths.UpdateUser.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateUser.Responses.$200>
  }
  ['/users/{user_id}/activity']: {
    /**
     * getUserActivity - Last user activity
     *
     * Returns activity metadata for a specific user by ID. This currently includes lastSeen data.
     *
     */
    'get'(
      parameters?: Parameters<Paths.GetUserActivity.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetUserActivity.Responses.$200>
  }
  ['/users:bulk-create']: {
    /**
     * bulkCreateUsers - Bulk Create Users
     *
     * Bulk Create Users.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateUsers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateUsers.Responses.$202>
  }
  ['/users:bulk-update']: {
    /**
     * bulkUpdateUsers - Bulk Update Users.
     *
     * There is currently **no support** for swapping emails or handles between existing users in the same request.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateUsers.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateUsers.Responses.$202>
  }
  ['/warehouse-credentials']: {
    /**
     * createWarehouseCredentials - Create Benchling Warehouse credentials
     *
     * Allows for programmatically generating credentials to connect to the Benchling warehouse. You must have a warehouse configured to access this endpoint.
     * The credentials will authenticate as the same user calling the API.
     * Note that expiresIn is required - only temporary credentials are currently allowed.
     *
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateWarehouseCredentials.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateWarehouseCredentials.Responses.$200>
  }
  ['/workflow-outputs']: {
    /**
     * listWorkflowOutputs - List workflow outputs
     *
     * List workflow outputs
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowOutputs.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowOutputs.Responses.$200>
    /**
     * createWorkflowOutput - Create a new workflow output
     *
     * Create a new workflow output
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateWorkflowOutput.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateWorkflowOutput.Responses.$201>
  }
  ['/workflow-outputs/{workflow_output_id}']: {
    /**
     * getWorkflowOutput - Get a workflow output
     *
     * Get a workflow output
     */
    'get'(
      parameters?: Parameters<Paths.GetWorkflowOutput.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetWorkflowOutput.Responses.$200>
    /**
     * updateWorkflowOutput - Update a workflow output
     *
     * Update a workflow output
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateWorkflowOutput.PathParameters> | null,
      data?: Paths.UpdateWorkflowOutput.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateWorkflowOutput.Responses.$200>
  }
  ['/workflow-outputs:archive']: {
    /**
     * archiveWorkflowOutputs - Archive one or more workflow outputs
     *
     * Archive one or more workflow outputs
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveWorkflowOutputs.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveWorkflowOutputs.Responses.$200>
  }
  ['/workflow-outputs:bulk-create']: {
    /**
     * bulkCreateWorkflowOutputs - Bulk create new workflow outputs
     *
     * Bulk create new workflow outputs
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateWorkflowOutputs.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateWorkflowOutputs.Responses.$202>
  }
  ['/workflow-outputs:bulk-update']: {
    /**
     * bulkUpdateWorkflowOutputs - Bulk update workflow outputs
     *
     * Bulk update workflow outputs
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateWorkflowOutputs.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateWorkflowOutputs.Responses.$202>
  }
  ['/workflow-outputs:unarchive']: {
    /**
     * unarchiveWorkflowOutputs - Unarchive one or more workflow outputs
     *
     * Unarchive one or more workflow outputs
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveWorkflowOutputs.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveWorkflowOutputs.Responses.$200>
  }
  ['/workflow-stage-runs/{stage_run_id}/input-samples']: {
    /**
     * listStageRunInputSamples - List stage run input samples
     *
     * List stage run input samples
     */
    'get'(
      parameters?: Parameters<Paths.ListStageRunInputSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListStageRunInputSamples.Responses.$200>
  }
  ['/workflow-stage-runs/{stage_run_id}/output-samples']: {
    /**
     * listStageRunOutputSamples - List stage run output samples
     *
     * List stage run output samples
     */
    'get'(
      parameters?: Parameters<Paths.ListStageRunOutputSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListStageRunOutputSamples.Responses.$200>
  }
  ['/workflow-stage-runs/{stage_run_id}/registered-samples']: {
    /**
     * listStageRunRegisteredSamples - List stage run registered samples
     *
     * List stage run registered samples
     */
    'get'(
      parameters?: Parameters<Paths.ListStageRunRegisteredSamples.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListStageRunRegisteredSamples.Responses.$200>
  }
  ['/workflow-stages/{stage_id}/workflow-stage-runs']: {
    /**
     * listWorkflowStageRuns - List workflow stage runs
     *
     * List workflow stage runs
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowStageRuns.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowStageRuns.Responses.$200>
  }
  ['/workflow-task-groups']: {
    /**
     * listWorkflowTaskGroups - List workflow task groups
     *
     * List workflow task groups
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowTaskGroups.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowTaskGroups.Responses.$200>
    /**
     * createWorkflowTaskGroup - Create a new workflow task group
     *
     * Create a new workflow task group. If no name is specified, uses the workflow schema name and a unique incrementor separated by a single whitespace.
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateWorkflowTaskGroup.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateWorkflowTaskGroup.Responses.$201>
  }
  ['/workflow-task-groups/{workflow_task_group_id}']: {
    /**
     * getWorkflowTaskGroup - Get a workflow task group
     *
     * Get a workflow task group
     */
    'get'(
      parameters?: Parameters<Paths.GetWorkflowTaskGroup.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetWorkflowTaskGroup.Responses.$200>
    /**
     * updateWorkflowTaskGroup - Update a workflow task group
     *
     * Update a workflow task group
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateWorkflowTaskGroup.PathParameters> | null,
      data?: Paths.UpdateWorkflowTaskGroup.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateWorkflowTaskGroup.Responses.$200>
  }
  ['/workflow-task-groups:archive']: {
    /**
     * archiveWorkflowTaskGroups - Archive one or more workflows
     *
     * Archive one or more workflows
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveWorkflowTaskGroups.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveWorkflowTaskGroups.Responses.$200>
  }
  ['/workflow-task-groups:unarchive']: {
    /**
     * unarchiveWorkflowTaskGroups - Unarchive one or more workflows
     *
     * Unarchive one or more workflows
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveWorkflowTaskGroups.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveWorkflowTaskGroups.Responses.$200>
  }
  ['/workflow-task-schemas']: {
    /**
     * listWorkflowTaskSchemas - List workflow task schemas
     *
     * List workflow task schemas
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowTaskSchemas.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowTaskSchemas.Responses.$200>
  }
  ['/workflow-task-schemas/{schema_id}']: {
    /**
     * getWorkflowTaskSchema - Get a workflow task schema
     *
     * Get a workflow task schema
     */
    'get'(
      parameters?: Parameters<Paths.GetWorkflowTaskSchema.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetWorkflowTaskSchema.Responses.$200>
  }
  ['/workflow-tasks']: {
    /**
     * listWorkflowTasks - List workflow tasks
     *
     * List workflow tasks
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowTasks.QueryParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowTasks.Responses.$200>
    /**
     * createWorkflowTask - Create a new workflow task
     *
     * Create a new workflow task
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.CreateWorkflowTask.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CreateWorkflowTask.Responses.$201>
  }
  ['/workflow-tasks/{workflow_task_id}']: {
    /**
     * getWorkflowTask - Get a workflow task
     *
     * Get a workflow task
     */
    'get'(
      parameters?: Parameters<Paths.GetWorkflowTask.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.GetWorkflowTask.Responses.$200>
    /**
     * updateWorkflowTask - Update a workflow task
     *
     * Update a workflow task
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateWorkflowTask.PathParameters> | null,
      data?: Paths.UpdateWorkflowTask.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateWorkflowTask.Responses.$200>
  }
  ['/workflow-tasks/{workflow_task_id}:copy']: {
    /**
     * copyWorkflowTask - Creates a new workflow task with the same fields and assignee as the provided task and creates a relationship between the two tasks
     *
     *
     * Creates a new workflow task based on the provided task
     */
    'post'(
      parameters?: Parameters<Paths.CopyWorkflowTask.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.CopyWorkflowTask.Responses.$201>
  }
  ['/workflow-tasks:archive']: {
    /**
     * archiveWorkflowTasks - Archive one or more workflow tasks
     *
     * Archive one or more workflow tasks
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.ArchiveWorkflowTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ArchiveWorkflowTasks.Responses.$200>
  }
  ['/workflow-tasks:bulk-copy']: {
    /**
     * bulkCopyWorkflowTasks - Bulk creates new workflow tasks where each new task has the same fields and assignee as one of the provided tasks and creates a relationship between the provided task and its copy
     *
     *
     * Bulk creates new workflow tasks based on the provided tasks
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCopyWorkflowTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCopyWorkflowTasks.Responses.$202>
  }
  ['/workflow-tasks:bulk-create']: {
    /**
     * bulkCreateWorkflowTasks - Create one or more workflow tasks
     *
     * Create one or more workflow tasks
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkCreateWorkflowTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkCreateWorkflowTasks.Responses.$202>
  }
  ['/workflow-tasks:bulk-update']: {
    /**
     * bulkUpdateWorkflowTasks - Update one or more workflow task
     *
     * Update one or more workflow tasks
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.BulkUpdateWorkflowTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.BulkUpdateWorkflowTasks.Responses.$202>
  }
  ['/workflow-tasks:unarchive']: {
    /**
     * unarchiveWorkflowTasks - Unarchive one or more workflow tasks
     *
     * Unarchive one or more workflow tasks
     */
    'post'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: Paths.UnarchiveWorkflowTasks.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UnarchiveWorkflowTasks.Responses.$200>
  }
  ['/workflows']: {
    /**
     * listWorkflows - List workflows
     *
     * List workflows
     */
    'get'(
      parameters?: Parameters<UnknownParamsObject> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflows.Responses.$200>
  }
  ['/workflows/{workflow_id}']: {
    /**
     * UpdateWorkflowMetadata - Update workflow
     *
     * Update workflow metadata
     */
    'patch'(
      parameters?: Parameters<Paths.UpdateWorkflowMetadata.PathParameters> | null,
      data?: Paths.UpdateWorkflowMetadata.RequestBody,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.UpdateWorkflowMetadata.Responses.$200>
  }
  ['/workflows/{workflow_id}/workflow-stages']: {
    /**
     * listWorkflowStages - List workflow stages
     *
     * List workflow stages
     */
    'get'(
      parameters?: Parameters<Paths.ListWorkflowStages.PathParameters> | null,
      data?: any,
      config?: AxiosRequestConfig
    ): OperationResponse<Paths.ListWorkflowStages.Responses.$200>
  }
}

export type Client = OpenAPIClient<OperationMethods, PathsDictionary>
